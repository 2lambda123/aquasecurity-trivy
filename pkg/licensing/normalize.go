package licensing

import (
	"regexp"
	"strings"
)

var mapping = make(map[string]string)

func addMap(name, license string) {
	key, _ := normalizeKeyAndSuffix(name)
	if key != name {
		panic("Invalid license: " + name)
	}
	mapping[name] = license
}

// Note: -only and -or-later GNU licenses could also be matched with new SPDX ids such as GPL-3.0-only,
// if they are added to category.go but they are not supported by google/licenseclassifier
func init() {
	// Simple mappings (i.e. that could be parsed by SpdxExpression.parse, at least without space)
	// modified from https://github.com/oss-review-toolkit/ort/blob/fc5389c2cfd9c8b009794c8a11f5c91321b7a730/utils/spdx/src/main/resources/simple-license-mapping.yml

	// Ambiguous simple mappings (mapping reason not obvious without additional information)
	addMap("AFL", AFL30)
	addMap("AGPL", AGPL30)
	addMap("ALV2", Apache20)
	addMap("APACHE", Apache20)
	addMap("APACHE-STYLE", Apache20)
	addMap("ARTISTIC", Artistic20)
	addMap("ASL", Apache20)
	addMap("BSD", BSD3Clause)
	addMap("BSD*", BSD3Clause)
	addMap("BSD-LIKE", BSD3Clause)
	addMap("BSD-STYLE", BSD3Clause)
	addMap("BSD-VARIANT", BSD3Clause)
	addMap("CDDL", CDDL10)
	addMap("ECLIPSE", EPL10)
	addMap("EPL", EPL10)
	addMap("EUPL", EUPL10)
	addMap("FDL", GFDL13)
	addMap("GFDL", GFDL13)
	addMap("GPL", GPL20)
	addMap("LGPL", LGPL20)
	addMap("MPL", MPL20)
	addMap("NETSCAPE", NPL11)
	addMap("PYTHON", Python20)

	// Non-ambiguous simple mappings
	addMap("0BSD", ZeroBSD)
	addMap("AFL-1.1", AFL11)
	addMap("AFL-1.2", AFL12)
	addMap("AFL-2", AFL20)
	addMap("AFL-2.0", AFL20)
	addMap("AFL-2.1", AFL21)
	addMap("AFL-3.0", AFL30)
	addMap("AFL2", AFL20)
	addMap("AFL2.0", AFL20)
	addMap("AFL2.1", AFL21)
	addMap("AGPL-1.0", AGPL10)
	addMap("AGPL-3.0", AGPL30)
	addMap("APACHE-1.0", Apache10)
	addMap("APACHE-1.1", Apache11)
	addMap("APACHE-2", Apache20)
	addMap("APACHE-2.0", Apache20)
	addMap("APACHE2", Apache20)
	addMap("APACHE2.0", Apache20)
	addMap("APACHEV2", Apache20)
	addMap("APL2", Apache20)
	addMap("APLV2.0", Apache20)
	addMap("APSL-1.0", APSL10)
	addMap("APSL-1.1", APSL11)
	addMap("APSL-1.2", APSL12)
	addMap("APSL-2.0", APSL20)
	addMap("ARTISTIC-1.0", Artistic10)
	addMap("ARTISTIC-1.0-CL8", Artistic10cl8)
	addMap("ARTISTIC-1.0-PERL", Artistic10Perl)
	addMap("ARTISTIC-2.0", Artistic20)
	addMap("BCL", BCL)
	addMap("BEERWARE", Beerware)
	addMap("BOOST", BSL10)
	addMap("BOUNCY", MIT)
	addMap("BSD-2-CLAUSE", BSD2Clause)
	addMap("BSD-2-CLAUSE-FREEBSD", BSD2ClauseFreeBSD)
	addMap("BSD-2-CLAUSE-NETBSD", BSD2ClauseNetBSD)
	addMap("BSD-3", BSD3Clause)
	addMap("BSD-3-CLAUSE", BSD3Clause)
	addMap("BSD-3-CLAUSE-ATTRIBUTION", BSD3ClauseAttribution)
	addMap("BSD-3-CLAUSE-CLEAR", BSD3ClauseClear)
	addMap("BSD-3-CLAUSE-LBNL", BSD3ClauseLBNL)
	addMap("BSD-4-CLAUSE", BSD4Clause)
	addMap("BSD-4-CLAUSE-UC", BSD4ClauseUC)
	addMap("BSD-PROTECTION", BSDProtection)
	addMap("BSD2", BSD2Clause)
	addMap("BSD3", BSD3Clause)
	addMap("BSL", BSL10)
	addMap("BSL-1.0", BSL10)
	addMap("BSL1.0", BSL10)
	addMap("CC-BY-1.0", CCBY10)
	addMap("CC-BY-2.0", CCBY20)
	addMap("CC-BY-2.5", CCBY25)
	addMap("CC-BY-3.0", CCBY30)
	addMap("CC-BY-4.0", CCBY40)
	addMap("CC-BY-NC-1.0", CCBYNC10)
	addMap("CC-BY-NC-2.0", CCBYNC20)
	addMap("CC-BY-NC-2.5", CCBYNC25)
	addMap("CC-BY-NC-3.0", CCBYNC30)
	addMap("CC-BY-NC-4.0", CCBYNC40)
	addMap("CC-BY-NC-ND-1.0", CCBYNCND10)
	addMap("CC-BY-NC-ND-2.0", CCBYNCND20)
	addMap("CC-BY-NC-ND-2.5", CCBYNCND25)
	addMap("CC-BY-NC-ND-3.0", CCBYNCND30)
	addMap("CC-BY-NC-ND-4.0", CCBYNCND40)
	addMap("CC-BY-NC-SA-1.0", CCBYNCSA10)
	addMap("CC-BY-NC-SA-2.0", CCBYNCSA20)
	addMap("CC-BY-NC-SA-2.5", CCBYNCSA25)
	addMap("CC-BY-NC-SA-3.0", CCBYNCSA30)
	addMap("CC-BY-NC-SA-4.0", CCBYNCSA40)
	addMap("CC-BY-ND-1.0", CCBYND10)
	addMap("CC-BY-ND-2.0", CCBYND20)
	addMap("CC-BY-ND-2.5", CCBYND25)
	addMap("CC-BY-ND-3.0", CCBYND30)
	addMap("CC-BY-ND-4.0", CCBYND40)
	addMap("CC-BY-SA-1.0", CCBYSA10)
	addMap("CC-BY-SA-2.0", CCBYSA20)
	addMap("CC-BY-SA-2.5", CCBYSA25)
	addMap("CC-BY-SA-3.0", CCBYSA30)
	addMap("CC-BY-SA-4.0", CCBYSA40)
	addMap("CC0", CC010)
	addMap("CC0-1.0", CC010)
	addMap("CDDL-1.0", CDDL10)
	addMap("CDDL-1.1", CDDL11)
	addMap("CDDL1.0", CDDL10)
	addMap("CDDL1.1", CDDL11)
	addMap("COMMONS-CLAUSE", CommonsClause)
	addMap("CPAL", CPAL10)
	addMap("CPAL-1.0", CPAL10)
	addMap("CPL", CPL10)
	addMap("CPL-1.0", CPL10)
	addMap("EDL-1.0", BSD3Clause)
	addMap("EGENIX", EGenix)
	addMap("EPL-1.0", EPL10)
	addMap("EPL-2.0", EPL20)
	addMap("EPL1.0", EPL10)
	addMap("EPL2.0", EPL20)
	addMap("EUPL-1.0", EUPL10)
	addMap("EUPL-1.1", EUPL11)
	addMap("EUPL1.0", EUPL10)
	addMap("EUPL1.1", EUPL11)
	addMap("EXPAT", MIT)
	addMap("FACEBOOK-2-CLAUSE", Facebook2Clause)
	addMap("FACEBOOK-3-CLAUSE", Facebook3Clause)
	addMap("FACEBOOK-EXAMPLES", FacebookExamples)
	addMap("FREEIMAGE", FreeImage)
	addMap("FTL", FTL)
	addMap("GFDL-1.1", GFDL11)
	addMap("GFDL-1.1-INVARIANTS", GFDL11WithInvariants)
	addMap("GFDL-1.1-NO-INVARIANTS", GFDL11NoInvariants)
	addMap("GFDL-1.2", GFDL12)
	addMap("GFDL-1.2-INVARIANTS", GFDL12WithInvariants)
	addMap("GFDL-1.2-NO-INVARIANTS", GFDL12NoInvariants)
	addMap("GFDL-1.3", GFDL13)
	addMap("GFDL-1.3-INVARIANTS", GFDL13WithInvariants)
	addMap("GFDL-1.3-NO-INVARIANTS", GFDL13NoInvariants)
	addMap("GFDL-NIV-1.3", GFDL13)
	addMap("GO", BSD3Clause)
	addMap("GPL-1", GPL10)
	addMap("GPL-1.0", GPL10)
	addMap("GPL-2", GPL20)
	addMap("GPL-2+-WITH-BISON-EXCEPTION", GPL20withbisonexception)
	addMap("GPL-2.0", GPL20)
	addMap("GPL-2.0-WITH-AUTOCONF-EXCEPTION", GPL20withautoconfexception)
	addMap("GPL-2.0-WITH-BISON-EXCEPTION", GPL20withbisonexception)
	addMap("GPL-2.0-WITH-CLASSPATH-EXCEPTION", GPL20withclasspathexception)
	addMap("GPL-2.0-WITH-FONT-EXCEPTION", GPL20withfontexception)
	addMap("GPL-2.0-WITH-GCC-EXCEPTION", GPL20withGCCexception)
	addMap("GPL-3", GPL30)
	addMap("GPL-3+-WITH-BISON-EXCEPTION", GPL20withbisonexception)
	addMap("GPL-3.0", GPL30)
	addMap("GPL-3.0-WITH-AUTOCONF-EXCEPTION", GPL30withautoconfexception)
	addMap("GPL-3.0-WITH-GCC-EXCEPTION", GPL30withGCCexception)
	addMap("GPL1", GPL10)
	addMap("GPL2", GPL20)
	addMap("GPL3", GPL30)
	addMap("GPLV1", GPL10)
	addMap("GPLV2", GPL20)
	addMap("GPLV2+CE", GPL20withclasspathexception)
	addMap("GPLV3", GPL30)
	addMap("GUST-FONT", GUSTFont)
	addMap("HSQLDB", BSD3Clause)
	addMap("IMAGEMAGICK", ImageMagick)
	addMap("IPL-1.0", IPL10)
	addMap("ISC", ISC)
	addMap("ISCL", ISC)
	addMap("JQUERY", MIT)
	addMap("LGPL-2", LGPL20)
	addMap("LGPL-2.0", LGPL20)
	addMap("LGPL-2.1", LGPL21)
	addMap("LGPL-3", LGPL30)
	addMap("LGPL-3.0", LGPL30)
	addMap("LGPL2", LGPL21)
	addMap("LGPL3", LGPL30)
	addMap("LGPLLR", LGPLLR)
	addMap("LGPLV2", LGPL21)
	addMap("LGPLV2.1", LGPL21)
	addMap("LGPLV3", LGPL30)
	addMap("LIBPNG", Libpng)
	addMap("LIL-1.0", Lil10)
	addMap("LINUX-OPENIB", LinuxOpenIB)
	addMap("LPL-1.0", LPL10)
	addMap("LPL-1.02", LPL102)
	addMap("LPPL-1.3C", LPPL13c)
	addMap("MIT", MIT)
	// MIT No Attribution (MIT-0) is not yet supported by google/licenseclassifier
	addMap("MIT-0", MIT)
	addMap("MIT-LIKE", MIT)
	addMap("MIT-STYLE", MIT)
	addMap("MPL-1.0", MPL10)
	addMap("MPL-1.1", MPL11)
	addMap("MPL-2", MPL20)
	addMap("MPL-2.0", MPL20)
	addMap("MPL1", MPL10)
	addMap("MPL1.0", MPL10)
	addMap("MPL2", MPL20)
	addMap("MPL2.0", MPL20)
	addMap("MPLV2", MPL20)
	addMap("MPLV2.0", MPL20)
	addMap("MS-PL", MSPL)
	addMap("NCSA", NCSA)
	addMap("NPL-1.0", NPL10)
	addMap("NPL-1.1", NPL11)
	addMap("OFL-1.1", OFL11)
	addMap("OPENSSL", OpenSSL)
	addMap("OPENVISION", OpenVision)
	addMap("OSL-1.0", OSL10)
	addMap("OSL-1.1", OSL11)
	addMap("OSL-2.0", OSL20)
	addMap("OSL-2.1", OSL21)
	addMap("OSL-3.0", OSL30)
	addMap("PHP-3.0", PHP30)
	addMap("PHP-3.01", PHP301)
	addMap("PIL", PIL)
	addMap("POSTGRESQL", PostgreSQL)
	addMap("PYTHON-2.0", Python20)
	addMap("PYTHON-2.0-COMPLETE", Python20complete)
	addMap("QPL-1.0", QPL10)
	addMap("RUBY", Ruby)
	addMap("SGI-B-1.0", SGIB10)
	addMap("SGI-B-1.1", SGIB11)
	addMap("SGI-B-2.0", SGIB20)
	addMap("SISSL", SISSL)
	addMap("SISSL-1.2", SISSL12)
	addMap("SLEEPYCAT", Sleepycat)
	addMap("UNICODE-DFS-2015", UnicodeDFS2015)
	addMap("UNICODE-DFS-2016", UnicodeDFS2016)
	addMap("UNICODE-TOU", UnicodeTOU)
	addMap("UNLICENSE", Unlicense)
	addMap("UNLICENSED", Unlicense)
	addMap("UPL-1.0", UPL10)
	addMap("W3C", W3C)
	addMap("W3C-19980720", W3C19980720)
	addMap("W3C-20150513", W3C20150513)
	addMap("W3CL", W3C)
	addMap("WTF", WTFPL)
	addMap("WTFPL", WTFPL)
	addMap("X11", X11)
	addMap("XNET", Xnet)
	addMap("ZEND-2.0", Zend20)
	addMap("ZLIB", Zlib)
	addMap("ZLIB-ACKNOWLEDGEMENT", ZlibAcknowledgement)
	addMap("ZOPE", ZPL21)
	addMap("ZPL-1.1", ZPL11)
	addMap("ZPL-2.0", ZPL20)
	addMap("ZPL-2.1", ZPL21)

	// Non simple declared mappings
	// modified from https://github.com/oss-review-toolkit/ort/blob/fc5389c2cfd9c8b009794c8a11f5c91321b7a730/utils/spdx/src/main/resources/declared-license-mapping.yml

	// Ambiguous declared mappings (mapping reason not obvious without additional information)
	addMap("ACADEMIC FREE LICENSE (AFL)", AFL21)
	addMap("APACHE SOFTWARE", Apache20)
	addMap("APACHE SOFTWARE LICENSES", Apache20)
	addMap("APPLE PUBLIC SOURCE", APSL10)
	addMap("BSD SOFTWARE", BSD2Clause)
	addMap("BSD STYLE", BSD3Clause)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION", CDDL10)
	addMap("CREATIVE COMMONS - BY", CCBY30)
	addMap("CREATIVE COMMONS ATTRIBUTION", CCBY30)
	addMap("CREATIVE COMMONS", CCBY30)
	addMap("ECLIPSE PUBLIC LICENSE (EPL)", EPL10)
	addMap("GENERAL PUBLIC LICENSE (GPL)", GPL20)
	addMap("GNU FREE DOCUMENTATION LICENSE (FDL)", GFDL13)
	addMap("GNU GENERAL PUBLIC LICENSE (GPL)", GPL30)
	addMap("GNU GPL", GPL20)
	addMap("GNU LESSER", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE (LGPL)", LGPL21)
	addMap("GNU LESSER PUBLIC", LGPL21)
	addMap("GNU LGPL", LGPL21)
	addMap("GNU LIBRARY OR LESSER GENERAL PUBLIC LICENSE (LGPL)", LGPL21)
	addMap("GNU PUBLIC", GPL20)
	addMap("GPL (WITH DUAL LICENSING OPTION)", GPL20)
	addMap("GPLV2 WITH EXCEPTIONS", GPL20withclasspathexception)
	addMap("INDIVIDUAL BSD", BSD3Clause)
	addMap("LESSER GENERAL PUBLIC LICENSE (LGPL)", LGPL21)
	addMap("LGPL WITH EXCEPTIONS", LGPL30)
	addMap("LGPLV2 OR LATER", LGPL21)
	addMap("LPGL, SEE LICENSE FILE.", LGPL30)
	addMap("MOZILLA PUBLIC", MPL20)

	// Non-ambiguous declared mappings
	addMap("(NEW) BSD", BSD3Clause)
	addMap("2-CLAUSE BSD", BSD2Clause)
	addMap("2-CLAUSE BSDL", BSD2Clause)
	addMap("3-CLAUSE BDSL", BSD3Clause)
	addMap("3-CLAUSE BSD", BSD3Clause)
	addMap("ACADEMIC FREE LICENSE (AFL-2.1)", AFL21)
	addMap("AFFERO GENERAL PUBLIC LICENSE (AGPL) V. 3", AGPL30)
	addMap("AGPL V3", AGPL30)
	addMap("AL 2.0", Apache20)
	addMap("APACHE VERSION 2.0, JANUARY 2004", Apache20)
	addMap("APACHE 2 STYLE", Apache20)
	addMap("APACHE 2", Apache20)
	addMap("APACHE 2.0", Apache20)
	addMap("APACHE LICENSE (2.0)", Apache20)
	addMap("APACHE LICENSE (V2.0)", Apache20)
	addMap("APACHE LICENSE 2", Apache20)
	addMap("APACHE LICENSE 2.0", Apache20)
	addMap("APACHE LICENSE V2", Apache20)
	addMap("APACHE LICENSE V2.0", Apache20)
	addMap("APACHE LICENSE VERSION 2", Apache20)
	addMap("APACHE LICENSE VERSION 2.0", Apache20)
	addMap("APACHE LICENSE, 2.0", Apache20)
	addMap("APACHE LICENSE, ASL VERSION 2.0", Apache20)
	addMap("APACHE LICENSE, V2 OR LATER", Apache20)
	addMap("APACHE LICENSE, V2.0 OR LATER", Apache20)
	addMap("APACHE LICENSE, VERSION 2", Apache20)
	addMap("APACHE LICENSE, VERSION 2.0 (HTTP://WWW.APACHE.ORG/LICENSES/LICENSE-2.0)", Apache20)
	addMap("APACHE LICENSE, VERSION 2.0", Apache20)
	addMap("APACHE LICENSE,VERSION 2.0", Apache20)
	addMap("APACHE PUBLIC LICENSE 2.0", Apache20)
	addMap("APACHE SOFTWARE LICENSE (APACHE-2.0)", Apache20)
	addMap("APACHE SOFTWARE LICENSE - VERSION 2.0", Apache20)
	addMap("APACHE SOFTWARE LICENSE 2.0", Apache20)
	addMap("APACHE SOFTWARE LICENSE, VERSION 1.1", Apache11)
	addMap("APACHE SOFTWARE LICENSE, VERSION 2", Apache20)
	addMap("APACHE SOFTWARE LICENSE, VERSION 2.0", Apache20)
	addMap("APACHE V 2.0", Apache20)
	addMap("APACHE V2", Apache20)
	addMap("APACHE V2.0", Apache20)
	addMap("APACHE VERSION 2.0", Apache20)
	addMap("APACHE, VERSION 2.0", Apache20)
	addMap("APACHE-2.0 */ &#39; &QUOT; &#X3D;END --", Apache20)
	addMap("ARTISTIC 2.0", Artistic20)
	addMap("ARTISTIC LICENSE V2.0", Artistic20)
	addMap("ASF 2.0", Apache20)
	addMap("ASL 2", Apache20)
	addMap("ASL 2.0", Apache20)
	addMap("ASL, VERSION 2", Apache20)
	addMap("BERKELEY SOFTWARE DISTRIBUTION (BSD)", BSD2Clause)
	addMap("BOOST LICENSE V1.0", BSL10)
	addMap("BOOST SOFTWARE LICENSE 1.0 (BSL-1.0)", BSL10)
	addMap("BOOST SOFTWARE", BSL10)
	addMap("BOUNCY CASTLE", MIT)
	addMap("BSD (3-CLAUSE)", BSD3Clause)
	addMap("BSD - SEE NDG/HTTPSCLIENT/LICENSE FILE FOR DETAILS", BSD3Clause)
	addMap("BSD 2 CLAUSE", BSD2Clause)
	addMap("BSD 2", BSD2Clause)
	addMap("BSD 2-CLAUSE", BSD2Clause)
	addMap("BSD 3 CLAUSE", BSD3Clause)
	addMap("BSD 3", BSD3Clause)
	addMap("BSD 3-CLAUSE NEW", BSD3Clause)
	addMap("BSD 3-CLAUSE \"NEW\" OR \"REVISED\" LICENSE (BSD-3-CLAUSE)", BSD3Clause)
	addMap("BSD 3-CLAUSE", BSD3Clause)
	addMap("BSD 4 CLAUSE", BSD4Clause)
	addMap("BSD 4", BSD4Clause)
	addMap("BSD 4-CLAUSE", BSD4Clause)
	addMap("BSD FOUR CLAUSE", BSD4Clause)
	addMap("BSD LICENSE 3", BSD3Clause)
	addMap("BSD LICENSE FOR HSQL", BSD3Clause)
	addMap("BSD NEW", BSD3Clause)
	addMap("BSD THREE CLAUSE", BSD3Clause)
	addMap("BSD TWO CLAUSE", BSD2Clause)
	addMap("BSD-3 CLAUSE", BSD3Clause)
	addMap("BSD-STYLE + ATTRIBUTION", BSD3ClauseAttribution)
	addMap("CC BY-NC-SA 2.0", CCBYNCSA20)
	addMap("CC BY-NC-SA 2.5", CCBYNCSA25)
	addMap("CC BY-NC-SA 3.0", CCBYNCSA30)
	addMap("CC BY-NC-SA 4.0", CCBYNCSA40)
	addMap("CC BY-SA 2.0", CCBYSA20)
	addMap("CC BY-SA 2.5", CCBYSA25)
	addMap("CC BY-SA 3.0", CCBYSA30)
	addMap("CC BY-SA 4.0", CCBYSA40)
	addMap("CC0 1.0 UNIVERSAL (CC0 1.0) PUBLIC DOMAIN DEDICATION", CC010)
	addMap("CC0 1.0 UNIVERSAL", CC010)
	addMap("CDDL 1.0", CDDL10)
	addMap("CDDL 1.1", CDDL11)
	addMap("CDDL V1.0", CDDL10)
	addMap("CDDL V1.1", CDDL11)
	addMap("CDDL, V1.0", CDDL10)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) V1.0", CDDL10)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) V1.1", CDDL11)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) VERSION 1.0", CDDL10)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL) VERSION 1.1", CDDL11)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE (CDDL), VERSION 1.1", CDDL11)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE 1.0 (CDDL-1.0)", CDDL10)
	addMap("COMMON DEVELOPMENT AND DISTRIBUTION LICENSE 1.1 (CDDL-1.1)", CDDL11)
	addMap("COMMON PUBLIC LICENSE - V 1.0", CPL10)
	addMap("COMMON PUBLIC LICENSE VERSION 1.0", CPL10)
	addMap("COMMON PUBLIC", CPL10)
	addMap("CPAL 1.0", CPAL10)
	addMap("CPAL V1.0", CPAL10)
	addMap("CREATIVE COMMONS - ATTRIBUTION 4.0 INTERNATIONAL", CCBY40)
	addMap("CREATIVE COMMONS 3.0 BY-SA", CCBYSA30)
	addMap("CREATIVE COMMONS 3.0", CCBY30)
	addMap("CREATIVE COMMONS ATTRIBUTION 1.0", CCBY10)
	addMap("CREATIVE COMMONS ATTRIBUTION 2.5", CCBY25)
	addMap("CREATIVE COMMONS ATTRIBUTION 3.0 UNPORTED (CC BY 3.0)", CCBY30)
	addMap("CREATIVE COMMONS ATTRIBUTION 3.0", CCBY30)
	addMap("CREATIVE COMMONS ATTRIBUTION 4.0 INTERNATIONAL (CC BY 4.0)", CCBY40)
	addMap("CREATIVE COMMONS ATTRIBUTION 4.0 INTERNATIONAL PUBLIC", CCBY40)
	addMap("CREATIVE COMMONS ATTRIBUTION 4.0", CCBY40)
	addMap("CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL 4.0 INTERNATIONAL", CCBYNC40)
	addMap("CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-NODERIVATIVES 4.0 INTERNATIONAL", CCBYNCND40)
	addMap("CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-SHAREALIKE 3.0 UNPORTED (CC BY-NC-SA 3.0)", CCBYNCSA30)
	addMap("CREATIVE COMMONS ATTRIBUTION-NONCOMMERCIAL-SHAREALIKE 4.0 INTERNATIONAL PUBLIC", CCBYNCSA40)
	addMap("CREATIVE COMMONS CC0", CC010)
	addMap("CREATIVE COMMONS GNU LGPL, VERSION 2.1", LGPL21)
	addMap("CREATIVE COMMONS LICENSE ATTRIBUTION-NODERIVS 3.0 UNPORTED", CCBYNCND30)
	addMap("CREATIVE COMMONS LICENSE ATTRIBUTION-NONCOMMERCIAL-SHAREALIKE 3.0 UNPORTED", CCBYNCSA30)
	addMap("CREATIVE COMMONS ZERO", CC010)
	addMap("ECLIPSE 1.0", EPL10)
	addMap("ECLIPSE 2.0", EPL20)
	addMap("ECLIPSE DISTRIBUTION LICENSE (EDL), VERSION 1.0", BSD3Clause)
	addMap("ECLIPSE DISTRIBUTION LICENSE (NEW BSD LICENSE)", BSD3Clause)
	addMap("ECLIPSE DISTRIBUTION LICENSE - V 1.0", BSD3Clause)
	addMap("ECLIPSE DISTRIBUTION LICENSE - VERSION 1.0", BSD3Clause)
	addMap("ECLIPSE DISTRIBUTION LICENSE V. 1.0", BSD3Clause)
	addMap("ECLIPSE DISTRIBUTION LICENSE V1.0", BSD3Clause)
	addMap("ECLIPSE PUBLIC LICENSE (EPL) 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE (EPL) 2.0", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE (EPL), VERSION 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE - V 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE - V 2.0", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE - V1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE - VERSION 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE - VERSION 2.0", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE 1.0 (EPL-1.0)", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE 2.0 (EPL-2.0)", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE V. 2.0", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE V1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE V2.0", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE VERSION 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE VERSION 2.0", EPL20)
	addMap("ECLIPSE PUBLIC LICENSE, VERSION 1.0", EPL10)
	addMap("ECLIPSE PUBLIC LICENSE, VERSION 2.0", EPL20)
	addMap("ECLIPSE PUBLIC", EPL10)
	addMap("ECLIPSE PUBLISH LICENSE, VERSION 1.0", EPL10)
	addMap("EDL 1.0", BSD3Clause)
	addMap("EPL (ECLIPSE PUBLIC LICENSE), V1.0 OR LATER", EPL10)
	addMap("EPL 1.0", EPL10)
	addMap("EPL 2.0", EPL20)
	addMap("EPL V1.0", EPL10)
	addMap("EPL V2.0", EPL20)
	addMap("EU PUBLIC LICENSE 1.0 (EUPL 1.0)", EUPL10)
	addMap("EU PUBLIC LICENSE 1.1 (EUPL 1.1)", EUPL11)
	addMap("EUPL 1.0", EUPL10)
	addMap("EUPL 1.1", EUPL11)
	addMap("EUPL V1.0", EUPL10)
	addMap("EUPL V1.1", EUPL11)
	addMap("EUROPEAN UNION PUBLIC LICENSE (EUPL V.1.1)", EUPL11)
	addMap("EUROPEAN UNION PUBLIC LICENSE 1.0 (EUPL 1.0)", EUPL10)
	addMap("EUROPEAN UNION PUBLIC LICENSE 1.0", EUPL10)
	addMap("EUROPEAN UNION PUBLIC LICENSE 1.1 (EUPL 1.1)", EUPL11)
	addMap("EUROPEAN UNION PUBLIC LICENSE 1.1", EUPL11)
	addMap("EUROPEAN UNION PUBLIC LICENSE, VERSION 1.1", EUPL11)
	addMap("EXPAT (MIT/X11)", MIT)
	addMap("GENERAL PUBLIC LICENSE 2.0 (GPL)", GPL20)
	addMap("GNU AFFERO GENERAL PUBLIC LICENSE V3 (AGPL-3.0)", AGPL30)
	addMap("GNU AFFERO GENERAL PUBLIC LICENSE V3 (AGPLV3)", AGPL30)
	addMap("GNU AFFERO GENERAL PUBLIC LICENSE V3 OR LATER (AGPL3+)", AGPL30)
	addMap("GNU AFFERO GENERAL PUBLIC LICENSE V3 OR LATER (AGPLV3+)", AGPL30)
	addMap("GNU AFFERO GENERAL PUBLIC LICENSE V3", AGPL30)
	addMap("GNU AFFERO GENERAL PUBLIC LICENSE, VERSION 3", AGPL30)
	addMap("GNU FREE DOCUMENTATION LICENSE (GFDL-1.3)", GFDL13)
	addMap("GNU GENERAL LESSER PUBLIC LICENSE (LGPL) VERSION 2.1", LGPL21)
	addMap("GNU GENERAL LESSER PUBLIC LICENSE (LGPL) VERSION 3.0", LGPL30)
	addMap("GNU GENERAL PUBLIC LIBRARY", GPL30)
	addMap("GNU GENERAL PUBLIC LICENSE (GPL) V. 2", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE (GPL) V. 3", GPL30)
	addMap("GNU GENERAL PUBLIC LICENSE (GPL), VERSION 2, WITH CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE (GPL), VERSION 2, WITH THE CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE 3", GPL30)
	addMap("GNU GENERAL PUBLIC LICENSE V2 (GPLV2)", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE V2 OR LATER (GPLV2+)", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE V2.0 ONLY, WITH CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE V3 (GPLV3)", GPL30)
	addMap("GNU GENERAL PUBLIC LICENSE V3 OR LATER (GPLV3+)", GPL30)
	addMap("GNU GENERAL PUBLIC LICENSE VERSION 2 (GPLV2)", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE VERSION 2", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE VERSION 2, JUNE 1991", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE VERSION 3 (GPL V3)", GPL30)
	addMap("GNU GENERAL PUBLIC LICENSE, VERSION 2 (GPL2), WITH THE CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE, VERSION 2 WITH THE CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE, VERSION 2 WITH THE GNU CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE, VERSION 2", GPL20)
	addMap("GNU GENERAL PUBLIC LICENSE, VERSION 2, WITH THE CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GNU GENERAL PUBLIC LICENSE, VERSION 3", GPL30)
	addMap("GNU GPL V2", GPL20)
	addMap("GNU GPL V3", GPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE (LGPL), VERSION 2.1 OR LATER", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE (LGPL), VERSION 2.1", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE (LGPL), VERSION 3", LGPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE 2.1", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE V2 (LGPLV2)", LGPL20)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE V2 OR LATER (LGPLV2+)", LGPL20)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE V3 (LGPLV3)", LGPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE V3 OR LATER (LGPLV3+)", LGPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE V3", LGPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE V3.0", LGPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE VERSION 2.1 (LGPLV2.1)", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE VERSION 2.1", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE VERSION 2.1, FEBRUARY 1999", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE, VERSION 2.1", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE, VERSION 2.1, FEBRUARY 1999", LGPL21)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE, VERSION 3", LGPL30)
	addMap("GNU LESSER GENERAL PUBLIC LICENSE, VERSION 3.0", LGPL30)
	addMap("GNU LGP (GNU GENERAL PUBLIC LICENSE), V2 OR LATER", LGPL20)
	addMap("GNU LGPL (GNU LESSER GENERAL PUBLIC LICENSE), V2.1 OR LATER", LGPL21)
	addMap("GNU LGPL 2", LGPL20)
	addMap("GNU LGPL 2.1", LGPL21)
	addMap("GNU LGPL 3.0", LGPL30)
	addMap("GNU LGPL V2", LGPL20)
	addMap("GNU LGPL V2.1", LGPL21)
	addMap("GNU LGPL V3", LGPL30)
	addMap("GNU LIBRARY GENERAL PUBLIC LICENSE V2.1 OR LATER", LGPL21)
	addMap("GNU LIBRARY OR LESSER GENERAL PUBLIC LICENSE VERSION 2.0 (LGPLV2)", LGPL20)
	addMap("GPL (≥ 3)", GPL30)
	addMap("GPL 2 WITH CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GPL 2", GPL20)
	addMap("GPL 3", GPL30)
	addMap("GPL V2 WITH CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GPL V2", GPL20)
	addMap("GPL V3", GPL30)
	addMap("GPL VERSION 2", GPL20)
	addMap("GPL-2+ WITH AUTOCONF EXCEPTION", GPL20withautoconfexception)
	addMap("GPL-3+ WITH AUTOCONF EXCEPTION", GPL30withautoconfexception)
	addMap("GPL2 W/ CPE", GPL20withclasspathexception)
	addMap("GPLV2 LICENSE, INCLUDES THE CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("GPLV2 WITH CLASSPATH EXCEPTION", GPL20withclasspathexception)
	addMap("HSQLDB LICENSE, A BSD OPEN SOURCE", BSD3Clause)
	addMap("HTTP://ANT-CONTRIB.SOURCEFORGE.NET/TASKS/LICENSE.TXT", Apache11)
	addMap("HTTP://ASM.OW2.ORG/LICENSE.HTML", BSD3Clause)
	addMap("HTTP://CREATIVECOMMONS.ORG/PUBLICDOMAIN/ZERO/1.0/LEGALCODE", CC010)
	addMap("HTTP://EN.WIKIPEDIA.ORG/WIKI/ZLIB_LICENSE", Zlib)
	addMap("HTTP://JSON.CODEPLEX.COM/LICENSE", MIT)
	addMap("HTTP://POLYMER.GITHUB.IO/LICENSE.TXT", BSD3Clause)
	addMap("HTTP://WWW.APACHE.ORG/LICENSES/LICENSE-2.0", Apache20)
	addMap("HTTP://WWW.APACHE.ORG/LICENSES/LICENSE-2.0.HTML", Apache20)
	addMap("HTTP://WWW.APACHE.ORG/LICENSES/LICENSE-2.0.TXT", Apache20)
	addMap("HTTP://WWW.GNU.ORG/COPYLEFT/LESSER.HTML", LGPL30)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-ND/1.0", CCBYNCND10)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-ND/2.0", CCBYNCND20)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-ND/2.5", CCBYNCND25)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-ND/3.0", CCBYNCND30)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-ND/4.0", CCBYNCND40)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-SA/1.0", CCBYNCSA10)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-SA/2.0", CCBYNCSA20)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-SA/2.5", CCBYNCSA25)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-SA/3.0", CCBYNCSA30)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-NC-SA/4.0", CCBYNCSA40)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-ND/1.0", CCBYND10)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-ND/2.0", CCBYND20)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-ND/2.5", CCBYND25)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-ND/3.0", CCBYND30)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-ND/4.0", CCBYND40)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-SA/1.0", CCBYSA10)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-SA/2.0", CCBYSA20)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-SA/2.5", CCBYSA25)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-SA/3.0", CCBYSA30)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY-SA/4.0", CCBYSA40)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY/1.0", CCBY10)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY/2.0", CCBY20)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY/2.5", CCBY25)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY/3.0", CCBY30)
	addMap("HTTPS://CREATIVECOMMONS.ORG/LICENSES/BY/4.0", CCBY40)
	addMap("HTTPS://CREATIVECOMMONS.ORG/PUBLICDOMAIN/ZERO/1.0/", CC010)
	addMap("HTTPS://GITHUB.COM/DOTNET/CORE-SETUP/BLOB/MASTER/LICENSE.TXT", MIT)
	addMap("HTTPS://GITHUB.COM/DOTNET/COREFX/BLOB/MASTER/LICENSE.TXT", MIT)
	addMap("HTTPS://RAW.GITHUB.COM/RDFLIB/RDFLIB/MASTER/LICENSE", BSD3Clause)
	addMap("HTTPS://RAW.GITHUBUSERCONTENT.COM/ASPNET/ASPNETCORE/2.0.0/LICENSE.TXT", Apache20)
	addMap("HTTPS://RAW.GITHUBUSERCONTENT.COM/ASPNET/HOME/2.0.0/LICENSE.TXT", Apache20)
	addMap("HTTPS://RAW.GITHUBUSERCONTENT.COM/NUGET/NUGET.CLIENT/DEV/LICENSE.TXT", Apache20)
	addMap("HTTPS://WWW.APACHE.ORG/LICENSES/LICENSE-2.0", Apache20)
	addMap("HTTPS://WWW.ECLIPSE.ORG/LEGAL/EPL-V10.HTML", EPL10)
	addMap("HTTPS://WWW.ECLIPSE.ORG/LEGAL/EPL-V20.HTML", EPL20)
	addMap("IBM PUBLIC", IPL10)
	addMap("ISC LICENSE (ISCL)", ISC)
	addMap("JYTHON SOFTWARE", Python20)
	addMap("KIRKK.COM BSD", BSD3Clause)
	addMap("LESSER GENERAL PUBLIC LICENSE, VERSION 3 OR GREATER", LGPL30)
	addMap("LGPL 2", LGPL20)
	addMap("LGPL 2.0", LGPL20)
	addMap("LGPL 2.1", LGPL21)
	addMap("LGPL 3", LGPL30)
	addMap("LGPL 3.0", LGPL30)
	addMap("LGPL V2", LGPL20)
	addMap("LGPL V2.1", LGPL21)
	addMap("LGPL V3", LGPL30)
	addMap("LGPL V3.0", LGPL30)
	addMap("LGPL, V2.1 OR LATER", LGPL21)
	addMap("LGPL, VERSION 2.1", LGPL21)
	addMap("LGPL, VERSION 3.0", LGPL30)
	addMap("LGPLV3 OR LATER", LGPL30)
	addMap("LICENSE AGREEMENT FOR OPEN SOURCE COMPUTER VISION LIBRARY (3-CLAUSE BSD LICENSE)", BSD3Clause)
	addMap("MIT (HTTP://MOOTOOLS.NET/LICENSE.TXT)", MIT)
	addMap("MIT / HTTP://REM.MIT-LICENSE.ORG", MIT)
	addMap("MIT LICENSE (HTTP://OPENSOURCE.ORG/LICENSES/MIT)", MIT)
	addMap("MIT LICENSE (MIT)", MIT)
	addMap("MIT LICENSE(MIT)", MIT)
	addMap("MIT LICENSED. HTTP://WWW.OPENSOURCE.ORG/LICENSES/MIT-LICENSE.PHP", MIT)
	addMap("MIT/EXPAT", MIT)
	addMap("MOCKRUNNER LICENSE, BASED ON APACHE SOFTWARE LICENSE, VERSION 1.1", Apache11)
	addMap("MODIFIED BSD", BSD3Clause)
	addMap("MOZILLA PUBLIC LICENSE 1.0 (MPL)", MPL10)
	addMap("MOZILLA PUBLIC LICENSE 1.1 (MPL 1.1)", MPL11)
	addMap("MOZILLA PUBLIC LICENSE 2.0 (MPL 2.0)", MPL20)
	addMap("MOZILLA PUBLIC LICENSE V 2.0", MPL20)
	addMap("MOZILLA PUBLIC LICENSE VERSION 1.0", MPL10)
	addMap("MOZILLA PUBLIC LICENSE VERSION 1.1", MPL11)
	addMap("MOZILLA PUBLIC LICENSE VERSION 2.0", MPL20)
	addMap("MOZILLA PUBLIC LICENSE, VERSION 2.0", MPL20)
	addMap("MPL 1", MPL10)
	addMap("MPL 1.0", MPL10)
	addMap("MPL 1.1", MPL11)
	addMap("MPL 2", MPL20)
	addMap("MPL 2.0", MPL20)
	addMap("MPL V2", MPL20)
	addMap("NCSA OPEN SOURCE", NCSA)
	addMap("NETSCAPE PUBLIC LICENSE (NPL)", NPL10)
	addMap("NETSCAPE PUBLIC", NPL10)
	addMap("NEW BSD", BSD3Clause)
	addMap("OPEN SOFTWARE LICENSE 3.0 (OSL-3.0)", OSL30)
	addMap("OPEN SOFTWARE LICENSE V. 3.0", OSL30)
	addMap("PERL ARTISTIC V2", Artistic10Perl)
	// Note: public domain without a specific license should not be mapped
	// see https://wiki.spdx.org/view/Legal_Team/Decisions/Dealing_with_Public_Domain_within_SPDX_Files
	// and https://opensource.google/documentation/reference/thirdparty/licenses#unencumbered
	addMap("PUBLIC DOMAIN (CC0-1.0)", CC010)
	addMap("PUBLIC DOMAIN, PER CREATIVE COMMONS CC0", CC010)
	addMap("QT PUBLIC LICENSE (QPL)", QPL10)
	addMap("QT PUBLIC", QPL10)
	addMap("REVISED BSD", BSD3Clause)
	addMap("RUBY'S", Ruby)
	addMap("SEQUENCE LIBRARY LICENSE (BSD-LIKE)", BSD3Clause)
	addMap("SIL OPEN FONT LICENSE 1.1 (OFL-1.1)", OFL11)
	addMap("SIL OPEN FONT LICENSE VERSION 1.1", OFL11)
	addMap("SIMPLIFIED BSD LISCENCE", BSD2Clause)
	addMap("SIMPLIFIED BSD", BSD2Clause)
	addMap("SUN INDUSTRY STANDARDS SOURCE LICENSE (SISSL)", SISSL)
	addMap("THREE-CLAUSE BSD-STYLE", BSD3Clause)
	addMap("TWO-CLAUSE BSD-STYLE", BSD2Clause)
	addMap("UNIVERSAL PERMISSIVE LICENSE (UPL)", UPL10)
	addMap("UNIVERSAL PERMISSIVE LICENSE, VERSION 1.0", UPL10)
	addMap("UNLICENSE (UNLICENSE)", Unlicense)
	addMap("W3C SOFTWARE", W3C)
	addMap("ZLIB / LIBPNG", ZlibAcknowledgement)
	addMap("ZLIB/LIBPNG", ZlibAcknowledgement)
	addMap("ZOPE 1.1", ZPL11)
	addMap("ZOPE 2.0", ZPL20)
	addMap("ZOPE 2.1", ZPL21)
	addMap("ZOPE PUBLIC", ZPL21)
	addMap("ZOPE V2.1", ZPL21)
	addMap("ZPL 2.1", ZPL21)
	addMap("['MIT']", MIT)
}

// pythonLicenseExceptions contains licenses that we cannot separate correctly using our logic.
// first word after separator (or/and) => license name
var pythonLicenseExceptions = map[string]string{
	"lesser":       "GNU Library or Lesser General Public License (LGPL)",
	"distribution": "Common Development and Distribution License 1.0 (CDDL-1.0)",
	"disclaimer":   "Historical Permission Notice and Disclaimer (HPND)",
}

// Split licenses without considering "and"/"or"
// examples:
// 'GPL-1+,GPL-2' => {"GPL-1+", "GPL-2"}
// 'GPL-1+ or Artistic or Artistic-dist' => {"GPL-1+", "Artistic", "Artistic-dist"}
// 'LGPLv3+_or_GPLv2+' => {"LGPLv3+", "GPLv2"}
// 'BSD-3-CLAUSE and GPL-2' => {"BSD-3-CLAUSE", "GPL-2"}
// 'GPL-1+ or Artistic, and BSD-4-clause-POWERDOG' => {"GPL-1+", "Artistic", "BSD-4-clause-POWERDOG"}
// 'BSD 3-Clause License or Apache License, Version 2.0' => {"BSD 3-Clause License", "Apache License, Version 2.0"}
// var LicenseSplitRegexp = regexp.MustCompile("(,?[_ ]+or[_ ]+)|(,?[_ ]+and[_ ])|(,[ ]*)")

var licenseSplitRegexp = regexp.MustCompile("(,?[_ ]+(?:or|and)[_ ]+)|(,[ ]*)")

// suffixes from https://spdx.dev/learn/handling-license-info/
var validSuffixes = [3]string{"+", "-ONLY", "-OR-LATER"}

func normalizeKeyAndSuffix(name string) (string, string) {
	// standardize space, including newline
	name = strings.Join(strings.Fields(name), " ")
	name = strings.TrimSpace(name)
	name = strings.ToUpper(name)
	if strings.HasPrefix(name, "HTTP") {
		return name, ""
	}
	name = strings.ReplaceAll(name, "LICENCE", "LICENSE")
	name = strings.TrimPrefix(name, "THE ")
	name = strings.TrimSuffix(name, " LICENSE")
	name = strings.TrimSuffix(name, " LICENSED")
	name = strings.TrimSuffix(name, "-LICENSE")
	name = strings.TrimSuffix(name, "-LICENSED")
	if name != "UNLICENSE" {
		name = strings.TrimSuffix(name, "LICENSE")
	}
	if name != "UNLICENSED" {
		name = strings.TrimSuffix(name, "LICENSED")
	}
	suffix := ""
	for _, s := range validSuffixes {
		if strings.HasSuffix(name, s) {
			name = strings.TrimSuffix(name, s)
			suffix = strings.ToLower(s)
		}
	}
	return name, suffix
}

func Normalize(name string) string {
	key, suffix := normalizeKeyAndSuffix(name)
	if l, ok := mapping[key]; ok {
		return l + suffix
	}
	return name
}

func NormalizeKey(name string) string {
	key, _ := normalizeKeyAndSuffix(name)
	if l, ok := mapping[key]; ok {
		return l
	}
	return name
}

func SplitLicenses(str string) []string {
	if str == "" {
		return nil
	}
	var licenses []string
	for _, maybeLic := range licenseSplitRegexp.Split(str, -1) {
		lower := strings.ToLower(maybeLic)
		firstWord, _, _ := strings.Cut(lower, " ")
		if len(licenses) > 0 {
			// e.g. `Apache License, Version 2.0`
			if firstWord == "ver" || firstWord == "version" {
				licenses[len(licenses)-1] += ", " + maybeLic
				continue
				// e.g. `GNU Lesser General Public License v2 or later (LGPLv2+)`
			} else if firstWord == "later" {
				licenses[len(licenses)-1] += " or " + maybeLic
				continue
			} else if lic, ok := pythonLicenseExceptions[firstWord]; ok {
				// Check `or` and `and` separators
				if lic == licenses[len(licenses)-1]+" or "+maybeLic || lic == licenses[len(licenses)-1]+" and "+maybeLic {
					licenses[len(licenses)-1] = lic
				}
				continue
			}
		}
		licenses = append(licenses, maybeLic)
	}
	return licenses
}
