{
  "$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
  "version": "2.1.0",
  "runs": [
    {
      "tool": {
        "driver": {
          "name": "Trivy",
          "informationUri": "https://github.com/aquasecurity/trivy",
          "fullName": "Trivy Vulnerability Scanner",
          "version": "0.15.0",
          "rules": [
                {
                  "id": "CVE-2021-36159",
                  "name": "OsPackageVulnerability",
                  "shortDescription": {
                    "text": "CVE-2021-36159"
                  },
                  "fullDescription": {
                    "text": "."
                  },
                  "defaultConfiguration": {
                    "level": "error"
                  },
                  "helpUri": "https://avd.aquasec.com/nvd/cve-2021-36159",
                  "help": {
                    "text": "Vulnerability CVE-2021-36159\nSeverity: CRITICAL\nPackage: apk-tools\nInstalled Version: 2.10.6-r0\nFixed Version: 2.10.7-r0\nLink: [CVE-2021-36159](https://avd.aquasec.com/nvd/cve-2021-36159)",
                    "markdown": "**Vulnerability CVE-2021-36159**\n| Severity | Package | Installed Version | Fixed Version | Link |\n| --- | --- | --- | --- | --- |\n|CRITICAL|apk-tools|2.10.6-r0|2.10.7-r0|[CVE-2021-36159](https://avd.aquasec.com/nvd/cve-2021-36159)|\n"
                  },
                  "properties": {
                    "tags": [
                      "vulnerability",
                      "CRITICAL",
                      "apk-tools"
                    ],
                    "precision": "very-high"
                  }
                }]
        }
      },
      "results": [
        {
          "ruleId": "CVE-2021-36159",
          "ruleIndex": 0,
          "level": "error",
          "message": {
            "text": "libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the &#39;\\0&#39; terminator one byte too late."
          },
          "locations": [{
            "physicalLocation": {
              "artifactLocation": {
                "uri": "alpine:3.10",
                "uriBaseId": "ROOTPATH"
              },
              "region" : {
                "startLine": 1
              }
            }
          }]
        }],
      "columnKind": "utf16CodeUnits",
      "originalUriBaseIds": {
        "ROOTPATH": {
          "uri": "file:///"
        }
      }
    }
  ]
}