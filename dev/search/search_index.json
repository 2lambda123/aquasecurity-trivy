{"config":{"indexing":"full","jieba_dict":null,"jieba_dict_user":null,"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"<p></p> <p><code>Trivy</code> (<code>tri</code> pronounced like trigger, <code>vy</code> pronounced like envy) is a simple and comprehensive vulnerability/misconfiguration/secret scanner for containers and other artifacts. <code>Trivy</code> detects vulnerabilities of OS packages (Alpine, RHEL, CentOS, etc.) and language-specific packages (Bundler, Composer, npm, yarn, etc.). In addition, <code>Trivy</code> scans Infrastructure as Code (IaC) files such as Terraform and Kubernetes, to detect potential configuration issues that expose your deployments to the risk of attack. <code>Trivy</code> also scans hardcoded secrets like passwords, API keys and tokens. <code>Trivy</code> is easy to use. Just install the binary and you're ready to scan. All you need to do for scanning is to specify a target such as an image name of the container.</p>","title":"HOME"},{"location":"#demo","text":"Demo: Vulnerability Detection      Demo: Misconfiguration Detection    Demo: Secret Detection   <p>Trivy is an Aqua Security open source project. Learn about our open source work and portfolio here. Contact us about any matter by opening a GitHub Discussion here</p>","title":"Demo"},{"location":"community/cks/","text":"<p>Community Resources</p> <ul> <li>Trivy Video overview (short)</li> <li>Example questions from the exam</li> <li>More example questions</li> </ul> <p>Aqua Security Blog posts</p> <ul> <li>Supply chain security best practices</li> <li>Supply chain attacks</li> <li>If you know of interesting resources, please start a PR to add those to the list.</li> </ul>","title":"CKS preparation resources"},{"location":"community/credit/","text":"<p>Teppei Fukuda (knqyf263)</p>","title":"Author"},{"location":"community/credit/#contributors","text":"<p>Thanks to all contributors</p>","title":"Contributors"},{"location":"community/references/","text":"<p>There are external blogs and evaluations.</p>","title":"Additional References"},{"location":"community/references/#blogs","text":"<ul> <li>Trivy Vulnerability Scanner Joins the Aqua Open-source Family</li> <li>Trivy Image Vulnerability Scanner Now Under Apache 2.0 License</li> <li>DevSecOps with Trivy and GitHub Actions</li> <li>Find Image Vulnerabilities Using GitHub and Aqua Security Trivy Action</li> <li>Using Trivy to Discover Vulnerabilities in VS Code Projects</li> <li>the vulnerability remediation lifecycle of Alpine containers</li> <li>Continuous Container Vulnerability Testing with Trivy</li> <li>Open Source CVE Scanner Round-Up: Clair vs Anchore vs Trivy</li> <li>Docker Image Security: Static Analysis Tool Comparison \u2013 Anchore Engine vs Clair vs Trivy</li> </ul>","title":"Blogs"},{"location":"community/references/#links","text":"<ul> <li>Research Spike: evaluate Trivy for scanning running containers</li> <li>Istio evaluates scanners</li> </ul>","title":"Links"},{"location":"community/references/#presentations","text":"<ul> <li>Aqua Security YouTube Channel<ul> <li>Trivy - container image scanning</li> <li>Using Trivy in client server mode</li> <li>Tweaking Trivy output to fit your workflow</li> <li>How does a vulnerability scanner identify packages?</li> </ul> </li> <li>CNCF Webinar 2020<ul> <li>Trivy Open Source Scanner for Container Images \u2013 Just Download and Run!</li> </ul> </li> <li>KubeCon + CloudNativeCon Europe 2020 Virtual<ul> <li>Handling Container Vulnerabilities with Open Policy Agent - Teppei Fukuda, Aqua Security</li> </ul> </li> </ul>","title":"Presentations"},{"location":"community/tools/","text":"<p>The open source community has been hard at work developing new tools for Trivy. You can check out some of them here.</p> <p>Have you created a tool that\u2019s not listed? Add the name and description of your integration and open a pull request in the GitHub repository to get your change merged.</p>","title":"Community Tools"},{"location":"community/tools/#github-actions","text":"Actions Description     gitrivy GitHub Issue + Trivy   trivy-github-issues GitHub Actions for creating GitHub Issues according to the Trivy scanning result","title":"GitHub Actions"},{"location":"community/tools/#semaphore","text":"Name Description     Continuous Vulnerability Testing with Trivy Tutorial on scanning code, containers, infrastructure, and Kubernetes with Semaphore CI/CD.","title":"Semaphore"},{"location":"community/tools/#circleci","text":"Orb Description     fifteen5/trivy-orb Orb for running Trivy, a security scanner","title":"CircleCI"},{"location":"community/tools/#others","text":"Name Description     Trivy Vulnerability Explorer Explore trivy vulnerability reports in your browser and create .trivyignore files interactively. Can be integrated in your CI/CD tooling with deep links.","title":"Others"},{"location":"community/contribute/issue/","text":"<p>Thank you for taking interest in contributing to Trivy!</p> <ul> <li>Feel free to open issues for any reason. When you open a new issue, you'll have to select an issue kind: bug/feature/support and fill the required information based on the selected template.</li> <li>Please spend a small amount of time giving due diligence to the issue tracker. Your issue might be a duplicate. If it is, please add your comment to the existing issue.</li> <li>Remember that users might search for your issue in the future, so please give it a meaningful title to help others.</li> <li>The issue should clearly explain the reason for opening, the proposal if you have any, and any relevant technical information.</li> </ul>","title":"Issues"},{"location":"community/contribute/issue/#wrong-detection","text":"<p>Trivy depends on multiple data sources. Sometime these databases contain mistakes.</p> <p>If Trivy can't detect any CVE-IDs or shows false positive result, at first please follow the next steps:</p> <ol> <li>Run Trivy with <code>-f json</code> that shows data sources.</li> <li>According to the shown data source, make sure that the security advisory in the data source is correct.</li> </ol> <p>If the data source is correct and Trivy shows wrong results, please raise an issue on Trivy.</p>","title":"Wrong detection"},{"location":"community/contribute/issue/#github-advisory-database","text":"<p>Visit here and search CVE-ID.</p> <p>If you find a problem, it'll be nice to fix it: How to contribute to a GitHub security advisory</p>","title":"GitHub Advisory Database"},{"location":"community/contribute/issue/#gitlab-advisory-database","text":"<p>Visit here and search CVE-ID.</p> <p>If you find a problem, it'll be nice to fix it: Create an issue to GitLab Advisory Database</p>","title":"GitLab Advisory Database"},{"location":"community/contribute/issue/#red-hat-cve-database","text":"<p>Visit here and search CVE-ID.</p>","title":"Red Hat CVE Database"},{"location":"community/contribute/pr/","text":"<p>Thank you for taking interest in contributing to Trivy!</p> <ol> <li>Every Pull Request should have an associated bug or feature issue unless you are fixing a trivial documentation issue.</li> <li>Please add the associated Issue link in the PR description.</li> <li>Your PR is more likely to be accepted if it focuses on just one change.</li> <li>There's no need to add or tag reviewers.</li> <li>If a reviewer commented on your code or asked for changes, please remember to respond with comment. Do not mark discussion as resolved. It's up to reviewer to mark it resolved (in case if suggested fix addresses problem properly). PRs with unresolved issues should not be merged (even if the comment is unclear or requires no action from your side).</li> <li>Please include a comment with the results before and after your change.</li> <li>Your PR is more likely to be accepted if it includes tests (We have not historically been very strict about tests, but we would like to improve this!).</li> <li>If your PR affects the user experience in some way, please update the README.md and the CLI help accordingly.</li> </ol>","title":"Pull Requests"},{"location":"community/contribute/pr/#title","text":"<p>It is not that strict, but we use the title conventions in this repository. Each commit message doesn't have to follow the conventions as long as it is clear and descriptive since it will be squashed and merged.</p>","title":"Title"},{"location":"community/contribute/pr/#format-of-the-title","text":"<pre><code>&lt;type&gt;(&lt;scope&gt;): &lt;subject&gt;\n</code></pre> <p>The <code>type</code> and <code>scope</code> should always be lowercase as shown below.</p> <p>Allowed <code>&lt;type&gt;</code> values:</p> <ul> <li>feat for a new feature for the user, not a new feature for build script. Such commit will trigger a release bumping a MINOR version.</li> <li>fix for a bug fix for the user, not a fix to a build script. Such commit will trigger a release bumping a PATCH version.</li> <li>perf for performance improvements. Such commit will trigger a release bumping a PATCH version.</li> <li>docs for changes to the documentation.</li> <li>style for formatting changes, missing semicolons, etc.</li> <li>refactor for refactoring production code, e.g. renaming a variable.</li> <li>test for adding missing tests, refactoring tests; no production code change.</li> <li>build for updating build configuration, development tools or other changes irrelevant to the user.</li> <li>chore for updates that do not apply to the above, such as dependency updates.</li> <li>ci for changes to CI configuration files and scripts</li> <li>revert for revert to a previous commit</li> </ul> <p>Allowed <code>&lt;scope&gt;</code> values:</p> <p>checks:</p> <ul> <li>vuln</li> <li>misconf</li> <li>secret</li> <li>license</li> </ul> <p>mode:</p> <ul> <li>image</li> <li>fs</li> <li>repo</li> <li>sbom</li> <li>server</li> </ul> <p>os:</p> <ul> <li>alpine</li> <li>redhat</li> <li>alma</li> <li>rocky</li> <li>mariner</li> <li>oracle</li> <li>debian</li> <li>ubuntu</li> <li>amazon</li> <li>suse</li> <li>photon</li> <li>distroless</li> </ul> <p>language:</p> <ul> <li>ruby</li> <li>php</li> <li>python</li> <li>nodejs</li> <li>rust</li> <li>dotnet</li> <li>java</li> <li>go</li> </ul> <p>vuln:</p> <ul> <li>os</li> <li>lang</li> </ul> <p>config:</p> <ul> <li>kubernetes</li> <li>dockerfile</li> <li>terraform</li> <li>cloudformation</li> </ul> <p>container</p> <ul> <li>docker</li> <li>podman</li> <li>containerd</li> <li>oci</li> </ul> <p>cli:</p> <ul> <li>cli</li> <li>flag</li> </ul> <p>others:</p> <ul> <li>helm</li> <li>report</li> <li>db</li> <li>deps</li> </ul> <p>The <code>&lt;scope&gt;</code> can be empty (e.g. if the change is a global or difficult to assign to a single component), in which case the parentheses are omitted.</p>","title":"Format of the title"},{"location":"community/contribute/pr/#example-titles","text":"<pre><code>feat(alma): add support for AlmaLinux\n</code></pre> <pre><code>fix(oracle): handle advisories with ksplice versions\n</code></pre> <pre><code>docs(misconf): add comparison with Conftest and TFsec\n</code></pre> <pre><code>chore(deps): bump go.uber.org/zap from 1.19.1 to 1.20.0\n</code></pre> <p>NOTE: please do not use <code>chore(deps): update fanal</code> and something like that if you add new features or fix bugs in Trivy-related projects. The PR title should describe what the PR adds or fixes even though it just updates the dependency in Trivy.</p>","title":"Example titles"},{"location":"community/contribute/pr/#unit-tests","text":"<p>Your PR must pass all the unit tests. You can test it as below.</p> <pre><code>$ make test\n</code></pre>","title":"Unit tests"},{"location":"community/contribute/pr/#integration-tests","text":"<p>Your PR must pass all the integration tests. You can test it as below.</p> <pre><code>$ make test-integration\n</code></pre>","title":"Integration tests"},{"location":"community/contribute/pr/#documentation","text":"<p>You can build the documents as below and view it at http://localhost:8000.</p> <pre><code>$ make mkdocs-serve\n</code></pre>","title":"Documentation"},{"location":"community/contribute/pr/#understand-where-your-pull-request-belongs","text":"<p>Trivy is composed of several repositories that work together:</p> <ul> <li>Trivy is the client-side, user-facing, command line tool.</li> <li>vuln-list is a vulnerabilities database, aggregated from different sources, and normalized for easy consumption. Think of this as the \"server\" side of the trivy command line tool. There should be no pull requests to this repo</li> <li>vuln-list-update is the code that maintains the vuln-list database.</li> <li>trivy-db maintains the vulnerability database pulled by Trivy CLI.</li> <li>go-dep-parser is a library for parsing lock files such as package-lock.json and Gemfile.lock.</li> </ul>","title":"Understand where your pull request belongs"},{"location":"community/maintainer/help-wanted/","text":"<p>We use two labels help wanted and good first issue to identify issues that have been specially groomed for new contributors. The <code>good first issue</code> label is a subset of <code>help wanted</code> label, indicating that members have committed to providing extra assistance for new contributors. All <code>good first issue</code> items also have the <code>help wanted</code> label.</p>","title":"Overview"},{"location":"community/maintainer/help-wanted/#help-wanted","text":"<p>Items marked with the <code>help wanted</code> label need to ensure that they are:</p> <ul> <li>Low Barrier to Entry</li> </ul> <p>It should be tractable for new contributors. Documentation on how that type of   change should be made should already exist.</p> <ul> <li>Clear Task</li> </ul> <p>The task is agreed upon and does not require further discussions in the   community. Call out if that area of code is untested and requires new   fixtures.</p> <p>API / CLI behavior is decided and included in the OP issue, for example: \"The   new command syntax is <code>trivy --format yaml IMAGE_NAME</code>\"_ with   expected validations called out.</p> <ul> <li>Goldilocks priority</li> </ul> <p>Not too high that a core contributor should do it, but not too low that it   isn't useful enough for a core contributor to spend time to review it, answer   questions, help get it into a release, etc.</p> <ul> <li>Up-To-Date</li> </ul> <p>Often these issues become obsolete and have already been done, are no longer   desired, no longer make sense, have changed priority or difficulty , etc.</p>","title":"Help Wanted"},{"location":"community/maintainer/help-wanted/#good-first-issue","text":"<p>Items marked with the <code>good first issue</code> label are intended for first-time contributors. It indicates that members will keep an eye out for these pull requests and shepherd it through our processes.</p> <p>These items need to ensure that they follow the guidelines for <code>help wanted</code> labels (above) in addition to meeting the following criteria:</p> <ul> <li>No Barrier to Entry</li> </ul> <p>The task is something that a new contributor can tackle without advanced   setup, or domain knowledge.</p> <ul> <li>Solution Explained</li> </ul> <p>The recommended solution is clearly described in the issue.</p> <ul> <li>Provides Context</li> </ul> <p>If background knowledge is required, this should be explicitly mentioned and a   list of suggested readings included.</p> <ul> <li>Gives Examples</li> </ul> <p>Link to examples of similar implementations so new contributors have a   reference guide for their changes.</p> <ul> <li>Identifies Relevant Code</li> </ul> <p>The relevant code and tests to be changed should be linked in the issue.</p> <ul> <li>Ready to Test</li> </ul> <p>There should be existing tests that can be modified, or existing test cases   fit to be copied. If the area of code doesn't have tests, before labeling the   issue, add a test fixture. This prep often makes a great <code>help wanted</code> task!</p>","title":"Good First Issue"},{"location":"community/maintainer/triage/","text":"<p>Triage is an important part of maintaining the health of the trivy repo. A well organized repo allows maintainers to prioritize feature requests, fix bugs, and respond to users facing difficulty with the tool as quickly as possible.</p> <p>Triage includes:</p> <ul> <li>Labeling issues</li> <li>Responding to issues</li> <li>Closing issues</li> </ul>","title":"Triage"},{"location":"community/maintainer/triage/#daily-triage","text":"<p>Daily triage has two goals:</p> <ol> <li>Responsiveness for new issues</li> <li>Responsiveness when explicitly requested information was provided</li> </ol> <p>It covers:</p> <ol> <li>Issues without a <code>kind/</code> or <code>triage/</code> label</li> <li>Issues without a <code>priority/</code> label</li> <li><code>triage/needs-information</code> issues which the user has followed up on, and now require a response.</li> </ol>","title":"Daily Triage"},{"location":"community/maintainer/triage/#categorization","text":"<p>The most important level of categorizing the issue is defining what type it is. We typically want at least one of the following labels on every issue, and some issues may fall into multiple categories:</p> <ul> <li><code>triage/support</code>   - The default for most incoming issues</li> <li><code>kind/bug</code> - When it\u2019s a bug or we aren\u2019t delivering the best user experience</li> </ul> <p>Other possibilities:  - <code>kind/feature</code>- Identify new feature requests - <code>kind/testing</code> - Update or fix unit/integration tests - <code>kind/cleanup</code> - Cleaning up/refactoring the codebase - <code>kind/documentation</code> - Updates or additions to trivy documentation</p> <p>If the issue is specific to a driver for OS packages or libraries:</p> <p>co/[driver for OS packages]</p> <ul> <li><code>co/alpine</code></li> <li><code>co/amazon</code></li> <li><code>co/debian</code></li> <li><code>co/oracle</code></li> <li><code>co/photon</code></li> <li><code>co/redhat</code></li> <li><code>co/suse</code></li> <li><code>co/ubuntu</code></li> </ul> <p>co/[driver for libraries of programming languages] </p> <ul> <li><code>co/bundler</code></li> <li><code>co/cargo</code></li> <li><code>co/composer</code></li> <li><code>co/npm</code></li> <li><code>co/yarn</code></li> <li><code>co/pipenv</code></li> <li><code>co/poetry</code></li> </ul> <p>Help wanted?</p> <p><code>Good First Issue</code> - bug has a proposed solution, can be implemented w/o further discussion.</p> <p><code>Help wanted</code> - if the bug could use help from a contributor</p>","title":"Categorization"},{"location":"community/maintainer/triage/#prioritization","text":"<p>If the issue is not <code>triage/support</code>, it needs a priority label.</p> <p><code>priority/critical-urgent</code> - someones top priority ASAP, such as security issue, user-visible bug, or build breakage. Rarely used.</p> <p><code>priority/important-soon</code>: in time for the next two releases. It should be attached to a milestone.</p> <p><code>priority/important-longterm</code>: 2-4 releases from now</p> <p><code>priority/backlog</code>: agreed that this would be good to have, but no one is available at the moment. Consider tagging as <code>help wanted</code></p> <p><code>priority/awaiting-more-evidence</code>: may be useful, but there is not yet enough support.</p>","title":"Prioritization"},{"location":"community/maintainer/triage/#weekly-triage","text":"<p>Weekly triage has three goals:</p> <ol> <li>Catching up on unresponded issues</li> <li>Reviewing and closing PR\u2019s</li> <li>Closing stale issues</li> </ol>","title":"Weekly Triage"},{"location":"community/maintainer/triage/#post-release-triage","text":"<p>Post-release triage occurs after a major release (around every 4-6 weeks). It focuses on:</p> <ol> <li>Closing bugs that have been resolved by the release</li> <li>Reprioritizing bugs that have not been resolved by the release</li> <li>Letting users know if we believe that there is still an issue</li> </ol> <p>This includes reviewing:</p> <ol> <li>Every issue that hasn\u2019t been touched in the last 2 days</li> <li>Re-evaluation of long-term issues</li> <li>Re-evaluation of short-term issues</li> </ol>","title":"Post-Release Triage"},{"location":"community/maintainer/triage/#responding-to-issues","text":"","title":"Responding to Issues"},{"location":"community/maintainer/triage/#needs-more-information","text":"<p>A sample response to ask for more info:</p>  <p>I don\u2019t yet have a clear way to replicate this issue. Do you mind adding some additional details. Here is additional information that would be helpful:</p> <p>*  The exact <code>trivy</code> command line used</p> <p>*  The exact image you want to scan</p> <p>*  The full output of the <code>trivy</code> command, preferably with <code>--debug</code> for extra logging.</p> <p>Thank you for sharing your experience!</p>  <p>Then: Label with <code>triage/needs-information</code>.</p>","title":"Needs More Information"},{"location":"community/maintainer/triage/#issue-might-be-resolved","text":"<p>If you think a release may have resolved an issue, ask the author to see if their issue has been resolved:</p>  <p>Could you please check to see if trivy  addresses this issue? We've made some changes with how this is handled, and improved the trivy logs output to help us debug tricky cases like this.  <p>Then: Label with <code>triage/needs-information</code>.</p>","title":"Issue might be resolved"},{"location":"community/maintainer/triage/#closing-with-care","text":"<p>Issues typically need to be closed for the following reasons:</p> <ul> <li>The issue has been addressed</li> <li>The issue is a duplicate of an existing issue</li> <li>There has been a lack of information over a long period of time</li> </ul> <p>In any of these situations, we aim to be kind when closing the issue, and offer the author action items should they need to reopen their issue or still require a solution.</p> <p>Samples responses for these situations include:</p>","title":"Closing with Care"},{"location":"community/maintainer/triage/#issue-has-been-addressed","text":"<p>@author: I believe this issue is now addressed by trivy v1.0.0, as it . If you still see this issue with trivy v1.0 or higher, please reopen this issue. <p>Thank you for reporting this issue!</p>  <p>Then: Close the issue</p>","title":"Issue has been addressed"},{"location":"community/maintainer/triage/#duplicate-issue","text":"<p>This issue appears to be a duplicate of #X, do you mind if we move the conversation there?</p> <p>This way we can centralize the content relating to the issue. If you feel that this issue is not in fact a duplicate, please re-open it. If you have additional information to share, please add it to the new issue.</p> <p>Thank you for reporting this!</p>  <p>Then: Label with <code>triage/duplicate</code> and close the issue.</p>","title":"Duplicate Issue"},{"location":"community/maintainer/triage/#lack-of-information","text":"<p>If an issue hasn't been active for more than four weeks, and the author has been pinged at least once, then the issue can be closed.</p>  <p>Hey @author -- hopefully it's OK if I close this - there wasn't enough information to make it actionable, and some time has already passed. If you are able to provide additional details, you may reopen it at any point.</p> <p>Here is additional information that may be helpful to us:</p> <p>* Whether the issue occurs with the latest trivy release</p> <p>* The exact <code>trivy</code> command line used</p> <p>* The exact image you want to scan</p> <p>* The full output of the <code>trivy</code> command, preferably with <code>--debug</code> for extra logging.</p> <p>Thank you for sharing your experience!</p>  <p>Then: Close the issue.</p>","title":"Lack of Information"},{"location":"community/maintainer/triage/#help-wanted-issues","text":"<p>We use two labels help wanted and good first issue to identify issues that have been specially groomed for new contributors.</p> <p>We have specific guidelines for how to use these labels. If you see an issue that satisfies these guidelines, you can add the <code>help wanted</code> label and the <code>good first issue</code> label. Please note that adding the <code>good first issue</code> label must also  add the <code>help wanted</code> label.</p> <p>If an issue has these labels but does not satisfy the guidelines, please ask for more details to be added to the issue or remove the labels.</p>","title":"Help Wanted issues"},{"location":"docs/","text":"<p>Trivy detects two types of security issues:</p> <ul> <li>Vulnerabilities</li> <li>Misconfigurations</li> </ul> <p>Trivy can scan four different artifacts:</p> <ul> <li>Container Images</li> <li>Filesystem and Rootfs</li> <li>Git Repositories</li> <li>Kubernetes</li> </ul> <p>Trivy can be run in two different modes:</p> <ul> <li>Standalone</li> <li>Client/Server</li> </ul> <p>Trivy can be run as a Kubernetes Operator:</p> <ul> <li>Kubernetes Operator</li> </ul> <p>It is designed to be used in CI. Before pushing to a container registry or deploying your application, you can scan your local container image and other artifacts easily. See Integrations for details.</p>","title":"Docs"},{"location":"docs/#features","text":"<ul> <li>Comprehensive vulnerability detection<ul> <li>OS packages (Alpine, Red Hat Universal Base Image, Red Hat Enterprise Linux, CentOS, AlmaLinux, Rocky Linux, CBL-Mariner, Oracle Linux, Debian, Ubuntu, Amazon Linux, openSUSE Leap, SUSE Enterprise Linux, Photon OS and Distroless)</li> <li>Language-specific packages (Bundler, Composer, Pipenv, Poetry, npm, yarn, pnpm, Cargo, NuGet, Maven, and Go)</li> </ul> </li> <li>Detect IaC misconfigurations<ul> <li>A wide variety of built-in policies are provided out of the box:<ul> <li>Kubernetes</li> <li>Docker</li> <li>Terraform</li> <li>more coming soon</li> </ul> </li> <li>Support custom policies</li> </ul> </li> <li>Simple<ul> <li>Specify only an image name, a directory containing IaC configs, or an artifact name</li> <li>See Quick Start</li> </ul> </li> <li>Fast<ul> <li>The first scan will finish within 10 seconds (depending on your network). Consequent scans will finish in single seconds.</li> <li>Unlike other scanners that take long to fetch vulnerability information (~10 minutes) on the first run, and encourage you to maintain a durable vulnerability database, Trivy is stateless and requires no maintenance or preparation.</li> </ul> </li> <li>Easy installation<ul> <li><code>apt-get install</code>, <code>yum install</code> and <code>brew install</code> is possible (See Installation)</li> <li>No pre-requisites such as installation of DB, libraries, etc.</li> </ul> </li> <li>High accuracy<ul> <li>Especially Alpine Linux and RHEL/CentOS</li> <li>Other OSes are also high</li> </ul> </li> <li>DevSecOps<ul> <li>Suitable for CI such as Travis CI, CircleCI, Jenkins, GitLab CI, etc.</li> <li>See CI Example</li> </ul> </li> <li>Support multiple formats<ul> <li>container image<ul> <li>A local image in Docker Engine which is running as a daemon</li> <li>A local image in Podman (&gt;=2.0) which is exposing a socket</li> <li>A remote image in Docker Registry such as Docker Hub, ECR, GCR and ACR</li> <li>A tar archive stored in the <code>docker save</code> / <code>podman save</code> formatted file</li> <li>An image directory compliant with OCI Image Format</li> </ul> </li> <li>local filesystem and rootfs</li> <li>remote git repository</li> </ul> </li> <li>SBOM (Software Bill of Materials) support<ul> <li>CycloneDX</li> <li>SPDX</li> <li>GitHub Dependency Snapshots</li> </ul> </li> </ul> <p>Please see LICENSE for Trivy licensing information.</p>","title":"Features"},{"location":"docs/advanced/air-gap/","text":"<p>Trivy can be used in air-gapped environments. Note that an allowlist is here.</p>","title":"Air-Gapped Environment"},{"location":"docs/advanced/air-gap/#air-gapped-environment-for-vulnerabilities","text":"","title":"Air-Gapped Environment for vulnerabilities"},{"location":"docs/advanced/air-gap/#download-the-vulnerability-database","text":"Trivyoras &gt;= v0.13.0oras &lt; v0.13.0   <pre><code>TRIVY_TEMP_DIR=$(mktemp -d)\ntrivy --cache-dir $TRIVY_TEMP_DIR image --download-db-only\ntar -cf ./db.tar.gz -C $TRIVY_TEMP_DIR/db metadata.json trivy.db\nrm -rf $TRIVY_TEMP_DIR\n</code></pre>   <p>At first, you need to download the vulnerability database for use in air-gapped environments. Please follow oras installation instruction.</p> <p>Download <code>db.tar.gz</code>:</p> <pre><code>$ oras pull ghcr.io/aquasecurity/trivy-db:2\n</code></pre>   <p>At first, you need to download the vulnerability database for use in air-gapped environments. Please follow oras installation instruction.</p> <p>Download <code>db.tar.gz</code>:</p> <pre><code>$ oras pull -a ghcr.io/aquasecurity/trivy-db:2\n</code></pre>","title":"Download the vulnerability database"},{"location":"docs/advanced/air-gap/#transfer-the-db-file-into-the-air-gapped-environment","text":"<p>The way of transfer depends on the environment.</p> <pre><code>$ rsync -av -e ssh /path/to/db.tar.gz [user]@[host]:dst\n</code></pre>","title":"Transfer the DB file into the air-gapped environment"},{"location":"docs/advanced/air-gap/#put-the-db-file-in-trivys-cache-directory","text":"<p>You have to know where to put the DB file. The following command shows the default cache directory.</p> <pre><code>$ ssh user@host\n$ trivy -h | grep cache\n   --cache-dir value  cache directory (default: \"/home/myuser/.cache/trivy\") [$TRIVY_CACHE_DIR]\n</code></pre> <p>Put the DB file in the cache directory + <code>/db</code>.</p> <pre><code>$ mkdir -p /home/myuser/.cache/trivy/db\n$ cd /home/myuser/.cache/trivy/db\n$ tar xvf /path/to/db.tar.gz -C /home/myuser/.cache/trivy/db\nx trivy.db\nx metadata.json\n$ rm /path/to/db.tar.gz\n</code></pre> <p>In an air-gapped environment it is your responsibility to update the Trivy database on a regular basis, so that the scanner can detect recently-identified vulnerabilities. </p>","title":"Put the DB file in Trivy's cache directory"},{"location":"docs/advanced/air-gap/#run-trivy-with-skip-update-and-offline-scan-option","text":"<p>In an air-gapped environment, specify <code>--skip-update</code> so that Trivy doesn't attempt to download the latest database file. In addition, if you want to scan Java dependencies such as JAR and pom.xml, you need to specify <code>--offline-scan</code> since Trivy tries to issue API requests for scanning Java applications by default.</p> <pre><code>$ trivy image --skip-update --offline-scan alpine:3.12\n</code></pre>","title":"Run Trivy with <code>--skip-update</code> and <code>--offline-scan</code> option"},{"location":"docs/advanced/air-gap/#air-gapped-environment-for-misconfigurations","text":"<p>No special measures are required to detect misconfigurations in an air-gapped environment.</p>","title":"Air-Gapped Environment for misconfigurations"},{"location":"docs/advanced/air-gap/#run-trivy-with-skip-policy-update-option","text":"<p>In an air-gapped environment, specify <code>--skip-policy-update</code> so that Trivy doesn't attempt to download the latest misconfiguration policies.</p> <pre><code>$ trivy conf --skip-policy-update /path/to/conf\n</code></pre>","title":"Run Trivy with <code>--skip-policy-update</code> option"},{"location":"docs/advanced/modules/","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>Trivy provides a module feature to allow others to extend the Trivy CLI without the need to change the Trivy code base. It changes the behavior during scanning by WebAssembly.</p>","title":"Modules"},{"location":"docs/advanced/modules/#overview","text":"<p>Trivy modules are add-on tools that integrate seamlessly with Trivy. They provide a way to extend the core feature set of Trivy, but without updating the Trivy binary.</p> <ul> <li>They can be added and removed from a Trivy installation without impacting the core Trivy tool.</li> <li>They can be written in any programming language supporting WebAssembly.</li> <li>It supports only TinyGo at the moment.</li> </ul> <p>You can write your own detection logic.</p> <ul> <li>Evaluate complex vulnerability conditions like Spring4Shell</li> <li>Detect a shell script communicating with malicious domains</li> <li>Detect malicious python install script (setup.py)</li> <li>Even detect misconfigurations in WordPress setting</li> <li>etc.</li> </ul> <p>Then, you can update the scan result however you want.</p> <ul> <li>Change a severity</li> <li>Remove a vulnerability</li> <li>Add a new vulnerability</li> <li>etc.</li> </ul> <p>Modules should be distributed in OCI registries like GitHub Container Registry.</p>  <p>Warning</p> <p>WebAssembly doesn't allow file access and network access by default. Modules can read required files only, but cannot overwrite them. WebAssembly is sandboxed and secure by design, but Trivy modules available in public are not audited for security. You should install and run third-party modules at your own risk even though </p>  <p>Under the hood Trivy leverages wazero to run WebAssembly modules without CGO.</p>","title":"Overview"},{"location":"docs/advanced/modules/#installing-a-module","text":"<p>A module can be installed using the <code>trivy module install</code> command. This command takes an url. It will download the module and install it in the module cache.</p> <p>Trivy adheres to the XDG specification, so the location depends on whether XDG_DATA_HOME is set. Trivy will now search XDG_DATA_HOME for the location of the Trivy modules cache. The preference order is as follows:</p> <ul> <li>XDG_DATA_HOME if set and .trivy/plugins exists within the XDG_DATA_HOME dir</li> <li>$HOME/.trivy/plugins</li> </ul> <p>For example, to download the WebAssembly module, you can execute the following command:</p> <pre><code>$ trivy module install ghcr.io/aquasecurity/trivy-module-spring4shell\n</code></pre>","title":"Installing a Module"},{"location":"docs/advanced/modules/#using-modules","text":"<p>Once the module is installed, Trivy will load all available modules in the cache on the start of the next Trivy execution. The modules may inject custom logic into scanning and change the result. You can run Trivy as usual and modules are loaded automatically.</p> <p>You will see the log messages about WASM modules.</p> <pre><code>$ trivy image ghcr.io/aquasecurity/trivy-test-images:spring4shell-jre8\n2022-06-12T12:57:13.210+0300    INFO    Loading ghcr.io/aquasecurity/trivy-module-spring4shell/spring4shell.wasm...\n2022-06-12T12:57:13.596+0300    INFO    Registering WASM module: spring4shell@v1\n...\n2022-06-12T12:57:14.865+0300    INFO    Module spring4shell: Java Version: 8, Tomcat Version: 8.5.77\n2022-06-12T12:57:14.865+0300    INFO    Module spring4shell: change CVE-2022-22965 severity from CRITICAL to LOW\n\nJava (jar)\n\nTotal: 9 (UNKNOWN: 1, LOW: 3, MEDIUM: 2, HIGH: 3, CRITICAL: 0)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502                           Library                            \u2502    Vulnerability    \u2502 Severity \u2502 Installed Version \u2502     Fixed Version      \u2502                           Title                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 org.springframework.boot:spring-boot (helloworld.war)        \u2502 CVE-2022-22965      \u2502 LOW      \u2502 2.6.3             \u2502 2.5.12, 2.6.6          \u2502 spring-framework: RCE via Data Binding on JDK 9+           \u2502\n\u2502                                                              \u2502                     \u2502          \u2502                   \u2502                        \u2502 https://avd.aquasec.com/nvd/cve-2022-22965                 \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n...(snip)...\n</code></pre> <p>In the above example, the Spring4Shell module changed the severity from CRITICAL to LOW because the application doesn't satisfy one of conditions.</p>","title":"Using Modules"},{"location":"docs/advanced/modules/#uninstalling-modules","text":"<p>Specify a module repository with <code>trivy module uninstall</code> command.</p> <pre><code>$ trivy module uninstall ghcr.io/aquasecurity/trivy-module-spring4shell\n</code></pre>","title":"Uninstalling Modules"},{"location":"docs/advanced/modules/#building-modules","text":"<p>It supports TinyGo only at the moment.</p>","title":"Building Modules"},{"location":"docs/advanced/modules/#tinygo","text":"<p>Trivy provides Go SDK including three interfaces. Your own module needs to implement either or both <code>Analyzer</code> and <code>PostScanner</code> in addition to <code>Module</code>.</p> <pre><code>type Module interface {\n    Version() int\n    Name() string\n}\n\ntype Analyzer interface {\n    RequiredFiles() []string\n    Analyze(filePath string) (*serialize.AnalysisResult, error)\n}\n\ntype PostScanner interface {\n    PostScanSpec() serialize.PostScanSpec\n    PostScan(serialize.Results) (serialize.Results, error)\n}\n</code></pre> <p>In the following tutorial, it creates a WordPress module that detects a WordPress version and a critical vulnerability accordingly.</p>  <p>Tips</p> <p>You can use logging functions such as <code>Debug</code> and <code>Info</code> for debugging. See examples for the detail.</p>","title":"TinyGo"},{"location":"docs/advanced/modules/#initialize-your-module","text":"<p>Replace the repository name with yours.</p> <pre><code>$ go mod init github.com/aquasecurity/trivy-module-wordpress\n</code></pre>","title":"Initialize your module"},{"location":"docs/advanced/modules/#module-interface","text":"<p><code>Version()</code> returns your module version and should be incremented after updates. <code>Name()</code> returns your module name.</p> <pre><code>package main\n\nconst (\n    version = 1\n    name = \"wordpress-module\"\n)\n\ntype WordpressModule struct{\n    // Cannot define fields as modules can't keep state.\n}\n\nfunc (WordpressModule) Version() int {\n    return version\n}\n\nfunc (WordpressModule) Name() string {\n    return name\n}\n</code></pre>  <p>Info</p> <p>A struct cannot have any fields. Each method invocation is performed in different states.</p>","title":"Module interface"},{"location":"docs/advanced/modules/#analyzer-interface","text":"<p>If you implement the <code>Analyzer</code> interface, <code>Analyze</code> method is called when the file path is matched to file patterns returned by <code>RequiredFiles()</code>. A file pattern must be a regular expression. The syntax detail is here.</p> <p><code>Analyze</code> takes the matched file path, then the file can be opened by <code>os.Open()</code>.</p> <pre><code>const typeWPVersion = \"wordpress-version\"\n\nfunc (WordpressModule) RequiredFiles() []string {\n    return []string{\n        `wp-includes\\/version.php`,\n    }\n}\n\nfunc (WordpressModule) Analyze(filePath string) (*serialize.AnalysisResult, error) {\n    f, err := os.Open(filePath) // e.g. filePath: /usr/src/wordpress/wp-includes/version.php\n    if err != nil {\n        return nil, err\n    }\n    defer f.Close()\n\n    var wpVersion string\n    scanner := bufio.NewScanner(f)\n    for scanner.Scan() {\n        line := scanner.Text()\n        if !strings.HasPrefix(line, \"$wp_version=\") {\n            continue\n        }\n\n        ss := strings.Split(line, \"=\")\n        if len(ss) != 2 {\n            return nil, fmt.Errorf(\"invalid wordpress version: %s\", line)\n        }\n\n        // NOTE: it is an example; you actually need to handle comments, etc\n        ss[1] = strings.TrimSpace(ss[1])\n        wpVersion = strings.Trim(ss[1], `\";`)\n    }\n\n    if err = scanner.Err(); err != nil {\n        return nil, err\n    }\n\n    return &amp;serialize.AnalysisResult{\n        CustomResources: []serialize.CustomResource{\n            {\n                Type:     typeWPVersion,\n                FilePath: filePath,\n                Data:     wpVersion,\n            },\n        },\n    }, nil\n}\n</code></pre>  <p>Tips</p> <p>Trivy caches analysis results according to the module version. We'd recommend cleaning the cache or changing the module version every time you update <code>Analyzer</code>.</p>","title":"Analyzer interface"},{"location":"docs/advanced/modules/#postscanner-interface","text":"<p><code>PostScan</code> is called after scanning and takes the scan result as an argument from Trivy. In post scanning, your module can perform one of three actions:</p> <ul> <li>Insert<ul> <li>Add a new security finding</li> <li>e.g. Add a new vulnerability and misconfiguration</li> </ul> </li> <li>Update<ul> <li>Update the detected vulnerability and misconfiguration</li> <li>e.g. Change a severity</li> </ul> </li> <li>Delete<ul> <li>Delete the detected vulnerability and misconfiguration</li> <li>e.g. Remove Spring4Shell because it is not actually affected.</li> </ul> </li> </ul> <p><code>PostScanSpec()</code> returns which action the module does. If it is <code>Update</code> or <code>Delete</code>, it also needs to return IDs such as CVE-ID and misconfiguration ID, which your module wants to update or delete.</p> <p><code>serialize.Results</code> contains the filtered results matching IDs you specified. Also, it includes <code>CustomResources</code> with the values your <code>Analyze</code> returns, so you can modify the scan result according to the custom resources.</p> <pre><code>func (WordpressModule) PostScanSpec() serialize.PostScanSpec {\n    return serialize.PostScanSpec{\n        Action: api.ActionInsert, // Add new vulnerabilities\n    }\n}\n\nfunc (WordpressModule) PostScan(results serialize.Results) (serialize.Results, error) {\n    // e.g. results\n    // [\n    //   {\n    //     \"Target\": \"\",\n    //     \"Class\": \"custom\",\n    //     \"CustomResources\": [\n    //       {\n    //         \"Type\": \"wordpress-version\",\n    //         \"FilePath\": \"/usr/src/wordpress/wp-includes/version.php\",\n    //         \"Layer\": {\n    //           \"DiffID\": \"sha256:057649e61046e02c975b84557c03c6cca095b8c9accd3bd20eb4e432f7aec887\"\n    //         },\n    //         \"Data\": \"5.7.1\"\n    //       }\n    //     ]\n    //   }\n    // ]   \n    var wpVersion int\n    for _, result := range results {\n        if result.Class != types.ClassCustom {\n            continue\n        }\n\n        for _, c := range result.CustomResources {\n            if c.Type != typeWPVersion {\n                continue\n            }\n            wpVersion = c.Data.(string)\n            wasm.Info(fmt.Sprintf(\"WordPress Version: %s\", wpVersion))\n\n            ...snip...\n\n            if affectedVersion.Check(ver) {\n                vulnerable = true\n            }\n            break\n        }\n    }\n\n    if vulnerable {\n        // Add CVE-2020-36326\n        results = append(results, serialize.Result{\n            Target: wpPath,\n            Class:  types.ClassLangPkg,\n            Type:   \"wordpress\",\n            Vulnerabilities: []types.DetectedVulnerability {\n                {\n                    VulnerabilityID:  \"CVE-2020-36326\",\n                    PkgName:          \"wordpress\",\n                    InstalledVersion: wpVersion,\n                    FixedVersion:     \"5.7.2\",\n                    Vulnerability: dbTypes.Vulnerability{\n                        Title:    \"PHPMailer 6.1.8 through 6.4.0 allows object injection through Phar Deserialization via addAttachment with a UNC pathname.\",\n                        Severity: \"CRITICAL\",\n                    },\n                },\n            },\n        })\n    }\n    return results, nil\n}\n</code></pre> <p>The new vulnerability will be added to the scan results. This example shows how the module inserts a new finding. If you are interested in <code>Update</code>, you can see an example of Spring4Shell.</p> <p>In the <code>Delete</code> action, <code>PostScan</code> needs to return results you want to delete. If <code>PostScan</code> returns an empty, Trivy will not delete anything.</p>","title":"PostScanner interface"},{"location":"docs/advanced/modules/#build","text":"<p>Follow the install guide and install TinyGo.</p> <pre><code>$ tinygo build -o wordpress.wasm -scheduler=none -target=wasi --no-debug wordpress.go\n</code></pre> <p>Put the built binary to the module directory that is under the home directory by default.</p> <pre><code>$ mkdir -p ~/.trivy/modules\n$ cp spring4shell.wasm ~/.trivy/modules\n</code></pre>","title":"Build"},{"location":"docs/advanced/modules/#distribute-your-module","text":"<p>You can distribute your own module in OCI registries. Please follow the oras installation instruction.</p> <pre><code>oras push ghcr.io/aquasecurity/trivy-module-wordpress:latest wordpress.wasm:application/vnd.module.wasm.content.layer.v1+wasm\nUploading 3daa3dac086b wordpress.wasm\nPushed ghcr.io/aquasecurity/trivy-module-wordpress:latest\nDigest: sha256:6416d0199d66ce52ced19f01d75454b22692ff3aa7737e45f7a189880840424f\n</code></pre>","title":"Distribute Your Module"},{"location":"docs/advanced/modules/#examples","text":"<ul> <li>Spring4Shell</li> <li>WordPress</li> </ul>","title":"Examples"},{"location":"docs/advanced/plugins/","text":"<p>Trivy provides a plugin feature to allow others to extend the Trivy CLI without the need to change the Trivycode base. This plugin system was inspired by the plugin system used in kubectl, Helm, and Conftest.</p>","title":"Plugins"},{"location":"docs/advanced/plugins/#overview","text":"<p>Trivy plugins are add-on tools that integrate seamlessly with Trivy. They provide a way to extend the core feature set of Trivy, but without requiring every new feature to be written in Go and added to the core tool.</p> <ul> <li>They can be added and removed from a Trivy installation without impacting the core Trivy tool.</li> <li>They can be written in any programming language.</li> <li>They integrate with Trivy, and will show up in Trivy help and subcommands.</li> </ul>  <p>Warning</p> <p>Trivy plugins available in public are not audited for security. You should install and run third-party plugins at your own risk, since they are arbitrary programs running on your machine.</p>","title":"Overview"},{"location":"docs/advanced/plugins/#installing-a-plugin","text":"<p>A plugin can be installed using the <code>trivy plugin install</code> command. This command takes a url and will download the plugin and install it in the plugin cache.</p> <p>Trivy adheres to the XDG specification, so the location depends on whether XDG_DATA_HOME is set. Trivy will now search XDG_DATA_HOME for the location of the Trivy plugins cache. The preference order is as follows:</p> <ul> <li>XDG_DATA_HOME if set and .trivy/plugins exists within the XDG_DATA_HOME dir</li> <li>~/.trivy/plugins</li> </ul> <p>Under the hood Trivy leverages go-getter to download plugins. This means the following protocols are supported for downloading plugins:</p> <ul> <li>OCI Registries</li> <li>Local Files</li> <li>Git</li> <li>HTTP/HTTPS</li> <li>Mercurial</li> <li>Amazon S3</li> <li>Google Cloud Storage</li> </ul> <p>For example, to download the Kubernetes Trivy plugin you can execute the following command:</p> <pre><code>$ trivy plugin install github.com/aquasecurity/trivy-plugin-kubectl\n</code></pre>","title":"Installing a Plugin"},{"location":"docs/advanced/plugins/#using-plugins","text":"<p>Once the plugin is installed, Trivy will load all available plugins in the cache on the start of the next Trivy execution. A plugin will be made in the Trivy CLI based on the plugin name. To display all plugins, you can list them by <code>trivy --help</code></p> <pre><code>$ trivy --help\nNAME:\n   trivy - A simple and comprehensive vulnerability scanner for containers\n\nUSAGE:\n   trivy [global options] command [command options] target\n\nVERSION:\n   dev\n\nCOMMANDS:\n   image, i          scan an image\n   filesystem, fs    scan local filesystem\n   repository, repo  scan remote repository\n   client, c         client mode\n   server, s         server mode\n   plugin, p         manage plugins\n   kubectl           scan kubectl resources\n   help, h           Shows a list of commands or help for one command\n</code></pre> <p>As shown above, <code>kubectl</code> subcommand exists in the <code>COMMANDS</code> section. To call the kubectl plugin and scan existing Kubernetes deployments, you can execute the following command:</p> <pre><code>$ trivy kubectl deployment &lt;deployment-id&gt; -- --ignore-unfixed --severity CRITICAL\n</code></pre> <p>Internally the kubectl plugin calls the kubectl binary to fetch information about that deployment and passes the using images to Trivy. You can see the detail here.</p> <p>If you want to omit even the subcommand, you can use <code>TRIVY_RUN_AS_PLUGIN</code> environment variable.</p> <pre><code>$ TRIVY_RUN_AS_PLUGIN=kubectl trivy job your-job -- --format json\n</code></pre>","title":"Using Plugins"},{"location":"docs/advanced/plugins/#installing-and-running-plugins-on-the-fly","text":"<p><code>trivy plugin run</code> installs a plugin and runs it on the fly. If the plugin is already present in the cache, the installation is skipped.</p> <pre><code>trivy plugin run github.com/aquasecurity/trivy-plugin-kubectl pod your-pod -- --exit-code 1\n</code></pre>","title":"Installing and Running Plugins on the fly"},{"location":"docs/advanced/plugins/#uninstalling-plugins","text":"<p>Specify a plugin name with <code>trivy plugin uninstall</code> command.</p> <pre><code>$ trivy plugin uninstall kubectl\n</code></pre>","title":"Uninstalling Plugins"},{"location":"docs/advanced/plugins/#building-plugins","text":"<p>Each plugin has a top-level directory, and then a plugin.yaml file.</p> <pre><code>your-plugin/\n  |\n  |- plugin.yaml\n  |- your-plugin.sh\n</code></pre> <p>In the example above, the plugin is contained inside of a directory named <code>your-plugin</code>. It has two files: plugin.yaml (required) and an executable script, your-plugin.sh (optional).</p> <p>The core of a plugin is a simple YAML file named plugin.yaml. Here is an example YAML of trivy-plugin-kubectl plugin that adds support for Kubernetes scanning.</p> <pre><code>name: \"kubectl\"\nrepository: github.com/aquasecurity/trivy-plugin-kubectl\nversion: \"0.1.0\"\nusage: scan kubectl resources\ndescription: |-\n  A Trivy plugin that scans the images of a kubernetes resource.\n  Usage: trivy kubectl TYPE[.VERSION][.GROUP] NAME\nplatforms:\n  - selector: # optional\n      os: darwin\n      arch: amd64\n    uri: ./trivy-kubectl # where the execution file is (local file, http, git, etc.)\n    bin: ./trivy-kubectl # path to the execution file\n  - selector: # optional\n      os: linux\n      arch: amd64\n    uri: https://github.com/aquasecurity/trivy-plugin-kubectl/releases/download/v0.1.0/trivy-kubectl.tar.gz\n    bin: ./trivy-kubectl\n</code></pre> <p>The <code>plugin.yaml</code> field should contain the following information:</p> <ul> <li>name: The name of the plugin. This also determines how the plugin will be made available in the Trivy CLI. For example, if the plugin is named kubectl, you can call the plugin with <code>trivy kubectl</code>. (required)</li> <li>version: The version of the plugin. (required)</li> <li>usage: A short usage description. (required)</li> <li>description: A long description of the plugin. This is where you could provide a helpful documentation of your plugin. (required)</li> <li>platforms: (required)</li> <li>selector: The OS/Architecture specific variations of a execution file. (optional)<ul> <li>os: OS information based on GOOS (linux, darwin, etc.) (optional)</li> <li>arch: The architecture information based on GOARCH (amd64, arm64, etc.) (optional)</li> </ul> </li> <li>uri: Where the executable file is. Relative path from the root directory of the plugin or remote URL such as HTTP and S3. (required)</li> <li>bin: Which file to call when the plugin is executed. Relative path from the root directory of the plugin. (required)</li> </ul> <p>The following rules will apply in deciding which platform to select:</p> <ul> <li>If both <code>os</code> and <code>arch</code> under <code>selector</code> match the current platform, search will stop and the platform will be used.</li> <li>If <code>selector</code> is not present, the platform will be used.</li> <li>If <code>os</code> matches and there is no more specific <code>arch</code> match, the platform will be used.</li> <li>If no <code>platform</code> match is found, Trivy will exit with an error.</li> </ul> <p>After determining platform, Trivy will download the execution file from <code>uri</code> and store it in the plugin cache. When the plugin is called via Trivy CLI, <code>bin</code> command will be executed.</p> <p>The plugin is responsible for handling flags and arguments. Any arguments are passed to the plugin from the <code>trivy</code> command.</p>","title":"Building Plugins"},{"location":"docs/advanced/plugins/#example","text":"<p>https://github.com/aquasecurity/trivy-plugin-kubectl</p>","title":"Example"},{"location":"docs/advanced/container/containerd/","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>Scan your image in containerd running locally.</p> <pre><code>$ nerdctl images\nREPOSITORY        TAG       IMAGE ID        CREATED         PLATFORM       SIZE         BLOB SIZE\naquasec/nginx    latest    2bcabc23b454    3 hours ago     linux/amd64    149.1 MiB    54.1 MiB\n$ trivy image aquasec/nginx\n</code></pre> <p>If your containerd socket is not the default path (<code>//run/containerd/containerd.sock</code>), you can override it via <code>CONTAINERD_ADDRESS</code>.</p> <pre><code>$ export CONTAINERD_ADDRESS=/run/k3s/containerd/containerd.sock\n$ trivy image aquasec/nginx\n</code></pre>","title":"containerd"},{"location":"docs/advanced/container/embed-in-dockerfile/","text":"<p>Scan your image as part of the build process by embedding Trivy in the Dockerfile. This approach can be used to update Dockerfiles currently using Aqua\u2019s Microscanner.</p> <p><pre><code>$ cat Dockerfile\nFROM alpine:3.7\n\nRUN apk add curl \\\n    &amp;&amp; curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin \\\n    &amp;&amp; trivy rootfs --exit-code 1 --no-progress /\n\n$ docker build -t vulnerable-image .\n</code></pre> Alternatively you can use Trivy in a multistage build. Thus avoiding the insecure <code>curl | sh</code>. Also the image is not changed. <pre><code>[...]\n# Run vulnerability scan on build image\nFROM build AS vulnscan\nCOPY --from=aquasec/trivy:latest /usr/local/bin/trivy /usr/local/bin/trivy\nRUN trivy rootfs --exit-code 1 --no-progress /\n[...]\n</code></pre></p>","title":"Embed in Dockerfile"},{"location":"docs/advanced/container/oci/","text":"<p>An image directory compliant with Open Container Image Layout Specification.</p> <p>Buildah:</p> <pre><code>$ buildah push docker.io/library/alpine:3.11 oci:/path/to/alpine\n$ trivy image --input /path/to/alpine\n</code></pre> <p>Skopeo:</p> <pre><code>$ skopeo copy docker-daemon:alpine:3.11 oci:/path/to/alpine\n$ trivy image --input /path/to/alpine\n</code></pre>","title":"OCI Image Layout"},{"location":"docs/advanced/container/podman/","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>Scan your image in Podman (&gt;=2.0) running locally. The remote Podman is not supported. Before performing Trivy commands, you must enable the podman.sock systemd service on your machine. For more details, see here.</p> <pre><code>$ systemctl --user enable --now podman.socket\n</code></pre> <p>Then, you can scan your image in Podman.</p> <pre><code>$ cat Dockerfile\nFROM alpine:3.12\nRUN apk add --no-cache bash\n$ podman build -t test .\n$ podman images\nREPOSITORY                TAG     IMAGE ID      CREATED      SIZE\nlocalhost/test            latest  efc372d4e0de  About a minute ago  7.94 MB\n$ trivy image test\n</code></pre>","title":"Podman"},{"location":"docs/advanced/container/unpacked-filesystem/","text":"<p>Scan an unpacked container image filesystem.</p> <p>In this case, Trivy works the same way when scanning containers</p> <pre><code>$ docker export $(docker create alpine:3.10.2) | tar -C /tmp/rootfs -xvf -\n$ trivy rootfs /tmp/rootfs\n</code></pre>  Result <pre><code>2021-03-08T05:22:26.378Z        INFO    Need to update DB\n2021-03-08T05:22:26.380Z        INFO    Downloading DB...\n20.37 MiB / 20.37 MiB [-------------------------------------------------------------------------------------------------------------------------------------] 100.00% 8.24 MiB p/s 2s\n2021-03-08T05:22:30.134Z        INFO    Detecting Alpine vulnerabilities...\n\n/tmp/rootfs (alpine 3.10.2)\n===========================\nTotal: 20 (UNKNOWN: 0, LOW: 2, MEDIUM: 10, HIGH: 8, CRITICAL: 0)\n\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n|   LIBRARY    | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |                 TITLE                 |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n| libcrypto1.1 | CVE-2020-1967    | HIGH     | 1.1.1c-r0         | 1.1.1g-r0     | openssl: Segmentation                 |\n|              |                  |          |                   |               | fault in SSL_check_chain              |\n|              |                  |          |                   |               | causes denial of service              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2020-1967  |\n+              +------------------+          +                   +---------------+---------------------------------------+\n|              | CVE-2021-23839   |          |                   | 1.1.1j-r0     | openssl: incorrect SSLv2              |\n|              |                  |          |                   |               | rollback protection                   |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23839 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23840   |          |                   |               | openssl: integer                      |\n|              |                  |          |                   |               | overflow in CipherUpdate              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23840 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23841   |          |                   |               | openssl: NULL pointer dereference     |\n|              |                  |          |                   |               | in X509_issuer_and_serial_hash()      |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23841 |\n+              +------------------+----------+                   +---------------+---------------------------------------+\n|              | CVE-2019-1547    | MEDIUM   |                   | 1.1.1d-r0     | openssl: side-channel weak            |\n|              |                  |          |                   |               | encryption vulnerability              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1547  |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2019-1549    |          |                   |               | openssl: information                  |\n|              |                  |          |                   |               | disclosure in fork()                  |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1549  |\n+              +------------------+          +                   +---------------+---------------------------------------+\n|              | CVE-2019-1551    |          |                   | 1.1.1d-r2     | openssl: Integer overflow in RSAZ     |\n|              |                  |          |                   |               | modular exponentiation on x86_64      |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1551  |\n+              +------------------+          +                   +---------------+---------------------------------------+\n|              | CVE-2020-1971    |          |                   | 1.1.1i-r0     | openssl: EDIPARTYNAME                 |\n|              |                  |          |                   |               | NULL pointer de-reference             |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2020-1971  |\n+              +------------------+----------+                   +---------------+---------------------------------------+\n|              | CVE-2019-1563    | LOW      |                   | 1.1.1d-r0     | openssl: information                  |\n|              |                  |          |                   |               | disclosure in PKCS7_dataDecode        |\n|              |                  |          |                   |               | and CMS_decrypt_set1_pkey             |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1563  |\n+--------------+------------------+----------+                   +---------------+---------------------------------------+\n| libssl1.1    | CVE-2020-1967    | HIGH     |                   | 1.1.1g-r0     | openssl: Segmentation                 |\n|              |                  |          |                   |               | fault in SSL_check_chain              |\n|              |                  |          |                   |               | causes denial of service              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2020-1967  |\n+              +------------------+          +                   +---------------+---------------------------------------+\n|              | CVE-2021-23839   |          |                   | 1.1.1j-r0     | openssl: incorrect SSLv2              |\n|              |                  |          |                   |               | rollback protection                   |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23839 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23840   |          |                   |               | openssl: integer                      |\n|              |                  |          |                   |               | overflow in CipherUpdate              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23840 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23841   |          |                   |               | openssl: NULL pointer dereference     |\n|              |                  |          |                   |               | in X509_issuer_and_serial_hash()      |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23841 |\n+              +------------------+----------+                   +---------------+---------------------------------------+\n|              | CVE-2019-1547    | MEDIUM   |                   | 1.1.1d-r0     | openssl: side-channel weak            |\n|              |                  |          |                   |               | encryption vulnerability              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1547  |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2019-1549    |          |                   |               | openssl: information                  |\n|              |                  |          |                   |               | disclosure in fork()                  |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1549  |\n+              +------------------+          +                   +---------------+---------------------------------------+\n|              | CVE-2019-1551    |          |                   | 1.1.1d-r2     | openssl: Integer overflow in RSAZ     |\n|              |                  |          |                   |               | modular exponentiation on x86_64      |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1551  |\n+              +------------------+          +                   +---------------+---------------------------------------+\n|              | CVE-2020-1971    |          |                   | 1.1.1i-r0     | openssl: EDIPARTYNAME                 |\n|              |                  |          |                   |               | NULL pointer de-reference             |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2020-1971  |\n+              +------------------+----------+                   +---------------+---------------------------------------+\n|              | CVE-2019-1563    | LOW      |                   | 1.1.1d-r0     | openssl: information                  |\n|              |                  |          |                   |               | disclosure in PKCS7_dataDecode        |\n|              |                  |          |                   |               | and CMS_decrypt_set1_pkey             |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2019-1563  |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n| musl         | CVE-2020-28928   | MEDIUM   | 1.1.22-r3         | 1.1.22-r4     | In musl libc through 1.2.1,           |\n|              |                  |          |                   |               | wcsnrtombs mishandles particular      |\n|              |                  |          |                   |               | combinations of destination buffer... |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2020-28928 |\n+--------------+                  +          +                   +               +                                       +\n| musl-utils   |                  |          |                   |               |                                       |\n|              |                  |          |                   |               |                                       |\n|              |                  |          |                   |               |                                       |\n|              |                  |          |                   |               |                                       |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n</code></pre>","title":"Unpacked Filesystem"},{"location":"docs/advanced/private-registries/","text":"<p>Trivy can download images from a private registry, without installing <code>Docker</code> or any other 3rd party tools. That's because it's easy to run in a CI process.</p> <p>All you have to do is install <code>Trivy</code> and set ENV vars.</p>","title":"Overview"},{"location":"docs/advanced/private-registries/acr/","text":"<p>None, Trivy uses Azure SDK for Go. You don't need to install <code>az</code> command.</p>","title":"Requirements"},{"location":"docs/advanced/private-registries/acr/#privileges","text":"<p>Service principal must have the <code>AcrPull</code> permissions.</p>","title":"Privileges"},{"location":"docs/advanced/private-registries/acr/#creation-of-a-service-principal","text":"<pre><code>export SP_DATA=$(az ad sp create-for-rbac --name TrivyTest --role AcrPull --scope \"/subscriptions/&lt;subscription_id&gt;/resourceGroups/&lt;resource_group&gt;/providers/Microsoft.ContainerRegistry/registries/&lt;registry_name&gt;\")\n</code></pre>","title":"Creation of a service principal"},{"location":"docs/advanced/private-registries/acr/#usage","text":"<pre><code># must set TRIVY_USERNAME empty char\nexport AZURE_CLIENT_ID$(echo $SP_DATA | jq -r .appId)\nexport AZURE_CLIENT_SECRET$(echo $SP_DATA | jq -r .password)\nexport AZURE_TENANT_ID$(echo $SP_DATA | jq -r .tenant)\n</code></pre>","title":"Usage"},{"location":"docs/advanced/private-registries/acr/#testing","text":"<p>You can test credentials in the following manner.</p> <pre><code>docker run -it --rm -v /tmp:/tmp\\\n  -e AZURE_CLIENT_ID=${AZURE_CLIENT_ID} -e AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET} \\\n  -e AZURE_TENANT_ID=${AZURE_TENANT_ID} aquasec/trivy image your_special_project.azurecr.io/your_special_image:your_special_tag\n</code></pre>","title":"Testing"},{"location":"docs/advanced/private-registries/docker-hub/","text":"<p>Docker Hub needs <code>TRIVY_USERNAME</code> and <code>TRIVY_PASSWORD</code>. You don't need to set ENV vars when download from public repository.</p> <pre><code>export TRIVY_USERNAME={DOCKERHUB_USERNAME}\nexport TRIVY_PASSWORD={DOCKERHUB_PASSWORD}\n</code></pre>","title":"Docker Hub"},{"location":"docs/advanced/private-registries/ecr/","text":"<p>Trivy uses AWS SDK. You don't need to install <code>aws</code> CLI tool. You can use AWS CLI's ENV Vars.</p>","title":"AWS ECR (Elastic Container Registry)"},{"location":"docs/advanced/private-registries/gcr/","text":"<p>None, Trivy uses Google Cloud SDK. You don't need to install <code>gcloud</code> command.</p>","title":"Requirements"},{"location":"docs/advanced/private-registries/gcr/#privileges","text":"<p>Credential file must have the <code>roles/storage.objectViewer</code> permissions. More information can be found in Google's documentation</p>","title":"Privileges"},{"location":"docs/advanced/private-registries/gcr/#json-file-format","text":"<p>The JSON file specified should have the following format provided by google's service account mechanisms:</p> <pre><code>{\n  \"type\": \"service_account\",\n  \"project_id\": \"your_special_project\",\n  \"private_key_id\": \"XXXXXXXXXXXXXXXXXXXXxx\",\n  \"private_key\": \"-----BEGIN PRIVATE KEY-----\\nNONONONO\\n-----END PRIVATE KEY-----\\n\",\n  \"client_email\": \"somedude@your_special_project.iam.gserviceaccount.com\",\n  \"client_id\": \"1234567890\",\n  \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n  \"token_uri\": \"https://oauth2.googleapis.com/token\",\n  \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n  \"client_x509_cert_url\": \"https://www.googleapis.com/robot/v1/metadata/x509/somedude%40your_special_project.iam.gserviceaccount.com\"\n}\n</code></pre>","title":"JSON File Format"},{"location":"docs/advanced/private-registries/gcr/#usage","text":"<p>If you want to use target project's repository, you can set them via <code>GOOGLE_APPLICATION_CREDENTIALS</code>. <pre><code># must set TRIVY_USERNAME empty char\nexport GOOGLE_APPLICATION_CREDENTIALS=/path/to/credential.json\n</code></pre></p>","title":"Usage"},{"location":"docs/advanced/private-registries/gcr/#testing","text":"<p>You can test credentials in the following manner (assuming they are in <code>/tmp</code> on host machine).</p> <pre><code>docker run -it --rm -v /tmp:/tmp\\\n  -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/service_account.json\\\n  aquasec/trivy image gcr.io/your_special_project/your_special_image:your_special_tag\n</code></pre>","title":"Testing"},{"location":"docs/advanced/private-registries/self/","text":"<p>BasicAuth server needs <code>TRIVY_USERNAME</code> and <code>TRIVY_PASSWORD</code>.</p> <pre><code>export TRIVY_USERNAME={USERNAME}\nexport TRIVY_PASSWORD={PASSWORD}\n\n# if you want to use 80 port, use NonSSL\nexport TRIVY_NON_SSL=true\n</code></pre>","title":"Self-Hosted"},{"location":"docs/attestation/sbom/","text":"<p>Cosign supports generating and verifying in-toto attestations. This tool enables you to sign and verify SBOM attestation.</p>  <p>Note</p> <p>In the following examples, the <code>cosign</code> command will write an attestation to a target OCI registry, so you must have permission to write. If you want to avoid writing an OCI registry and only want to see an attestation, add the <code>--no-upload</code> option to the <code>cosign</code> command.</p>","title":"SBOM attestation"},{"location":"docs/attestation/sbom/#sign-with-a-local-key-pair","text":"<p>Cosign can generate key pairs and use them for signing and verification. Read more about how to generate key pairs.</p> <p>In the following example, Trivy generates an SBOM in the spdx format, and then Cosign attaches an attestation of the SBOM to a container image with a local key pair.</p> <pre><code>$ trivy image --format spdx -o sbom.spdx &lt;IMAGE&gt;\n$ cosign attest --key /path/to/cosign.key --type spdx --predicate sbom.spdx &lt;IMAGE&gt;\n</code></pre> <p>Then, you can verify attestations on the image.</p> <pre><code>$ cosign verify-attestation --key /path/to/cosign.pub &lt;IMAGE&gt;\n</code></pre> <p>You can also create attestations of other formatted SBOM.</p> <pre><code># spdx-json\n$ trivy image --format spdx-json -o sbom.spdx.json &lt;IMAGE&gt;\n$ cosign attest --key /path/to/cosign.key --type spdx --predicate sbom.spdx.json &lt;IMAGE&gt;\n\n# cyclonedx\n$ trivy image --format cyclonedx -o sbom.cdx.json &lt;IMAGE&gt;\n$ cosign attest --key /path/to/cosign.key --type https://cyclonedx.org/schema --predicate sbom.cdx.json &lt;IMAGE&gt;\n</code></pre>","title":"Sign with a local key pair"},{"location":"docs/attestation/sbom/#keyless-signing","text":"<p>You can use Cosign to sign without keys by authenticating with an OpenID Connect protocol supported by sigstore (Google, GitHub, or Microsoft).</p> <pre><code>$ trivy image --format spdx -o sbom.spdx &lt;IMAGE&gt;\n$ COSIGN_EXPERIMENTAL=1 cosign attest --type spdx --predicate sbom.spdx &lt;IMAGE&gt;\n</code></pre> <p>You can verify attestations. <pre><code>$ COSIGN_EXPERIMENTAL=1 cosign verify-attestation &lt;IMAGE&gt;\n</code></pre></p>","title":"Keyless signing"},{"location":"docs/attestation/vuln/","text":"","title":"Cosign Vulnerability Attestation"},{"location":"docs/attestation/vuln/#generate-cosign-vulnerability-scan-record","text":"<p>Trivy generates reports in the Cosign vulnerability scan record format.</p> <p>You can use the regular subcommands (like image, fs and rootfs) and specify <code>cosign-vuln</code> with the --format option.</p> <pre><code>$ trivy image --format cosign-vuln --output vuln.json alpine:3.10\n</code></pre>  Result <pre><code>{\n  \"invocation\": {\n    \"parameters\": null,\n    \"uri\": \"\",\n    \"event_id\": \"\",\n    \"builder.id\": \"\"\n  },\n  \"scanner\": {\n    \"uri\": \"pkg:github/aquasecurity/trivy@v0.30.1-8-gf9cb8a28\",\n    \"version\": \"v0.30.1-8-gf9cb8a28\",\n    \"db\": {\n      \"uri\": \"\",\n      \"version\": \"\"\n    },\n    \"result\": {\n      \"SchemaVersion\": 2,\n      \"ArtifactName\": \"alpine:3.10\",\n      \"ArtifactType\": \"container_image\",\n      \"Metadata\": {\n        \"OS\": {\n          \"Family\": \"alpine\",\n          \"Name\": \"3.10.9\",\n          \"EOSL\": true\n        },\n        \"ImageID\": \"sha256:e7b300aee9f9bf3433d32bc9305bfdd22183beb59d933b48d77ab56ba53a197a\",\n        \"DiffIDs\": [\n          \"sha256:9fb3aa2f8b8023a4bebbf92aa567caf88e38e969ada9f0ac12643b2847391635\"\n        ],\n        \"RepoTags\": [\n          \"alpine:3.10\"\n        ],\n        \"RepoDigests\": [\n          \"alpine@sha256:451eee8bedcb2f029756dc3e9d73bab0e7943c1ac55cff3a4861c52a0fdd3e98\"\n        ],\n        \"ImageConfig\": {\n          \"architecture\": \"amd64\",\n          \"container\": \"fdb7e80e3339e8d0599282e606c907aa5881ee4c668a68136119e6dfac6ce3a4\",\n          \"created\": \"2021-04-14T19:20:05.338397761Z\",\n          \"docker_version\": \"19.03.12\",\n          \"history\": [\n            {\n              \"created\": \"2021-04-14T19:20:04.987219124Z\",\n              \"created_by\": \"/bin/sh -c #(nop) ADD file:c5377eaa926bf412dd8d4a08b0a1f2399cfd708743533b0aa03b53d14cb4bb4e in / \"\n            },\n            {\n              \"created\": \"2021-04-14T19:20:05.338397761Z\",\n              \"created_by\": \"/bin/sh -c #(nop)  CMD [\\\"/bin/sh\\\"]\",\n              \"empty_layer\": true\n            }\n          ],\n          \"os\": \"linux\",\n          \"rootfs\": {\n            \"type\": \"layers\",\n            \"diff_ids\": [\n              \"sha256:9fb3aa2f8b8023a4bebbf92aa567caf88e38e969ada9f0ac12643b2847391635\"\n            ]\n          },\n          \"config\": {\n            \"Cmd\": [\n              \"/bin/sh\"\n            ],\n            \"Env\": [\n              \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\"\n            ],\n            \"Image\": \"sha256:eb2080c455e94c22ae35b3aef9e078c492a00795412e026e4d6b41ef64bc7dd8\"\n          }\n        }\n      },\n      \"Results\": [\n        {\n          \"Target\": \"alpine:3.10 (alpine 3.10.9)\",\n          \"Class\": \"os-pkgs\",\n          \"Type\": \"alpine\",\n          \"Vulnerabilities\": [\n            {\n              \"VulnerabilityID\": \"CVE-2021-36159\",\n              \"PkgName\": \"apk-tools\",\n              \"InstalledVersion\": \"2.10.6-r0\",\n              \"FixedVersion\": \"2.10.7-r0\",\n              \"Layer\": {\n                \"Digest\": \"sha256:396c31837116ac290458afcb928f68b6cc1c7bdd6963fc72f52f365a2a89c1b5\",\n                \"DiffID\": \"sha256:9fb3aa2f8b8023a4bebbf92aa567caf88e38e969ada9f0ac12643b2847391635\"\n              },\n              \"SeveritySource\": \"nvd\",\n              \"PrimaryURL\": \"https://avd.aquasec.com/nvd/cve-2021-36159\",\n              \"DataSource\": {\n                \"ID\": \"alpine\",\n                \"Name\": \"Alpine Secdb\",\n                \"URL\": \"https://secdb.alpinelinux.org/\"\n              },\n              \"Description\": \"libfetch before 2021-07-26, as used in apk-tools, xbps, and other products, mishandles numeric strings for the FTP and HTTP protocols. The FTP passive mode implementation allows an out-of-bounds read because strtol is used to parse the relevant numbers into address bytes. It does not check if the line ends prematurely. If it does, the for-loop condition checks for the '\\\\0' terminator one byte too late.\",\n              \"Severity\": \"CRITICAL\",\n              \"CweIDs\": [\n                \"CWE-125\"\n              ],\n              \"CVSS\": {\n                \"nvd\": {\n                  \"V2Vector\": \"AV:N/AC:L/Au:N/C:P/I:N/A:P\",\n                  \"V3Vector\": \"CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:N/A:H\",\n                  \"V2Score\": 6.4,\n                  \"V3Score\": 9.1\n                }\n              },\n              \"References\": [\n                \"https://github.com/freebsd/freebsd-src/commits/main/lib/libfetch\",\n                \"https://gitlab.alpinelinux.org/alpine/apk-tools/-/issues/10749\",\n                \"https://lists.apache.org/thread.html/r61db8e7dcb56dc000a5387a88f7a473bacec5ee01b9ff3f55308aacc@%3Cdev.kafka.apache.org%3E\",\n                \"https://lists.apache.org/thread.html/r61db8e7dcb56dc000a5387a88f7a473bacec5ee01b9ff3f55308aacc@%3Cusers.kafka.apache.org%3E\",\n                \"https://lists.apache.org/thread.html/rbf4ce74b0d1fa9810dec50ba3ace0caeea677af7c27a97111c06ccb7@%3Cdev.kafka.apache.org%3E\",\n                \"https://lists.apache.org/thread.html/rbf4ce74b0d1fa9810dec50ba3ace0caeea677af7c27a97111c06ccb7@%3Cusers.kafka.apache.org%3E\"\n              ],\n              \"PublishedDate\": \"2021-08-03T14:15:00Z\",\n              \"LastModifiedDate\": \"2021-10-18T12:19:00Z\"\n            }\n          ]\n        }\n      ]\n    }\n  },\n  \"metadata\": {\n    \"scanStartedOn\": \"2022-07-24T17:14:04.864682+09:00\",\n    \"scanFinishedOn\": \"2022-07-24T17:14:04.864682+09:00\"\n  }\n}\n</code></pre>","title":"Generate Cosign Vulnerability Scan Record"},{"location":"docs/attestation/vuln/#create-cosign-vulnerability-attestation","text":"<p>Cosign supports generating and verifying in-toto attestations. This tool enables you to sign and verify Cosign vulnerability attestation.</p>  <p>Note</p> <p>In the following examples, the <code>cosign</code> command will write an attestation to a target OCI registry, so you must have permission to write. If you want to avoid writing an OCI registry and only want to see an attestation, add the <code>--no-upload</code> option to the <code>cosign</code> command.</p>","title":"Create Cosign Vulnerability Attestation"},{"location":"docs/attestation/vuln/#sign-with-a-local-key-pair","text":"<p>Cosign can generate key pairs and use them for signing and verification. Read more about how to generate key pairs.</p> <p>In the following example, Trivy generates a cosign vulnerability scan record, and then Cosign attaches an attestation of it to a container image with a local key pair.</p> <pre><code>$ trivy image --format cosign-vuln --output vuln.json &lt;IMAGE&gt;\n$ cosign attest --key /path/to/cosign.key --type vuln --predicate vuln.json &lt;IMAGE&gt;\n</code></pre> <p>Then, you can verify attestations on the image.</p> <pre><code>$ cosign verify-attestation --key /path/to/cosign.pub &lt;IMAGE&gt;\n</code></pre>","title":"Sign with a local key pair"},{"location":"docs/attestation/vuln/#keyless-signing","text":"<p>You can use Cosign to sign without keys by authenticating with an OpenID Connect protocol supported by sigstore (Google, GitHub, or Microsoft).</p> <pre><code>$ trivy image --format cosign-vuln -o vuln.json &lt;IMAGE&gt;\n$ COSIGN_EXPERIMENTAL=1 cosign attest --type vuln --predicate vuln.json &lt;IMAGE&gt;\n</code></pre> <p>You can verify attestations.</p> <pre><code>$ COSIGN_EXPERIMENTAL=1 cosign verify-attestation &lt;IMAGE&gt;\n</code></pre>","title":"Keyless signing"},{"location":"docs/integrations/","text":"<p>Scan your image automatically as part of your CI workflow, failing the workflow if a vulnerability is found. When you don't want to fail the test, specify <code>--exit-code 0</code>.</p>","title":"Integrations"},{"location":"docs/integrations/aws-codepipeline/","text":"<p>See this blog post for an example of using Trivy within AWS CodePipeline.</p>","title":"AWS CodePipeline"},{"location":"docs/integrations/aws-security-hub/","text":"","title":"AWS Security Hub"},{"location":"docs/integrations/aws-security-hub/#upload-findings-to-security-hub","text":"<p>In the following example using the template <code>asff.tpl</code>, ASFF file can be generated.</p> <pre><code>$ AWS_REGION=us-west-1 AWS_ACCOUNT_ID=123456789012 trivy image --format template --template \"@contrib/asff.tpl\" -o report.asff golang:1.12-alpine\n</code></pre> <p>ASFF template needs AWS_REGION and AWS_ACCOUNT_ID from environment variables.</p> <p>Then, you can upload it with AWS CLI.</p> <pre><code>$ aws securityhub batch-import-findings --findings file://report.asff\n</code></pre>","title":"Upload findings to Security Hub"},{"location":"docs/integrations/aws-security-hub/#customize","text":"<p>You can customize asff.tpl</p> <pre><code>$ export AWS_REGION=us-west-1\n$ export AWS_ACCOUNT_ID=123456789012\n$ trivy image --format template --template \"@your-asff.tpl\" -o report.asff golang:1.12-alpine\n</code></pre>","title":"Customize"},{"location":"docs/integrations/aws-security-hub/#reference","text":"<p>https://aws.amazon.com/blogs/security/how-to-build-ci-cd-pipeline-container-vulnerability-scanning-trivy-and-aws-security-hub/</p>","title":"Reference"},{"location":"docs/integrations/bitbucket/","text":"<p>See trivy-pipe for the details.</p>","title":"Bitbucket Pipelines"},{"location":"docs/integrations/circleci/","text":"<pre><code>$ cat .circleci/config.yml\njobs:\n  build:\n    docker:\n      - image: docker:stable-git\n    steps:\n      - checkout\n      - setup_remote_docker\n      - run:\n          name: Build image\n          command: docker build -t trivy-ci-test:${CIRCLE_SHA1} .\n      - run:\n          name: Install trivy\n          command: |\n            apk add --update-cache --upgrade curl\n            curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin\n      - run:\n          name: Scan the local image with trivy\n          command: trivy image --exit-code 0 --no-progress trivy-ci-test:${CIRCLE_SHA1}\nworkflows:\n  version: 2\n  release:\n    jobs:\n      - build\n</code></pre> <p>Example Repository</p>","title":"CircleCI"},{"location":"docs/integrations/github-actions/","text":"<ul> <li>Here is the Trivy GitHub Action</li> <li>The Microsoft Azure team have written a container-scan action that uses Trivy and Dockle</li> <li>For full control over the options specified to Trivy, this blog post describes adding Trivy into your own GitHub action workflows </li> </ul>","title":"GitHub Actions"},{"location":"docs/integrations/gitlab-ci/","text":"<p>GitLab 15.0 includes free integration with Trivy.</p> <p>To configure container scanning with Trivy in GitLab, simply include the CI template in your <code>.gitlab-ci.yml</code> file:</p> <pre><code>include:\n  - template: Security/Container-Scanning.gitlab-ci.yml\n</code></pre> <p>If you're a GitLab 14.x Ultimate customer, you can use the same configuration above.</p> <p>Alternatively, you can always use the example configurations below.</p> <pre><code>stages:\n  - test\n\ntrivy:\n  stage: test\n  image: docker:stable\n  services:\n    - name: docker:dind\n      entrypoint: [\"env\", \"-u\", \"DOCKER_HOST\"]\n      command: [\"dockerd-entrypoint.sh\"]\n  variables:\n    DOCKER_HOST: tcp://docker:2375/\n    DOCKER_DRIVER: overlay2\n    # See https://github.com/docker-library/docker/pull/166\n    DOCKER_TLS_CERTDIR: \"\"\n    IMAGE: trivy-ci-test:$CI_COMMIT_SHA\n    TRIVY_NO_PROGRESS: \"true\"\n    TRIVY_CACHE_DIR: \".trivycache/\"\n  before_script:\n    - export TRIVY_VERSION=$(wget -qO - \"https://api.github.com/repos/aquasecurity/trivy/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\n    - echo $TRIVY_VERSION\n    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -\n  allow_failure: true\n  script:\n    # Build image\n    - docker build -t $IMAGE .\n    # Build report\n    - ./trivy image --exit-code 0 --format template --template \"@contrib/gitlab.tpl\" -o gl-container-scanning-report.json $IMAGE\n    # Print report\n    - ./trivy image --exit-code 0 --severity HIGH $IMAGE\n    # Fail on severe vulnerabilities\n    - ./trivy image --exit-code 1 --severity CRITICAL $IMAGE\n  cache:\n    paths:\n      - .trivycache/\n  # Enables https://docs.gitlab.com/ee/user/application_security/container_scanning/ (Container Scanning report is available on GitLab EE Ultimate or GitLab.com Gold)\n  artifacts:\n    reports:\n      container_scanning: gl-container-scanning-report.json\n</code></pre> <p>Example Repository</p>","title":"GitLab CI"},{"location":"docs/integrations/gitlab-ci/#gitlab-ci-using-trivy-container","text":"<p>To scan a previously built image that has already been pushed into the GitLab container registry the following CI job manifest can be used. Note that <code>entrypoint</code> needs to be unset for the <code>script</code> section to work. In case of a non-public GitLab project Trivy additionally needs to authenticate to the registry to be able to pull your application image. Finally, it is not necessary to clone the project repo as we only work with the container image.</p> <pre><code>container_scanning:\n  image:\n    name: docker.io/aquasec/trivy:latest\n    entrypoint: [\"\"]\n  variables:\n    # No need to clone the repo, we exclusively work on artifacts.  See\n    # https://docs.gitlab.com/ee/ci/runners/README.html#git-strategy\n    GIT_STRATEGY: none\n    TRIVY_USERNAME: \"$CI_REGISTRY_USER\"\n    TRIVY_PASSWORD: \"$CI_REGISTRY_PASSWORD\"\n    TRIVY_AUTH_URL: \"$CI_REGISTRY\"\n    TRIVY_NO_PROGRESS: \"true\"\n    TRIVY_CACHE_DIR: \".trivycache/\"\n    FULL_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG\n  script:\n    - trivy --version\n    # cache cleanup is needed when scanning images with the same tags, it does not remove the database\n    - time trivy image --clear-cache\n    # update vulnerabilities db\n    - time trivy image --download-db-only\n    # Builds report and puts it in the default workdir $CI_PROJECT_DIR, so `artifacts:` can take it from there\n    - time trivy image --exit-code 0 --format template --template \"@/contrib/gitlab.tpl\"\n        --output \"$CI_PROJECT_DIR/gl-container-scanning-report.json\" \"$FULL_IMAGE_NAME\"\n    # Prints full report\n    - time trivy image --exit-code 0 \"$FULL_IMAGE_NAME\"\n    # Fail on critical vulnerabilities\n    - time trivy image --exit-code 1 --severity CRITICAL \"$FULL_IMAGE_NAME\"\n  cache:\n    paths:\n      - .trivycache/\n  # Enables https://docs.gitlab.com/ee/user/application_security/container_scanning/ (Container Scanning report is available on GitLab EE Ultimate or GitLab.com Gold)\n  artifacts:\n    when:                          always\n    reports:\n      container_scanning:          gl-container-scanning-report.json\n  tags:\n    - docker-runner\n</code></pre>","title":"GitLab CI using Trivy container"},{"location":"docs/integrations/gitlab-ci/#gitlab-ci-alternative-template","text":"<p>Depending on the edition of gitlab you have or your desired workflow, the container scanning template may not meet your needs. As an addition to the above container scanning template, a template for code climate has been included. The key things to update from the above examples are the <code>template</code> and <code>report</code> type. An updated example is below.</p> <pre><code>stages:\n  - test\n\ntrivy:\n  stage: test\n  image: docker:stable\n  services:\n    - name: docker:dind\n      entrypoint: [\"env\", \"-u\", \"DOCKER_HOST\"]\n      command: [\"dockerd-entrypoint.sh\"]\n  variables:\n    DOCKER_HOST: tcp://docker:2375/\n    DOCKER_DRIVER: overlay2\n    # See https://github.com/docker-library/docker/pull/166\n    DOCKER_TLS_CERTDIR: \"\"\n    IMAGE: trivy-ci-test:$CI_COMMIT_SHA\n    TRIVY_NO_PROGRESS: \"true\"\n    TRIVY_CACHE_DIR: \".trivycache/\"\n  before_script:\n    - export TRIVY_VERSION=$(wget -qO - \"https://api.github.com/repos/aquasecurity/trivy/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\n    - echo $TRIVY_VERSION\n    - wget --no-verbose https://github.com/aquasecurity/trivy/releases/download/v${TRIVY_VERSION}/trivy_${TRIVY_VERSION}_Linux-64bit.tar.gz -O - | tar -zxvf -\n  allow_failure: true\n  script:\n    # Build image\n    - docker build -t $IMAGE .\n    # Image report\n    - ./trivy image --exit-code 0 --format template --template \"@contrib/gitlab-codequality.tpl\" -o gl-codeclimate-image.json $IMAGE\n    # Filesystem report\n    - ./trivy filesystem --security-checks config,vuln --exit-code 0 --format template --template \"@contrib/gitlab-codequality.tpl\" -o gl-codeclimate-fs.json .\n    # Combine report\n    - apk update &amp;&amp; apk add jq\n    - jq -s 'add' gl-codeclimate-image.json gl-codeclimate-fs.json &gt; gl-codeclimate.json\n  cache:\n    paths:\n      - .trivycache/\n  # Enables https://docs.gitlab.com/ee/user/application_security/container_scanning/ (Container Scanning report is available on GitLab EE Ultimate or GitLab.com Gold)\n  artifacts:\n    paths:\n      - gl-codeclimate.json\n    reports:\n      codequality: gl-codeclimate.json\n</code></pre> <p>Currently gitlab only supports a single code quality report. There is an open feature request to support multiple reports. Until this has been implemented, if you already have a code quality report in your pipeline, you can use <code>jq</code> to combine reports. Depending on how you name your artifacts, it may be necessary to rename the artifact if you want to reuse the name. To then combine the previous artifact with the output of trivy, the following <code>jq</code> command can be used, <code>jq -s 'add' prev-codeclimate.json trivy-codeclimate.json &gt; gl-codeclimate.json</code>.</p>","title":"GitLab CI alternative template"},{"location":"docs/integrations/gitlab-ci/#gitlab-ci-alternative-template-example-report","text":"<p>You'll be able to see a full report in the GitLab pipeline code quality UI, where filesystem vulnerabilities and misconfigurations include links to the flagged files and image vulnerabilities report the image/os or runtime/library that the vulnerability originates from instead.</p> <p></p>","title":"GitLab CI alternative template example report"},{"location":"docs/integrations/travis-ci/","text":"<pre><code>$ cat .travis.yml\nservices:\n  - docker\n\nenv:\n  global:\n    - COMMIT=${TRAVIS_COMMIT::8}\n\nbefore_install:\n  - docker build -t trivy-ci-test:${COMMIT} .\n  - export VERSION=$(curl --silent \"https://api.github.com/repos/aquasecurity/trivy/releases/latest\" | grep '\"tag_name\":' | sed -E 's/.*\"v([^\"]+)\".*/\\1/')\n  - wget https://github.com/aquasecurity/trivy/releases/download/v${VERSION}/trivy_${VERSION}_Linux-64bit.tar.gz\n  - tar zxvf trivy_${VERSION}_Linux-64bit.tar.gz\nscript:\n  - ./trivy image --exit-code 0 --severity HIGH --no-progress trivy-ci-test:${COMMIT}\n  - ./trivy image --exit-code 1 --severity CRITICAL --no-progress trivy-ci-test:${COMMIT}\ncache:\n  directories:\n    - $HOME/.cache/trivy\n</code></pre> <p>Example Repository</p>","title":"Travis CI"},{"location":"docs/kubernetes/cli/scanning/","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>The Trivy K8s CLI allows you to scan your Kubernetes cluster for Vulnerabilities, Secrets and Misconfigurations. You can either run the CLI locally or integrate it into your CI/CD pipeline. The difference to the Trivy CLI is that the Trivy K8s CLI allows you to scan running workloads directly within your cluster.</p> <p>If you are looking for continuous cluster audit scanning, have a look at the Trivy K8s operator.</p> <p>Trivy uses your local kubectl configuration to access the API server to list artifacts.</p>","title":"Kubernetes"},{"location":"docs/kubernetes/cli/scanning/#cli-commands","text":"<p>Scan a full cluster and generate a simple summary report:</p> <pre><code>$ trivy k8s --report=summary cluster\n</code></pre> <p></p> <p>The summary report is the default. To get all of the detail the output contains, use <code>--report all</code>.</p> <p>Filter by severity:</p> <pre><code>$ trivy k8s --severity=CRITICAL --report=all cluster\n</code></pre> <p>Filter by security check (Vulnerabilities, Secrets or Misconfigurations):</p> <pre><code>$ trivy k8s --security-checks=secret --report=summary cluster\n# or\n$ trivy k8s --security-checks=config --report=summary cluster\n</code></pre> <p>Scan a specific namespace:</p> <pre><code>$ trivy k8s -n kube-system --report=summary all\n</code></pre> <p>Scan a specific resource and get all the output:</p> <pre><code>$ trivy k8s deployment appname\n</code></pre> <p>Scan all deploys, or deploys and configmaps:</p> <pre><code>$ trivy k8s --report=summary deployment\n$ trivy k8s --report=summary deployment,configmaps\n</code></pre> <p>If you want to pass in flags before scanning specific workloads, you will have to do it before the resource name. For example, scanning a deployment in the app namespace of your Kubernetes cluster for critical vulnerabilities would be done through the following command:</p> <p><pre><code>$ trivy k8s -n app --severity=CRITICAL deployment/appname\n</code></pre> This is specific to all Trivy CLI commands.</p> <p>The supported formats are <code>table</code>, which is the default, and <code>json</code>. To get a JSON output on a full cluster scan:</p> <pre><code>$ trivy k8s --format json -o results.json cluster\n</code></pre>  Result <pre><code>{\n  \"ClusterName\": \"minikube\",\n  \"Vulnerabilities\": [\n    {\n      \"Namespace\": \"default\",\n      \"Kind\": \"Deployment\",\n      \"Name\": \"app\",\n      \"Results\": [\n        {\n          \"Target\": \"ubuntu:latest (ubuntu 22.04)\",\n          \"Class\": \"os-pkgs\",\n          \"Type\": \"ubuntu\",\n          \"Vulnerabilities\": [\n            {\n              \"VulnerabilityID\": \"CVE-2016-2781\",\n              \"PkgName\": \"coreutils\",\n              \"InstalledVersion\": \"8.32-4.1ubuntu1\",\n              \"Layer\": {\n                \"Digest\": \"sha256:125a6e411906fe6b0aaa50fc9d600bf6ff9bb11a8651727ce1ed482dc271c24c\",\n                \"DiffID\": \"sha256:e59fc94956120a6c7629f085027578e6357b48061d45714107e79f04a81a6f0c\"\n              },\n              \"SeveritySource\": \"ubuntu\",\n              \"PrimaryURL\": \"https://avd.aquasec.com/nvd/cve-2016-2781\",\n              \"DataSource\": {\n                \"ID\": \"ubuntu\",\n                \"Name\": \"Ubuntu CVE Tracker\",\n                \"URL\": \"https://git.launchpad.net/ubuntu-cve-tracker\"\n              },\n              \"Title\": \"coreutils: Non-privileged session can escape to the parent session in chroot\",\n              \"Description\": \"chroot in GNU coreutils, when used with --userspec, allows local users to escape to the parent session via a crafted TIOCSTI ioctl call, which pushes characters to the terminal's input buffer.\",\n              \"Severity\": \"LOW\",\n              \"CweIDs\": [\n                \"CWE-20\"\n              ],\n              \"VendorSeverity\": {\n                \"cbl-mariner\": 2,\n                \"nvd\": 2,\n                \"redhat\": 2,\n                \"ubuntu\": 1\n              },\n              \"CVSS\": {\n                \"nvd\": {\n                  \"V2Vector\": \"AV:L/AC:L/Au:N/C:N/I:P/A:N\",\n                  \"V3Vector\": \"CVSS:3.0/AV:L/AC:L/PR:L/UI:N/S:C/C:N/I:H/A:N\",\n                  \"V2Score\": 2.1,\n                  \"V3Score\": 6.5\n                },\n                \"redhat\": {\n                  \"V2Vector\": \"AV:L/AC:H/Au:N/C:C/I:C/A:C\",\n                  \"V3Vector\": \"CVSS:3.0/AV:L/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H\",\n                  \"V2Score\": 6.2,\n                  \"V3Score\": 8.6\n                }\n              },\n              \"References\": [\n                \"http://seclists.org/oss-sec/2016/q1/452\",\n                \"http://www.openwall.com/lists/oss-security/2016/02/28/2\",\n                \"http://www.openwall.com/lists/oss-security/2016/02/28/3\",\n                \"https://access.redhat.com/security/cve/CVE-2016-2781\",\n                \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2016-2781\",\n                \"https://lists.apache.org/thread.html/rf9fa47ab66495c78bb4120b0754dd9531ca2ff0430f6685ac9b07772@%3Cdev.mina.apache.org%3E\",\n                \"https://lore.kernel.org/patchwork/patch/793178/\",\n                \"https://nvd.nist.gov/vuln/detail/CVE-2016-2781\"\n              ],\n              \"PublishedDate\": \"2017-02-07T15:59:00Z\",\n              \"LastModifiedDate\": \"2021-02-25T17:15:00Z\"\n            }\n          ]\n        }\n      ]\n    }\n  ],\n  \"Misconfigurations\": [\n    {\n      \"Namespace\": \"default\",\n      \"Kind\": \"Deployment\",\n      \"Name\": \"app\",\n      \"Results\": [\n        {\n          \"Target\": \"Deployment/app\",\n          \"Class\": \"config\",\n          \"Type\": \"kubernetes\",\n          \"MisconfSummary\": {\n            \"Successes\": 20,\n            \"Failures\": 19,\n            \"Exceptions\": 0\n          },\n          \"Misconfigurations\": [\n            {\n              \"Type\": \"Kubernetes Security Check\",\n              \"ID\": \"KSV001\",\n              \"Title\": \"Process can elevate its own privileges\",\n              \"Description\": \"A program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.\",\n              \"Message\": \"Container 'app' of Deployment 'app' should set 'securityContext.allowPrivilegeEscalation' to false\",\n              \"Namespace\": \"builtin.kubernetes.KSV001\",\n              \"Query\": \"data.builtin.kubernetes.KSV001.deny\",\n              \"Resolution\": \"Set 'set containers[].securityContext.allowPrivilegeEscalation' to 'false'.\",\n              \"Severity\": \"MEDIUM\",\n              \"PrimaryURL\": \"https://avd.aquasec.com/misconfig/ksv001\",\n              \"References\": [\n                \"https://kubernetes.io/docs/concepts/security/pod-security-standards/#restricted\",\n                \"https://avd.aquasec.com/misconfig/ksv001\"\n              ],\n              \"Status\": \"FAIL\",\n              \"Layer\": {},\n              \"IacMetadata\": {\n                \"Provider\": \"Kubernetes\",\n                \"Service\": \"general\",\n                \"StartLine\": 121,\n                \"EndLine\": 133\n              }\n            },\n            {\n              \"Type\": \"Kubernetes Security Check\",\n              \"ID\": \"KSV003\",\n              \"Title\": \"Default capabilities not dropped\",\n              \"Description\": \"The container should drop all default capabilities and add only those that are needed for its execution.\",\n              \"Message\": \"Container 'app' of Deployment 'app' should add 'ALL' to 'securityContext.capabilities.drop'\",\n              \"Namespace\": \"builtin.kubernetes.KSV003\",\n              \"Query\": \"data.builtin.kubernetes.KSV003.deny\",\n              \"Resolution\": \"Add 'ALL' to containers[].securityContext.capabilities.drop.\",\n              \"Severity\": \"LOW\",\n              \"PrimaryURL\": \"https://avd.aquasec.com/misconfig/ksv003\",\n              \"References\": [\n                \"https://kubesec.io/basics/containers-securitycontext-capabilities-drop-index-all/\",\n                \"https://avd.aquasec.com/misconfig/ksv003\"\n              ],\n              \"Status\": \"FAIL\",\n              \"Layer\": {},\n              \"IacMetadata\": {\n                \"Provider\": \"Kubernetes\",\n                \"Service\": \"general\",\n                \"StartLine\": 121,\n                \"EndLine\": 133\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"Namespace\": \"default\",\n      \"Kind\": \"ConfigMap\",\n      \"Name\": \"kube-root-ca.crt\"\n    }\n  ]\n}\n</code></pre>","title":"CLI Commands"},{"location":"docs/kubernetes/operator/","text":"<p>Trivy has a native Kubernetes Operator which continuously scans your Kubernetes cluster for security issues, and generates security reports as Kubernetes Custom Resources. It does it by watching Kubernetes for state changes and automatically triggering scans in response to changes, for example initiating a vulnerability scan when a new Pod is created.</p>  <p>Kubernetes-native security toolkit. (Documentation).</p>   Workload reconcilers discover K8s controllers, manage scan jobs, and create VulnerabilityReport and ConfigAuditReport objects.","title":"Trivy Operator"},{"location":"docs/licenses/scanning/","text":"<p>Trivy scans any container image for license files and offers an opinionated view on the risk associated with the license.</p> <p>License are classified using the Google License Classification -</p> <ul> <li>Forbidden</li> <li>Restricted </li> <li>Reciprocal</li> <li>Notice</li> <li>Permissive</li> <li>Unencumbered</li> <li>Unknown</li> </ul>  <p>Tip</p> <p>Licenses that Trivy fails to recognize are classified as UNKNOWN. As those licenses may be in violation, it is recommended to check those unknown licenses as well.    </p>  <p>By default, Trivy scans licenses for packages installed by <code>apk</code>, <code>apt-get</code>, <code>dnf</code>, <code>npm</code>, <code>pip</code>, <code>gem</code>, etc. To enable extended license scanning, you can use <code>--license-full</code>. In addition to package licenses, Trivy scans source code files, Markdown documents, text files and <code>LICENSE</code> documents to identify license usage within the image or filesystem.</p>  <p>Note</p> <p>The full license scanning is expensive. It takes a while.</p>  <p>Currently, the standard license scanning doesn't support filesystem and repository scanning.</p>    License scnanning Image Rootfs Filesystem Repository     Standard \u2705 \u2705 - -   Full (--license-full) \u2705 \u2705 \u2705 \u2705    <p>License checking classifies the identified licenses and map the classification to severity.</p>    Classification Severity     Forbidden CRITICAL   Restricted HIGH   Reciprocal MEDIUM   Notice LOW   Permissive LOW   Unencumbered LOW   Unknown UNKNOWN","title":"License Scanning"},{"location":"docs/licenses/scanning/#quick-start","text":"<p>This section shows how to scan license in container image and filesystem.</p>","title":"Quick start"},{"location":"docs/licenses/scanning/#standard-scanning","text":"<p>Specify an image name with <code>--security-cheks license</code>.</p> <pre><code>$ trivy image --security-checks license --severity UNKNOWN,HIGH,CRITICAL alpine:3.15\n2022-07-13T17:28:39.526+0300    INFO    License scanning is enabled\n\nOS Packages (license)\n=====================\nTotal: 6 (UNKNOWN: 0, HIGH: 6, CRITICAL: 0)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      Package      \u2502 License \u2502 Classification \u2502 Severity \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 alpine-baselayout \u2502 GPL-2.0 \u2502 Restricted     \u2502 HIGH     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524         \u2502                \u2502          \u2502\n\u2502 apk-tools         \u2502         \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524         \u2502                \u2502          \u2502\n\u2502 busybox           \u2502         \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524         \u2502                \u2502          \u2502\n\u2502 musl-utils        \u2502         \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524         \u2502                \u2502          \u2502\n\u2502 scanelf           \u2502         \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524         \u2502                \u2502          \u2502\n\u2502 ssl_client        \u2502         \u2502                \u2502          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>","title":"Standard scanning"},{"location":"docs/licenses/scanning/#full-scanning","text":"<p>Specify <code>--license-full</code></p> <pre><code>$ trivy image --security-checks license --severity UNKNOWN,HIGH,CRITICAL --license-full grafana/grafana\n2022-07-13T17:48:40.905+0300    INFO    Full license scanning is enabled\n\nOS Packages (license)\n=====================\nTotal: 20 (UNKNOWN: 9, HIGH: 11, CRITICAL: 0)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      Package      \u2502      License      \u2502 Classification \u2502 Severity \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 alpine-baselayout \u2502 GPL-2.0           \u2502 Restricted     \u2502 HIGH     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                   \u2502                \u2502          \u2502\n\u2502 apk-tools         \u2502                   \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                \u2502          \u2502\n\u2502 bash              \u2502 GPL-3.0           \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 keyutils-libs     \u2502 GPL-2.0           \u2502 Restricted     \u2502 HIGH     \u2502\n\u2502                   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                   \u2502 LGPL-2.0-or-later \u2502 Non Standard   \u2502 UNKNOWN  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                \u2502          \u2502\n\u2502 libaio            \u2502 LGPL-2.1-or-later \u2502                \u2502          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 libcom_err        \u2502 GPL-2.0           \u2502 Restricted     \u2502 HIGH     \u2502\n\u2502                   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                   \u2502 LGPL-2.0-or-later \u2502 Non Standard   \u2502 UNKNOWN  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 tzdata            \u2502 Public-Domain     \u2502 Non Standard   \u2502 UNKNOWN  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nLoose File License(s) (license)\n===============================\nTotal: 6 (UNKNOWN: 4, HIGH: 0, CRITICAL: 2)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Classification \u2502 Severity \u2502   License    \u2502                        File Location                         \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Forbidden      \u2502 CRITICAL \u2502 AGPL-3.0     \u2502 /usr/share/grafana/LICENSE                                   \u2502\n\u2502                \u2502          \u2502              \u2502                                                              \u2502\n\u2502                \u2502          \u2502              \u2502                                                              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 Non Standard   \u2502 UNKNOWN  \u2502 BSD-0-Clause \u2502 /usr/share/grafana/public/build/5069.d6aae9dd11d49c741a80.j- \u2502\n\u2502                \u2502          \u2502              \u2502 s.LICENSE.txt                                                \u2502\n\u2502                \u2502          \u2502              \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                \u2502          \u2502              \u2502 /usr/share/grafana/public/build/6444.d6aae9dd11d49c741a80.j- \u2502\n\u2502                \u2502          \u2502              \u2502 s.LICENSE.txt                                                \u2502\n\u2502                \u2502          \u2502              \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                \u2502          \u2502              \u2502 /usr/share/grafana/public/build/7889.d6aae9dd11d49c741a80.j- \u2502\n\u2502                \u2502          \u2502              \u2502 s.LICENSE.txt                                                \u2502\n\u2502                \u2502          \u2502              \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502                \u2502          \u2502              \u2502 /usr/share/grafana/public/build/canvasPanel.d6aae9dd11d49c7- \u2502\n\u2502                \u2502          \u2502              \u2502 41a80.js.LICENSE.txt                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>","title":"Full scanning"},{"location":"docs/licenses/scanning/#configuration","text":"<p>Trivy has number of configuration flags for use with license scanning;</p>","title":"Configuration"},{"location":"docs/licenses/scanning/#ignored-licenses","text":"<p>Trivy license scanning can ignore licenses that are identified to explicitly remove them from the results using the <code>--ignored-licenses</code> flag;</p> <pre><code>$ trivy image --security-checks license --ignored-licenses MPL-2.0,MIT --severity LOW grafana/grafana:latest\n2022-07-13T18:15:28.605Z        INFO    License scanning is enabled\n\nOS Packages (license)\n=====================\nTotal: 2 (HIGH: 2, CRITICAL: 0)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502      Package      \u2502 License \u2502 Classification \u2502 Severity \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 alpine-baselayout \u2502 GPL-2.0 \u2502 Restricted     \u2502 HIGH     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524         \u2502                \u2502          \u2502\n\u2502 ssl_client        \u2502         \u2502                \u2502          \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>","title":"Ignored Licenses"},{"location":"docs/licenses/scanning/#custom-classification","text":"<p>You can generate the default config by the <code>--generate-default-config</code> flag and customize the license classification. For example, if you want to forbid only AGPL-3.0, you can leave it under <code>forbidden</code> and move other licenses to another classification.</p> <pre><code>$ trivy image --generate-default-config\n$ vim trivy.yaml\nlicense:\n  forbidden:\n  - AGPL-3.0\n\n  restricted:\n  - AGPL-1.0\n  - CC-BY-NC-1.0\n  - CC-BY-NC-2.0\n  - CC-BY-NC-2.5\n  - CC-BY-NC-3.0\n  - CC-BY-NC-4.0\n  - CC-BY-NC-ND-1.0\n  - CC-BY-NC-ND-2.0\n  - CC-BY-NC-ND-2.5\n  - CC-BY-NC-ND-3.0\n  - CC-BY-NC-ND-4.0\n  - CC-BY-NC-SA-1.0\n  - CC-BY-NC-SA-2.0\n  - CC-BY-NC-SA-2.5\n  - CC-BY-NC-SA-3.0\n  - CC-BY-NC-SA-4.0\n  - Commons-Clause\n  - Facebook-2-Clause\n  - Facebook-3-Clause\n  - Facebook-Examples\n  - WTFPL\n  - BCL\n  - CC-BY-ND-1.0\n  - CC-BY-ND-2.0\n  - CC-BY-ND-2.5\n  - CC-BY-ND-3.0\n  - CC-BY-ND-4.0\n  - CC-BY-SA-1.0\n  - CC-BY-SA-2.0\n  - CC-BY-SA-2.5\n  - CC-BY-SA-3.0\n  - CC-BY-SA-4.0\n  - GPL-1.0\n  - GPL-2.0\n  - GPL-2.0-with-autoconf-exception\n  - GPL-2.0-with-bison-exception\n  - GPL-2.0-with-classpath-exception\n  - GPL-2.0-with-font-exception\n  - GPL-2.0-with-GCC-exception\n  - GPL-3.0\n  - GPL-3.0-with-autoconf-exception\n  - GPL-3.0-with-GCC-exception\n  - LGPL-2.0\n  - LGPL-2.1\n  - LGPL-3.0\n  - NPL-1.0\n  - NPL-1.1\n  - OSL-1.0\n  - OSL-1.1\n  - OSL-2.0\n  - OSL-2.1\n  - OSL-3.0\n  - QPL-1.0\n  - Sleepycat\n\n  reciprocal:\n  - APSL-1.0\n  - APSL-1.1\n  - APSL-1.2\n  - APSL-2.0\n  - CDDL-1.0\n  - CDDL-1.1\n  - CPL-1.0\n  - EPL-1.0\n  - EPL-2.0\n  - FreeImage\n  - IPL-1.0\n  - MPL-1.0\n  - MPL-1.1\n  - MPL-2.0\n  - Ruby\n\n  notice:\n  - AFL-1.1\n  - AFL-1.2\n  - AFL-2.0\n  - AFL-2.1\n  - AFL-3.0\n  - Apache-1.0\n  - Apache-1.1\n  - Apache-2.0\n  - Artistic-1.0-cl8\n  - Artistic-1.0-Perl\n  - Artistic-1.0\n  - Artistic-2.0\n  - BSL-1.0\n  - BSD-2-Clause-FreeBSD\n  - BSD-2-Clause-NetBSD\n  - BSD-2-Clause\n  - BSD-3-Clause-Attribution\n  - BSD-3-Clause-Clear\n  - BSD-3-Clause-LBNL\n  - BSD-3-Clause\n  - BSD-4-Clause\n  - BSD-4-Clause-UC\n  - BSD-Protection\n  - CC-BY-1.0\n  - CC-BY-2.0\n  - CC-BY-2.5\n  - CC-BY-3.0\n  - CC-BY-4.0\n  - FTL\n  - ISC\n  - ImageMagick\n  - Libpng\n  - Lil-1.0\n  - Linux-OpenIB\n  - LPL-1.02\n  - LPL-1.0\n  - MS-PL\n  - MIT\n  - NCSA\n  - OpenSSL\n  - PHP-3.01\n  - PHP-3.0\n  - PIL\n  - Python-2.0\n  - Python-2.0-complete\n  - PostgreSQL\n  - SGI-B-1.0\n  - SGI-B-1.1\n  - SGI-B-2.0\n  - Unicode-DFS-2015\n  - Unicode-DFS-2016\n  - Unicode-TOU\n  - UPL-1.0\n  - W3C-19980720\n  - W3C-20150513\n  - W3C\n  - X11\n  - Xnet\n  - Zend-2.0\n  - zlib-acknowledgement\n  - Zlib\n  - ZPL-1.1\n  - ZPL-2.0\n  - ZPL-2.1\n\n  unencumbered:\n  - CC0-1.0\n  - Unlicense\n  - 0BSD\n\n  permissive: []\n</code></pre>","title":"Custom Classification"},{"location":"docs/misconfiguration/scanning/","text":"<p>Trivy provides built-in policies to detect configuration issues in Docker, Kubernetes, Terraform and CloudFormation. Also, you can write your own policies in Rego to scan JSON, YAML, etc, like Conftest.</p> <p></p>","title":"Misconfiguration Scanning"},{"location":"docs/misconfiguration/scanning/#quick-start","text":"<p>Simply specify a directory containing IaC files such as Terraform, CloudFormation and Dockerfile.</p> <pre><code>$ trivy config [YOUR_IaC_DIRECTORY]\n</code></pre>  <p>Example</p> <pre><code>$ ls build/\nDockerfile\n$ trivy config ./build\n2022-05-16T13:29:29.952+0100    INFO    Detected config files: 1\n\nDockerfile (dockerfile)\n=======================\nTests: 23 (SUCCESSES: 22, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\n\nMEDIUM: Specify a tag in the 'FROM' statement for image 'alpine'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nWhen using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated.\n\nSee https://avd.aquasec.com/misconfig/ds001\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nDockerfile:1\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n1 [ FROM alpine:latest\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>  <p>You can also enable misconfiguration detection in container image, filesystem and git repository scanning via <code>--security-checks config</code>.</p> <pre><code>$ trivy image --security-checks config IMAGE_NAME\n</code></pre> <pre><code>$ trivy fs --security-checks config /path/to/dir\n</code></pre>  <p>Note</p> <p>Misconfiguration detection is not enabled by default in <code>image</code>, <code>fs</code> and <code>repo</code> subcommands.</p>  <p>Unlike the <code>config</code> subcommand, <code>image</code>, <code>fs</code> and <code>repo</code> subcommands can also scan for vulnerabilities and secrets at the same time.  You can specify <code>--security-checks vuln,config,secret</code> to enable vulnerability and secret detection as well as misconfiguration detection.</p>  <p>Example</p> <pre><code>$ ls myapp/\nDockerfile Pipfile.lock\n$ trivy fs --security-checks vuln,config,secret --severity HIGH,CRITICAL myapp/\n2022-05-16T13:42:21.440+0100    INFO    Number of language-specific files: 1\n2022-05-16T13:42:21.440+0100    INFO    Detecting pipenv vulnerabilities...\n2022-05-16T13:42:21.440+0100    INFO    Detected config files: 1\n\nPipfile.lock (pipenv)\n=====================\nTotal: 1 (HIGH: 1, CRITICAL: 0)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Library  \u2502 Vulnerability  \u2502 Severity \u2502 Installed Version \u2502 Fixed Version \u2502                           Title                           \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 httplib2 \u2502 CVE-2021-21240 \u2502 HIGH     \u2502 0.12.1            \u2502 0.19.0        \u2502 python-httplib2: Regular expression denial of service via \u2502\n\u2502          \u2502                \u2502          \u2502                   \u2502               \u2502 malicious header                                          \u2502\n\u2502          \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2021-21240                \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nDockerfile (dockerfile)\n=======================\nTests: 17 (SUCCESSES: 16, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (HIGH: 1, CRITICAL: 0)\n\nHIGH: Last USER command in Dockerfile should not be 'root'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n\nSee https://avd.aquasec.com/misconfig/ds002\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\nDockerfile:3\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n3 [ USER root\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>  <p>In the above example, Trivy detected vulnerabilities of Python dependencies and misconfigurations in Dockerfile.</p>","title":"Quick start"},{"location":"docs/misconfiguration/scanning/#type-detection","text":"<p>The specified directory can contain mixed types of IaC files. Trivy automatically detects config types and applies relevant policies.</p> <p>For example, the following example holds IaC files for Terraform, CloudFormation, Kubernetes, Helm Charts, and Dockerfile in the same directory.</p> <pre><code>$ ls iac/\nDockerfile  deployment.yaml  main.tf mysql-8.8.26.tar\n$ trivy conf --severity HIGH,CRITICAL ./iac\n</code></pre>  Result <pre><code>2022-06-06T11:01:21.142+0100    INFO    Detected config files: 8\n\nDockerfile (dockerfile)\n\nTests: 21 (SUCCESSES: 20, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (MEDIUM: 0, HIGH: 1, CRITICAL: 0)\n\nHIGH: Specify at least 1 USER command in Dockerfile with non-root user as argument\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n\nSee https://avd.aquasec.com/misconfig/ds002\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\n\ndeployment.yaml (kubernetes)\n\nTests: 20 (SUCCESSES: 15, FAILURES: 5, EXCEPTIONS: 0)\nFailures: 5 (MEDIUM: 4, HIGH: 1, CRITICAL: 0)\n\nMEDIUM: Container 'hello-kubernetes' of Deployment 'hello-kubernetes' should set 'securityContext.allowPrivilegeEscalation' to false\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nA program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.\n\nSee https://avd.aquasec.com/misconfig/ksv001\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n deployment.yaml:16-19\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  16 \u250c       - name: hello-kubernetes\n  17 \u2502         image: hello-kubernetes:1.5\n  18 \u2502         ports:\n  19 \u2514         - containerPort: 8080\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\nHIGH: Deployment 'hello-kubernetes' should not specify '/var/run/docker.socker' in 'spec.template.volumes.hostPath.path'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nMounting docker.sock from the host can give the container full root access to the host.\n\nSee https://avd.aquasec.com/misconfig/ksv006\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n deployment.yaml:6-29\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   6 \u250c   replicas: 3\n   7 \u2502   selector:\n   8 \u2502     matchLabels:\n   9 \u2502       app: hello-kubernetes\n  10 \u2502   template:\n  11 \u2502     metadata:\n  12 \u2502       labels:\n  13 \u2502         app: hello-kubernetes\n  14 \u2514     spec:\n  ..   \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\nMEDIUM: Container 'hello-kubernetes' of Deployment 'hello-kubernetes' should set 'securityContext.runAsNonRoot' to true\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.\n\nSee https://avd.aquasec.com/misconfig/ksv012\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n deployment.yaml:16-19\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  16 \u250c       - name: hello-kubernetes\n  17 \u2502         image: hello-kubernetes:1.5\n  18 \u2502         ports:\n  19 \u2514         - containerPort: 8080\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\nMEDIUM: Deployment 'hello-kubernetes' should not set 'spec.template.volumes.hostPath'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nHostPath volumes must be forbidden.\n\nSee https://avd.aquasec.com/misconfig/ksv023\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n deployment.yaml:6-29\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   6 \u250c   replicas: 3\n   7 \u2502   selector:\n   8 \u2502     matchLabels:\n   9 \u2502       app: hello-kubernetes\n  10 \u2502   template:\n  11 \u2502     metadata:\n  12 \u2502       labels:\n  13 \u2502         app: hello-kubernetes\n  14 \u2514     spec:\n  ..   \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\nMEDIUM: Deployment 'hello-kubernetes' should set 'securityContext.sysctl' to the allowed values\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nSysctls can disable security mechanisms or affect all containers on a host, and should be disallowed except for an allowed 'safe' subset. A sysctl is considered safe if it is namespaced in the container or the Pod, and it is isolated from other Pods or processes on the same Node.\n\nSee https://avd.aquasec.com/misconfig/ksv026\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n deployment.yaml:6-29\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   6 \u250c   replicas: 3\n   7 \u2502   selector:\n   8 \u2502     matchLabels:\n   9 \u2502       app: hello-kubernetes\n  10 \u2502   template:\n  11 \u2502     metadata:\n  12 \u2502       labels:\n  13 \u2502         app: hello-kubernetes\n  14 \u2514     spec:\n  ..   \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\n\nmysql-8.8.26.tar:templates/primary/statefulset.yaml (helm)\n\nTests: 20 (SUCCESSES: 18, FAILURES: 2, EXCEPTIONS: 0)\nFailures: 2 (MEDIUM: 2, HIGH: 0, CRITICAL: 0)\n\nMEDIUM: Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.allowPrivilegeEscalation' to false\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nA program inside the container can elevate its own privileges and run as root, which might give the program control over the container and node.\n\nSee https://avd.aquasec.com/misconfig/ksv001\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n mysql-8.8.26.tar:templates/primary/statefulset.yaml:56-130\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  56 \u250c         - name: mysql\n  57 \u2502           image: docker.io/bitnami/mysql:8.0.28-debian-10-r23\n  58 \u2502           imagePullPolicy: \"IfNotPresent\"\n  59 \u2502           securityContext:\n  60 \u2502             runAsUser: 1001\n  61 \u2502           env:\n  62 \u2502             - name: BITNAMI_DEBUG\n  63 \u2502               value: \"false\"\n  64 \u2514             - name: MYSQL_ROOT_PASSWORD\n  ..   \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\nMEDIUM: Container 'mysql' of StatefulSet 'mysql' should set 'securityContext.runAsNonRoot' to true\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\n'runAsNonRoot' forces the running image to run as a non-root user to ensure least privileges.\n\nSee https://avd.aquasec.com/misconfig/ksv012\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n mysql-8.8.26.tar:templates/primary/statefulset.yaml:56-130\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n  56 \u250c         - name: mysql\n  57 \u2502           image: docker.io/bitnami/mysql:8.0.28-debian-10-r23\n  58 \u2502           imagePullPolicy: \"IfNotPresent\"\n  59 \u2502           securityContext:\n  60 \u2502             runAsUser: 1001\n  61 \u2502           env:\n  62 \u2502             - name: BITNAMI_DEBUG\n  63 \u2502               value: \"false\"\n  64 \u2514             - name: MYSQL_ROOT_PASSWORD\n  ..   \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>  <p>You can see the config type next to each file name.</p>  <p>Example</p>  <pre><code>Dockerfile (dockerfile)\n=======================\nTests: 23 (SUCCESSES: 22, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (HIGH: 1, CRITICAL: 0)\n\n...\n\ndeployment.yaml (kubernetes)\n============================\nTests: 28 (SUCCESSES: 15, FAILURES: 13, EXCEPTIONS: 0)\nFailures: 13 (MEDIUM: 4, HIGH: 1, CRITICAL: 0)\n\n...\n\nmain.tf (terraform)\n===================\nTests: 23 (SUCCESSES: 14, FAILURES: 9, EXCEPTIONS: 0)\nFailures: 9 (HIGH: 6, CRITICAL: 1)\n\n...\n\nbucket.yaml (cloudformation)\n============================\nTests: 9 (SUCCESSES: 3, FAILURES: 6, EXCEPTIONS: 0)\nFailures: 6 (UNKNOWN: 0, LOW: 0, MEDIUM: 2, HIGH: 4, CRITICAL: 0)\n\n...\n\nmysql-8.8.26.tar:templates/primary/statefulset.yaml (helm)\n==========================================================\nTests: 20 (SUCCESSES: 18, FAILURES: 2, EXCEPTIONS: 0)\nFailures: 2 (MEDIUM: 2, HIGH: 0, CRITICAL: 0)\n</code></pre>","title":"Type detection"},{"location":"docs/misconfiguration/scanning/#examples","text":"<p>See here</p>","title":"Examples"},{"location":"docs/misconfiguration/comparison/cfsec/","text":"<p>cfsec uses static analysis of your CloudFormation templates to spot potential security issues. Trivy uses cfsec internally to scan both JSON and YAML configuration files, but Trivy doesn't support some features provided by cfsec. This section describes the differences between Trivy and cfsec.</p>    Feature Trivy cfsec     Built-in Policies     Custom Policies     Policy Metadata1     Show Successes     Disable Policies     Show Issue Lines     View Statistics     Filtering by Severity     Supported Formats Dockerfile, JSON, YAML, Terraform, CloudFormation etc. CloudFormation JSON and YAML    <p>cfsec is designed for CloudFormation. People who use only want to scan their CloudFormation templates should use cfsec. People who want to scan a wide range of configuration files should use Trivy.</p>   <ol> <li> <p>To enrich the results such as ID, Title, Description, Severity, etc.\u00a0\u21a9</p> </li> </ol>","title":"vs cfsec"},{"location":"docs/misconfiguration/comparison/conftest/","text":"<p>Conftest is a really nice tool to help you write tests against structured configuration data. Misconfiguration detection in Trivy is heavily inspired by Conftest and provides similar features Conftest has. This section describes the differences between Trivy and Conftest.</p>    Feature Trivy Conftest     Support Rego Language     Built-in Policies     Custom Policies     Custom Data     Combine     Combine per Policy     Policy Input Selector1     Policy Metadata2  3   Filtering by Severity     Rule-based Exceptions     Namespace-based Exceptions     Sharing Policies     Show Successes     Flexible Exit Code     Rego Unit Tests 4    Go Testing     Verbose Trace     Supported Formats 6 formats5 14 formats6    <p>Trivy offers built-in policies and a variety of options, while Conftest only supports custom policies. In other words, Conftest is simpler and lighter.</p> <p>Conftest is a general testing tool for configuration files, and Trivy is more security-focused. People who need an out-of-the-box misconfiguration scanner should use Trivy. People who don't need built-in policies and write your policies should use Conftest.</p>   <ol> <li> <p>Pass only the types of configuration file as input, specified in selector\u00a0\u21a9</p> </li> <li> <p>To enrich the results such as ID, Title, Description, etc.\u00a0\u21a9</p> </li> <li> <p>Conftest supports structured errors in rules, but they are free format and not natively supported by Conftest.\u00a0\u21a9</p> </li> <li> <p>Trivy is not able to run <code>*_test.rego</code> like <code>conftest verify</code>.\u00a0\u21a9</p> </li> <li> <p>Dockerfile, HCL, HCL2, JSON, TOML, and YAML\u00a0\u21a9</p> </li> <li> <p>CUE, Dockerfile, EDN, HCL, HCL2, HOCON, Ignore files, INI, JSON, Jsonnet, TOML, VCL, XML, and YAML\u00a0\u21a9</p> </li> </ol>","title":"vs Conftest"},{"location":"docs/misconfiguration/comparison/tfsec/","text":"<p>tfsec uses static analysis of your Terraform templates to spot potential security issues. Trivy uses tfsec internally to scan Terraform HCL files, but Trivy doesn't support some features provided by tfsec. This section describes the differences between Trivy and tfsec.</p>    Feature Trivy tfsec     Built-in Policies     Custom Policies Rego Rego, JSON, and YAML   Policy Metadata1     Show Successes     Disable Policies     Show Issue Lines     Support .tfvars     View Statistics     Filtering by Severity     Supported Formats Dockerfile, JSON, YAML, Terraform, CloudFormation etc. Terraform    <p>tfsec is designed for Terraform. People who use only Terraform should use tfsec. People who want to scan a wide range of configuration files should use Trivy.</p>   <ol> <li> <p>To enrich the results such as ID, Title, Description, Severity, etc.\u00a0\u21a9</p> </li> </ol>","title":"vs tfsec"},{"location":"docs/misconfiguration/custom/","text":"","title":"Custom Policies"},{"location":"docs/misconfiguration/custom/#overview","text":"<p>You can write custom policies in Rego. Once you finish writing custom policies, you can pass the directory where those policies are stored with <code>--policy</code> option.</p> <pre><code>trivy conf --policy /path/to/custom_policies --namespaces user /path/to/config_dir\n</code></pre> <p>As for <code>--namespaces</code> option, the detail is described as below.</p>","title":"Overview"},{"location":"docs/misconfiguration/custom/#file-formats","text":"<p>If a file name matches the following file patterns, Trivy will parse the file and pass it as input to your Rego policy.</p>    File format File pattern     JSON <code>*.json</code>   YAML <code>*.yaml</code> and <code>*.yml</code>   Dockerfile <code>Dockerfile</code>, <code>Dockerfile.*</code>, and <code>*.Dockerfile</code>   Containerfile <code>Containerfile</code>, <code>Containerfile.*</code>, and <code>*.Containerfile</code>   Terraform <code>*.tf</code> and <code>*.tf.json</code>","title":"File formats"},{"location":"docs/misconfiguration/custom/#configuration-languages","text":"<p>In the above general file formats, Trivy automatically identifies the following types of configuration files:</p> <ul> <li>CloudFormation (JSON/YAML)</li> <li>Kubernetes (JSON/YAML)</li> <li>Helm (YAML)</li> <li>Terraform Plan (JSON)</li> </ul> <p>This is useful for filtering inputs, as described below.</p>","title":"Configuration languages"},{"location":"docs/misconfiguration/custom/#rego-format","text":"<p>A single package must contain only one policy.</p>  <p>Example</p> <pre><code>package user.kubernetes.ID001\n\nimport lib.result\n\n__rego_metadata__ := {\n    \"id\": \"ID001\",\n    \"title\": \"Deployment not allowed\",\n    \"severity\": \"LOW\",\n    \"description\": \"Deployments are not allowed because of some reasons.\",\n}\n\n__rego_input__ := {\n    \"selector\": [\n        {\"type\": \"kubernetes\"},\n    ],\n}\n\ndeny[res] {\n    input.kind == \"Deployment\"\n    msg := sprintf(\"Found deployment '%s' but deployments are not allowed\", [input.metadata.name])\n    res := result.new(msg, input)\n}\n</code></pre>  <p>In this example, ID001 \"Deployment not allowed\" is defined under <code>user.kubernetes.ID001</code>. If you add a new custom policy, it must be defined under a new package like <code>user.kubernetes.ID002</code>.</p>","title":"Rego format"},{"location":"docs/misconfiguration/custom/#policy-structure","text":"<code>package</code> (required)  <ul> <li>MUST follow the Rego's specification</li> <li>MUST be unique per policy</li> <li>SHOULD include policy id for uniqueness</li> <li>MAY include the group name such as <code>kubernetes</code> for clarity<ul> <li>Group name has no effect on policy evaluation</li> </ul> </li> </ul>  <code>import data.lib.result</code> (optional)  <ul> <li>MAY be defined if you would like to embellish your result(s) with line numbers and code highlighting</li> </ul>  <code>__rego_metadata__</code> (optional)  <ul> <li>SHOULD be defined for clarity since these values will be displayed in the scan results</li> </ul>  <code>__rego_input__</code> (optional)  <ul> <li>MAY be defined when you want to specify input format</li> </ul>  <code>deny</code> (required)  <ul> <li>SHOULD be <code>deny</code> or start with <code>deny_</code><ul> <li>Although <code>warn</code>, <code>warn_*</code>, <code>violation</code>, <code>violation_</code> also work for compatibility, <code>deny</code> is recommended as severity can be defined in <code>__rego_metadata__</code>.</li> </ul> </li> <li>SHOULD return ONE OF:<ul> <li>The result of a call to <code>result.new(msg, cause)</code>. The <code>msg</code> is a <code>string</code> describing the issue occurrence, and the <code>cause</code> is the property/object where the issue occurred. Providing this allows Trivy to ascertain line numbers and highlight code in the output. </li> <li>A <code>string</code> denoting the detected issue<ul> <li>Although <code>object</code> with <code>msg</code> field is accepted, other fields are dropped and <code>string</code> is recommended if <code>result.new()</code> is not utilised.</li> <li>e.g. <code>{\"msg\": \"deny message\", \"details\": \"something\"}</code></li> </ul> </li> </ul> </li> </ul>","title":"Policy structure"},{"location":"docs/misconfiguration/custom/#package","text":"<p>A package name must be unique per policy.</p>  <p>Example</p> <pre><code>package user.kubernetes.ID001\n</code></pre>  <p>By default, only <code>builtin.*</code> packages will be evaluated. If you define custom packages, you have to specify the package prefix via <code>--namespaces</code> option. </p> <pre><code>trivy conf --policy /path/to/custom_policies --namespaces user /path/to/config_dir\n</code></pre> <p>In this case, <code>user.*</code> will be evaluated. Any package prefixes such as <code>main</code> and <code>user</code> are allowed.</p>","title":"Package"},{"location":"docs/misconfiguration/custom/#metadata","text":"<p>Metadata helps enrich Trivy's scan results with useful information.</p>  <p>Example</p> <pre><code>__rego_metadata__ := {\n    \"id\": \"ID001\",\n    \"title\": \"Deployment not allowed\",\n    \"severity\": \"LOW\",\n    \"description\": \"Deployments are not allowed because of some reasons.\",\n    \"recommended_actions\": \"Remove Deployment\",\n    \"url\": \"https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-resource-requests-and-limits\",\n}\n</code></pre>  <p>All fields under <code>__rego_metadata__</code> are optional.</p>    Field name Allowed values Default value In table In JSON     id Any characters N/A     title Any characters N/A     severity <code>LOW</code>, <code>MEDIUM</code>, <code>HIGH</code>, <code>CRITICAL</code> UNKNOWN     description Any characters      recommended_actions Any characters      url Any characters       <p>Some fields are displayed in scan results.</p> <pre><code>k.yaml (kubernetes)\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\nTests: 32 (SUCCESSES: 31, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (UNKNOWN: 0, LOW: 1, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n\nLOW: Found deployment 'my-deployment' but deployments are not allowed\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nDeployments are not allowed because of some reasons.\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n k.yaml:1-2\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 \u250c apiVersion: v1\n   2 \u2514 kind: Deployment\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>","title":"Metadata"},{"location":"docs/misconfiguration/custom/#input","text":"<p>You can specify input format via <code>__rego_input__</code>. All fields under <code>__rego_input</code> are optional.</p>  <p>Example</p> <pre><code>__rego_input__ := {\n    \"combine\": false,\n    \"selector\": [\n        {\"type\": \"kubernetes\"},\n    ],\n}\n</code></pre>   <code>combine</code> (boolean) The details are here. <code>selector</code> (array)  <p>This option filters the input by file format or configuration language.  In the above example, Trivy passes only Kubernetes files to this policy. Even if a Dockerfile exists in the specified directory, it will not be passed to the policy as input.</p> <p>When configuration languages such as Kubernetes are not identified, file formats such as JSON will be used as <code>type</code>. When a configuration language is identified, it will overwrite <code>type</code>.</p>  <p>Example</p> <p><code>pod.yaml</code> including Kubernetes Pod will be handled as <code>kubernetes</code>, not <code>yaml</code>. <code>type</code> is overwritten by <code>kubernetes</code> from <code>yaml</code>.</p>  <p><code>type</code> accepts <code>kubernetes</code>, <code>dockerfile</code>, <code>cloudformation</code>, <code>terraform</code>, <code>terraformplan</code>, <code>json</code>, or <code>yaml</code>.</p>","title":"Input"},{"location":"docs/misconfiguration/custom/combine/","text":"","title":"Combined input"},{"location":"docs/misconfiguration/custom/combine/#overview","text":"<p>Trivy usually scans each configuration file individually.  Sometimes it might be useful to compare values from different configuration files simultaneously.</p> <p>When <code>combine</code> is set to true, all config files under the specified directory are combined into one input data structure.</p>  <p>Example</p> <pre><code>__rego_input__ := {\n    \"combine\": false,\n}\n</code></pre>  <p>In \"combine\" mode, the <code>input</code> document becomes an array, where each element is an object with two fields:</p> <ul> <li><code>\"path\": \"path/to/file\"</code>: the relative file path of the respective file</li> <li><code>\"contents\": ...</code>: the parsed content of the respective file</li> </ul> <p>Now you can ensure that duplicate values match across the entirety of your configuration files.</p>","title":"Overview"},{"location":"docs/misconfiguration/custom/combine/#return-value","text":"<p>In \"combine\" mode, the <code>deny</code> entrypoint must return an object with two keys</p>  <code>filepath</code> (required) the relative file path of the file being evaluated <code>msg</code> (required) the message describing an issue   <p>Example</p> <pre><code>deny[res] {\n    resource := input[i].contents\n    ... some logic ...\n\n    res := {\n        \"filepath\": input[i].path,\n        \"msg\": \"something bad\",\n    }\n}\n</code></pre>","title":"Return value"},{"location":"docs/misconfiguration/custom/data/","text":"<p>Custom policies may require additional data in order to determine an answer.</p> <p>For example, an allowed list of resources that can be created.  Instead of hardcoding this information inside of your policy, Trivy allows passing paths to data files with the <code>--data</code> flag.</p> <p>Given the following yaml file:</p> <pre><code>$ cd examples/misconf/custom-data\n$ cat data/ports.yaml                                                                                                                                                                      [~/src/github.com/aquasecurity/trivy/examples/misconf/custom-data]\nservices:\n  ports:\n    - \"20\"\n    - \"20/tcp\"\n    - \"20/udp\"\n    - \"23\"\n    - \"23/tcp\"\n</code></pre> <p>This can be imported into your policy:</p> <pre><code>import data.services\n\nports := services.ports\n</code></pre> <p>Then, you need to pass data paths through <code>--data</code> option. Trivy recursively searches the specified paths for JSON (<code>*.json</code>) and YAML (<code>*.yaml</code>) files.</p> <pre><code>$ trivy conf --policy ./policy --data data --namespaces user ./configs\n</code></pre>","title":"Custom Data"},{"location":"docs/misconfiguration/custom/debug/","text":"<p>When working on more complex queries (or when learning Rego), it's useful to see exactly how the policy is applied. For this purpose you can use the <code>--trace</code> flag. This will output a large trace from Open Policy Agent like the following:</p>  <p>Tip</p> <p>Only failed policies show traces. If you want to debug a passed policy, you need to make it fail on purpose.</p>  <pre><code>$ trivy conf --trace configs/\n2022-05-16T13:47:58.853+0100    INFO    Detected config files: 1\n\nDockerfile (dockerfile)\n=======================\nTests: 23 (SUCCESSES: 21, FAILURES: 2, EXCEPTIONS: 0)\nFailures: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 1, CRITICAL: 0)\n\nMEDIUM: Specify a tag in the 'FROM' statement for image 'alpine'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nWhen using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated.\n\nSee https://avd.aquasec.com/misconfig/ds001\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n Dockerfile:1\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 [ FROM alpine:latest\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\nHIGH: Last USER command in Dockerfile should not be 'root'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n\nSee https://avd.aquasec.com/misconfig/ds002\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n Dockerfile:3\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   3 [ USER root\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\n\nID: DS001\nFile: Dockerfile\nNamespace: builtin.dockerfile.DS001\nQuery: data.builtin.dockerfile.DS001.deny\nMessage: Specify a tag in the 'FROM' statement for image 'alpine'\nTRACE  Enter data.builtin.dockerfile.DS001.deny = _\nTRACE  | Eval data.builtin.dockerfile.DS001.deny = _\nTRACE  | Index data.builtin.dockerfile.DS001.deny (matched 1 rule)\nTRACE  | Enter data.builtin.dockerfile.DS001.deny\nTRACE  | | Eval output = data.builtin.dockerfile.DS001.fail_latest[_]\nTRACE  | | Index data.builtin.dockerfile.DS001.fail_latest (matched 1 rule)\nTRACE  | | Enter data.builtin.dockerfile.DS001.fail_latest\nTRACE  | | | Eval output = data.builtin.dockerfile.DS001.image_tags[_]\nTRACE  | | | Index data.builtin.dockerfile.DS001.image_tags (matched 2 rules)\nTRACE  | | | Enter data.builtin.dockerfile.DS001.image_tags\nTRACE  | | | | Eval from = data.lib.docker.from[_]\nTRACE  | | | | Index data.lib.docker.from (matched 1 rule)\nTRACE  | | | | Enter data.lib.docker.from\nTRACE  | | | | | Eval instruction = input.stages[_][_]\nTRACE  | | | | | Eval instruction.Cmd = \"from\"\nTRACE  | | | | | Exit data.lib.docker.from\nTRACE  | | | | Redo data.lib.docker.from\nTRACE  | | | | | Redo instruction.Cmd = \"from\"\nTRACE  | | | | | Redo instruction = input.stages[_][_]\nTRACE  | | | | | Eval instruction.Cmd = \"from\"\nTRACE  | | | | | Fail instruction.Cmd = \"from\"\nTRACE  | | | | | Redo instruction = input.stages[_][_]\nTRACE  | | | | | Eval instruction.Cmd = \"from\"\nTRACE  | | | | | Fail instruction.Cmd = \"from\"\nTRACE  | | | | | Redo instruction = input.stages[_][_]\nTRACE  | | | | Eval name = from.Value[0]\nTRACE  | | | | Eval not startswith(name, \"$\")\nTRACE  | | | | Enter startswith(name, \"$\")\nTRACE  | | | | | Eval startswith(name, \"$\")\nTRACE  | | | | | Fail startswith(name, \"$\")\nTRACE  | | | | Eval data.builtin.dockerfile.DS001.parse_tag(name, __local505__)\nTRACE  | | | | Index data.builtin.dockerfile.DS001.parse_tag (matched 2 rules)\nTRACE  | | | | Enter data.builtin.dockerfile.DS001.parse_tag\nTRACE  | | | | | Eval split(name, \":\", __local504__)\nTRACE  | | | | | Eval [img, tag] = __local504__\nTRACE  | | | | | Exit data.builtin.dockerfile.DS001.parse_tag\nTRACE  | | | | Eval [img, tag] = __local505__\nTRACE  | | | | Eval output = {\"cmd\": from, \"img\": img, \"tag\": tag}\nTRACE  | | | | Exit data.builtin.dockerfile.DS001.image_tags\nTRACE  | | | Redo data.builtin.dockerfile.DS001.image_tags\nTRACE  | | | | Redo output = {\"cmd\": from, \"img\": img, \"tag\": tag}\nTRACE  | | | | Redo [img, tag] = __local505__\nTRACE  | | | | Redo data.builtin.dockerfile.DS001.parse_tag(name, __local505__)\nTRACE  | | | | Redo data.builtin.dockerfile.DS001.parse_tag\nTRACE  | | | | | Redo [img, tag] = __local504__\nTRACE  | | | | | Redo split(name, \":\", __local504__)\nTRACE  | | | | Enter data.builtin.dockerfile.DS001.parse_tag\nTRACE  | | | | | Eval tag = \"latest\"\nTRACE  | | | | | Eval not contains(img, \":\")\nTRACE  | | | | | Enter contains(img, \":\")\nTRACE  | | | | | | Eval contains(img, \":\")\nTRACE  | | | | | | Exit contains(img, \":\")\nTRACE  | | | | | Redo contains(img, \":\")\nTRACE  | | | | | | Redo contains(img, \":\")\nTRACE  | | | | | Fail not contains(img, \":\")\nTRACE  | | | | | Redo tag = \"latest\"\nTRACE  | | | | Redo name = from.Value[0]\nTRACE  | | | | Redo from = data.lib.docker.from[_]\nTRACE  | | | Enter data.builtin.dockerfile.DS001.image_tags\nTRACE  | | | | Eval from = data.lib.docker.from[i]\nTRACE  | | | | Index data.lib.docker.from (matched 1 rule)\nTRACE  | | | | Eval name = from.Value[0]\nTRACE  | | | | Eval cmd_obj = input.stages[j][k]\nTRACE  | | | | Eval possibilities = {\"arg\", \"env\"}\nTRACE  | | | | Eval cmd_obj.Cmd = possibilities[l]\nTRACE  | | | | Fail cmd_obj.Cmd = possibilities[l]\nTRACE  | | | | Redo possibilities = {\"arg\", \"env\"}\nTRACE  | | | | Redo cmd_obj = input.stages[j][k]\nTRACE  | | | | Eval possibilities = {\"arg\", \"env\"}\nTRACE  | | | | Eval cmd_obj.Cmd = possibilities[l]\nTRACE  | | | | Fail cmd_obj.Cmd = possibilities[l]\nTRACE  | | | | Redo possibilities = {\"arg\", \"env\"}\nTRACE  | | | | Redo cmd_obj = input.stages[j][k]\nTRACE  | | | | Eval possibilities = {\"arg\", \"env\"}\nTRACE  | | | | Eval cmd_obj.Cmd = possibilities[l]\nTRACE  | | | | Fail cmd_obj.Cmd = possibilities[l]\nTRACE  | | | | Redo possibilities = {\"arg\", \"env\"}\nTRACE  | | | | Redo cmd_obj = input.stages[j][k]\nTRACE  | | | | Redo name = from.Value[0]\nTRACE  | | | | Redo from = data.lib.docker.from[i]\nTRACE  | | | Eval __local752__ = output.img\nTRACE  | | | Eval neq(__local752__, \"scratch\")\nTRACE  | | | Eval __local753__ = output.img\nTRACE  | | | Eval not data.builtin.dockerfile.DS001.is_alias(__local753__)\nTRACE  | | | Enter data.builtin.dockerfile.DS001.is_alias(__local753__)\nTRACE  | | | | Eval data.builtin.dockerfile.DS001.is_alias(__local753__)\nTRACE  | | | | Index data.builtin.dockerfile.DS001.is_alias (matched 1 rule, early exit)\nTRACE  | | | | Enter data.builtin.dockerfile.DS001.is_alias\nTRACE  | | | | | Eval img = data.builtin.dockerfile.DS001.get_aliases[_]\nTRACE  | | | | | Index data.builtin.dockerfile.DS001.get_aliases (matched 1 rule)\nTRACE  | | | | | Enter data.builtin.dockerfile.DS001.get_aliases\nTRACE  | | | | | | Eval from_cmd = data.lib.docker.from[_]\nTRACE  | | | | | | Index data.lib.docker.from (matched 1 rule)\nTRACE  | | | | | | Eval __local749__ = from_cmd.Value\nTRACE  | | | | | | Eval data.builtin.dockerfile.DS001.get_alias(__local749__, __local503__)\nTRACE  | | | | | | Index data.builtin.dockerfile.DS001.get_alias (matched 1 rule)\nTRACE  | | | | | | Enter data.builtin.dockerfile.DS001.get_alias\nTRACE  | | | | | | | Eval __local748__ = values[i]\nTRACE  | | | | | | | Eval lower(__local748__, __local501__)\nTRACE  | | | | | | | Eval \"as\" = __local501__\nTRACE  | | | | | | | Fail \"as\" = __local501__\nTRACE  | | | | | | | Redo lower(__local748__, __local501__)\nTRACE  | | | | | | | Redo __local748__ = values[i]\nTRACE  | | | | | | Fail data.builtin.dockerfile.DS001.get_alias(__local749__, __local503__)\nTRACE  | | | | | | Redo __local749__ = from_cmd.Value\nTRACE  | | | | | | Redo from_cmd = data.lib.docker.from[_]\nTRACE  | | | | | Fail img = data.builtin.dockerfile.DS001.get_aliases[_]\nTRACE  | | | | Fail data.builtin.dockerfile.DS001.is_alias(__local753__)\nTRACE  | | | Eval output.tag = \"latest\"\nTRACE  | | | Exit data.builtin.dockerfile.DS001.fail_latest\nTRACE  | | Redo data.builtin.dockerfile.DS001.fail_latest\nTRACE  | | | Redo output.tag = \"latest\"\nTRACE  | | | Redo __local753__ = output.img\nTRACE  | | | Redo neq(__local752__, \"scratch\")\nTRACE  | | | Redo __local752__ = output.img\nTRACE  | | | Redo output = data.builtin.dockerfile.DS001.image_tags[_]\nTRACE  | | Eval __local754__ = output.img\nTRACE  | | Eval sprintf(\"Specify a tag in the 'FROM' statement for image '%s'\", [__local754__], __local509__)\nTRACE  | | Eval msg = __local509__\nTRACE  | | Eval __local755__ = output.cmd\nTRACE  | | Eval data.lib.docker.result(msg, __local755__, __local510__)\nTRACE  | | Index data.lib.docker.result (matched 1 rule)\nTRACE  | | Enter data.lib.docker.result\nTRACE  | | | Eval object.get(cmd, \"EndLine\", 0, __local470__)\nTRACE  | | | Eval object.get(cmd, \"Path\", \"\", __local471__)\nTRACE  | | | Eval object.get(cmd, \"StartLine\", 0, __local472__)\nTRACE  | | | Eval result = {\"endline\": __local470__, \"filepath\": __local471__, \"msg\": msg, \"startline\": __local472__}\nTRACE  | | | Exit data.lib.docker.result\nTRACE  | | Eval res = __local510__\nTRACE  | | Exit data.builtin.dockerfile.DS001.deny\nTRACE  | Redo data.builtin.dockerfile.DS001.deny\nTRACE  | | Redo res = __local510__\nTRACE  | | Redo data.lib.docker.result(msg, __local755__, __local510__)\nTRACE  | | Redo data.lib.docker.result\nTRACE  | | | Redo result = {\"endline\": __local470__, \"filepath\": __local471__, \"msg\": msg, \"startline\": __local472__}\nTRACE  | | | Redo object.get(cmd, \"StartLine\", 0, __local472__)\nTRACE  | | | Redo object.get(cmd, \"Path\", \"\", __local471__)\nTRACE  | | | Redo object.get(cmd, \"EndLine\", 0, __local470__)\nTRACE  | | Redo __local755__ = output.cmd\nTRACE  | | Redo msg = __local509__\nTRACE  | | Redo sprintf(\"Specify a tag in the 'FROM' statement for image '%s'\", [__local754__], __local509__)\nTRACE  | | Redo __local754__ = output.img\nTRACE  | | Redo output = data.builtin.dockerfile.DS001.fail_latest[_]\nTRACE  | Exit data.builtin.dockerfile.DS001.deny = _\nTRACE  Redo data.builtin.dockerfile.DS001.deny = _\nTRACE  | Redo data.builtin.dockerfile.DS001.deny = _\nTRACE\n\n\nID: DS002\nFile: Dockerfile\nNamespace: builtin.dockerfile.DS002\nQuery: data.builtin.dockerfile.DS002.deny\nMessage: Last USER command in Dockerfile should not be 'root'\nTRACE  Enter data.builtin.dockerfile.DS002.deny = _\nTRACE  | Eval data.builtin.dockerfile.DS002.deny = _\nTRACE  | Index data.builtin.dockerfile.DS002.deny (matched 2 rules)\nTRACE  | Enter data.builtin.dockerfile.DS002.deny\nTRACE  | | Eval data.builtin.dockerfile.DS002.fail_user_count\nTRACE  | | Index data.builtin.dockerfile.DS002.fail_user_count (matched 1 rule, early exit)\nTRACE  | | Enter data.builtin.dockerfile.DS002.fail_user_count\nTRACE  | | | Eval __local771__ = data.builtin.dockerfile.DS002.get_user\nTRACE  | | | Index data.builtin.dockerfile.DS002.get_user (matched 1 rule)\nTRACE  | | | Enter data.builtin.dockerfile.DS002.get_user\nTRACE  | | | | Eval user = data.lib.docker.user[_]\nTRACE  | | | | Index data.lib.docker.user (matched 1 rule)\nTRACE  | | | | Enter data.lib.docker.user\nTRACE  | | | | | Eval instruction = input.stages[_][_]\nTRACE  | | | | | Eval instruction.Cmd = \"user\"\nTRACE  | | | | | Fail instruction.Cmd = \"user\"\nTRACE  | | | | | Redo instruction = input.stages[_][_]\nTRACE  | | | | | Eval instruction.Cmd = \"user\"\nTRACE  | | | | | Exit data.lib.docker.user\nTRACE  | | | | Redo data.lib.docker.user\nTRACE  | | | | | Redo instruction.Cmd = \"user\"\nTRACE  | | | | | Redo instruction = input.stages[_][_]\nTRACE  | | | | | Eval instruction.Cmd = \"user\"\nTRACE  | | | | | Fail instruction.Cmd = \"user\"\nTRACE  | | | | | Redo instruction = input.stages[_][_]\nTRACE  | | | | Eval username = user.Value[_]\nTRACE  | | | | Exit data.builtin.dockerfile.DS002.get_user\nTRACE  | | | Redo data.builtin.dockerfile.DS002.get_user\nTRACE  | | | | Redo username = user.Value[_]\nTRACE  | | | | Redo user = data.lib.docker.user[_]\nTRACE  | | | Eval count(__local771__, __local536__)\nTRACE  | | | Eval lt(__local536__, 1)\nTRACE  | | | Fail lt(__local536__, 1)\nTRACE  | | | Redo count(__local771__, __local536__)\nTRACE  | | | Redo __local771__ = data.builtin.dockerfile.DS002.get_user\nTRACE  | | Fail data.builtin.dockerfile.DS002.fail_user_count\nTRACE  | Enter data.builtin.dockerfile.DS002.deny\nTRACE  | | Eval cmd = data.builtin.dockerfile.DS002.fail_last_user_root[_]\nTRACE  | | Index data.builtin.dockerfile.DS002.fail_last_user_root (matched 1 rule)\nTRACE  | | Enter data.builtin.dockerfile.DS002.fail_last_user_root\nTRACE  | | | Eval stage_users = data.lib.docker.stage_user[_]\nTRACE  | | | Index data.lib.docker.stage_user (matched 1 rule)\nTRACE  | | | Enter data.lib.docker.stage_user\nTRACE  | | | | Eval stage = input.stages[stage_name]\nTRACE  | | | | Eval users = [cmd | cmd = stage[_]; cmd.Cmd = \"user\"]\nTRACE  | | | | Enter cmd = stage[_]; cmd.Cmd = \"user\"\nTRACE  | | | | | Eval cmd = stage[_]\nTRACE  | | | | | Eval cmd.Cmd = \"user\"\nTRACE  | | | | | Fail cmd.Cmd = \"user\"\nTRACE  | | | | | Redo cmd = stage[_]\nTRACE  | | | | | Eval cmd.Cmd = \"user\"\nTRACE  | | | | | Exit cmd = stage[_]; cmd.Cmd = \"user\"\nTRACE  | | | | Redo cmd = stage[_]; cmd.Cmd = \"user\"\nTRACE  | | | | | Redo cmd.Cmd = \"user\"\nTRACE  | | | | | Redo cmd = stage[_]\nTRACE  | | | | | Eval cmd.Cmd = \"user\"\nTRACE  | | | | | Fail cmd.Cmd = \"user\"\nTRACE  | | | | | Redo cmd = stage[_]\nTRACE  | | | | Exit data.lib.docker.stage_user\nTRACE  | | | Redo data.lib.docker.stage_user\nTRACE  | | | | Redo users = [cmd | cmd = stage[_]; cmd.Cmd = \"user\"]\nTRACE  | | | | Redo stage = input.stages[stage_name]\nTRACE  | | | Eval count(stage_users, __local537__)\nTRACE  | | | Eval len = __local537__\nTRACE  | | | Eval minus(len, 1, __local538__)\nTRACE  | | | Eval last = stage_users[__local538__]\nTRACE  | | | Eval user = last.Value[0]\nTRACE  | | | Eval user = \"root\"\nTRACE  | | | Exit data.builtin.dockerfile.DS002.fail_last_user_root\nTRACE  | | Redo data.builtin.dockerfile.DS002.fail_last_user_root\nTRACE  | | | Redo user = \"root\"\nTRACE  | | | Redo user = last.Value[0]\nTRACE  | | | Redo last = stage_users[__local538__]\nTRACE  | | | Redo minus(len, 1, __local538__)\nTRACE  | | | Redo len = __local537__\nTRACE  | | | Redo count(stage_users, __local537__)\nTRACE  | | | Redo stage_users = data.lib.docker.stage_user[_]\nTRACE  | | Eval msg = \"Last USER command in Dockerfile should not be 'root'\"\nTRACE  | | Eval data.lib.docker.result(msg, cmd, __local540__)\nTRACE  | | Index data.lib.docker.result (matched 1 rule)\nTRACE  | | Enter data.lib.docker.result\nTRACE  | | | Eval object.get(cmd, \"EndLine\", 0, __local470__)\nTRACE  | | | Eval object.get(cmd, \"Path\", \"\", __local471__)\nTRACE  | | | Eval object.get(cmd, \"StartLine\", 0, __local472__)\nTRACE  | | | Eval result = {\"endline\": __local470__, \"filepath\": __local471__, \"msg\": msg, \"startline\": __local472__}\nTRACE  | | | Exit data.lib.docker.result\nTRACE  | | Eval res = __local540__\nTRACE  | | Exit data.builtin.dockerfile.DS002.deny\nTRACE  | Redo data.builtin.dockerfile.DS002.deny\nTRACE  | | Redo res = __local540__\nTRACE  | | Redo data.lib.docker.result(msg, cmd, __local540__)\nTRACE  | | Redo data.lib.docker.result\nTRACE  | | | Redo result = {\"endline\": __local470__, \"filepath\": __local471__, \"msg\": msg, \"startline\": __local472__}\nTRACE  | | | Redo object.get(cmd, \"StartLine\", 0, __local472__)\nTRACE  | | | Redo object.get(cmd, \"Path\", \"\", __local471__)\nTRACE  | | | Redo object.get(cmd, \"EndLine\", 0, __local470__)\nTRACE  | | Redo msg = \"Last USER command in Dockerfile should not be 'root'\"\nTRACE  | | Redo cmd = data.builtin.dockerfile.DS002.fail_last_user_root[_]\nTRACE  | Exit data.builtin.dockerfile.DS002.deny = _\nTRACE  Redo data.builtin.dockerfile.DS002.deny = _\nTRACE  | Redo data.builtin.dockerfile.DS002.deny = _\nTRACE\n</code></pre>","title":"Debugging policies"},{"location":"docs/misconfiguration/custom/examples/","text":"","title":"Examples"},{"location":"docs/misconfiguration/custom/examples/#custom-policy","text":"","title":"Custom Policy"},{"location":"docs/misconfiguration/custom/examples/#kubernetes","text":"<p>See here.</p> <p>The custom policy is defined in <code>user.kubernetes.ID001</code> package. You need to pass the package prefix you want to evaluate through <code>--namespaces</code> option. In this case, the package prefix should be <code>user</code>, <code>user.kubernetes</code>, or <code>user.kubernetes.ID001</code>.</p>","title":"Kubernetes"},{"location":"docs/misconfiguration/custom/examples/#dockerfile","text":"<p>See here.</p> <p>The input will be a dictionary of stages.</p>","title":"Dockerfile"},{"location":"docs/misconfiguration/custom/examples/#single-stage","text":"Example <p>Dockerfile <pre><code>FROM foo\nCOPY . /\nRUN echo hello\n</code></pre></p> <p>Rego Input <pre><code>{\n    \"stages\": {\n        \"foo\": [\n            {\n                \"Cmd\": \"from\",\n                \"EndLine\": 1,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"FROM foo\",\n                \"Stage\": 0,\n                \"StartLine\": 1,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"foo\"\n                ]\n            },\n            {\n                \"Cmd\": \"copy\",\n                \"EndLine\": 2,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"COPY . /\",\n                \"Stage\": 0,\n                \"StartLine\": 2,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \".\",\n                    \"/\"\n                ]\n            },\n            {\n                \"Cmd\": \"run\",\n                \"EndLine\": 3,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"RUN echo hello\",\n                \"Stage\": 0,\n                \"StartLine\": 3,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"echo hello\"\n                ]\n            }\n        ]\n    }\n}\n</code></pre></p>","title":"Single Stage"},{"location":"docs/misconfiguration/custom/examples/#multi-stage","text":"Example <p>Dockerfile <pre><code>FROM golang:1.16 AS builder\nWORKDIR /go/src/github.com/alexellis/href-counter/\nRUN go get -d -v golang.org/x/net/html\nCOPY app.go .\nRUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\n\nFROM alpine:latest\nRUN apk --no-cache add ca-certificates \\\n&amp;&amp; apk add --no-cache bash\nWORKDIR /root/\nCOPY --from=builder /go/src/github.com/alexellis/href-counter/app .\nCMD [\"./app\"]\n</code></pre></p> <p>Rego Input <pre><code>{\n    \"stages\": {\n        \"alpine:latest\": [\n            {\n                \"Cmd\": \"from\",\n                \"EndLine\": 7,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"FROM alpine:latest\",\n                \"Stage\": 1,\n                \"StartLine\": 7,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"alpine:latest\"\n                ]\n            },\n            {\n                \"Cmd\": \"run\",\n                \"EndLine\": 9,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"RUN apk --no-cache add ca-certificates     \\u0026\\u0026 apk add --no-cache bash\",\n                \"Stage\": 1,\n                \"StartLine\": 8,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"apk --no-cache add ca-certificates     \\u0026\\u0026 apk add --no-cache bash\"\n                ]\n            },\n            {\n                \"Cmd\": \"workdir\",\n                \"EndLine\": 10,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"WORKDIR /root/\",\n                \"Stage\": 1,\n                \"StartLine\": 10,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"/root/\"\n                ]\n            },\n            {\n                \"Cmd\": \"copy\",\n                \"EndLine\": 11,\n                \"Flags\": [\n                    \"--from=builder\"\n                ],\n                \"JSON\": false,\n                \"Original\": \"COPY --from=builder /go/src/github.com/alexellis/href-counter/app .\",\n                \"Stage\": 1,\n                \"StartLine\": 11,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"/go/src/github.com/alexellis/href-counter/app\",\n                    \".\"\n                ]\n            },\n            {\n                \"Cmd\": \"cmd\",\n                \"EndLine\": 12,\n                \"Flags\": [],\n                \"JSON\": true,\n                \"Original\": \"CMD [\\\"./app\\\"]\",\n                \"Stage\": 1,\n                \"StartLine\": 12,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"./app\"\n                ]\n            }\n        ],\n        \"golang:1.16 AS builder\": [\n            {\n                \"Cmd\": \"from\",\n                \"EndLine\": 1,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"FROM golang:1.16 AS builder\",\n                \"Stage\": 0,\n                \"StartLine\": 1,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"golang:1.16\",\n                    \"AS\",\n                    \"builder\"\n                ]\n            },\n            {\n                \"Cmd\": \"workdir\",\n                \"EndLine\": 2,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"WORKDIR /go/src/github.com/alexellis/href-counter/\",\n                \"Stage\": 0,\n                \"StartLine\": 2,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"/go/src/github.com/alexellis/href-counter/\"\n                ]\n                },\n            {\n                \"Cmd\": \"run\",\n                \"EndLine\": 3,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"RUN go get -d -v golang.org/x/net/html\",\n                \"Stage\": 0,\n                \"StartLine\": 3,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"go get -d -v golang.org/x/net/html\"\n                ]\n            },\n            {\n                \"Cmd\": \"copy\",\n                \"EndLine\": 4,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"COPY app.go .\",\n                \"Stage\": 0,\n                \"StartLine\": 4,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"app.go\",\n                    \".\"\n                ]\n            },\n            {\n                \"Cmd\": \"run\",\n                \"EndLine\": 5,\n                \"Flags\": [],\n                \"JSON\": false,\n                \"Original\": \"RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\",\n                \"Stage\": 0,\n                \"StartLine\": 5,\n                \"SubCmd\": \"\",\n                \"Value\": [\n                    \"CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .\"\n                ]\n            }\n        ]\n    }\n}\n</code></pre></p>","title":"Multi Stage"},{"location":"docs/misconfiguration/custom/examples/#docker-compose","text":"<p>See here.</p> <p>Docker Compose uses YAML format for configurations. You can apply your Rego policies to <code>docker-compose.yml</code>.</p>","title":"Docker Compose"},{"location":"docs/misconfiguration/custom/examples/#hcl","text":"<p>See here.</p> <p>Trivy parses HCL files and converts into structured data.</p>  <p>Warning</p> <p>Terraform HCL files are not supported yet.</p>","title":"HCL"},{"location":"docs/misconfiguration/custom/examples/#terraform-plan","text":"<p>See here.</p> <p>Use the command terraform show to convert the Terraform plan into JSON so that OPA can read the plan.</p> <pre><code>$ terraform init\n$ terraform plan --out tfplan.binary\n$ terraform show -json tfplan.binary &gt; tfplan.json\n</code></pre> <p>For more details, see also OPA document.</p>","title":"Terraform Plan"},{"location":"docs/misconfiguration/custom/examples/#serverless-framework","text":"<p>See here.</p> <p>Server Framework uses YAML format for configurations. You can apply your Rego policies to <code>serverless.yaml</code>.</p>","title":"Serverless Framework"},{"location":"docs/misconfiguration/custom/examples/#custom-data","text":"<p>See here.</p>","title":"Custom Data"},{"location":"docs/misconfiguration/custom/examples/#combined-input","text":"<p>See here.</p>","title":"Combined Input"},{"location":"docs/misconfiguration/custom/examples/#go-testing","text":"<p>See here.</p>","title":"Go Testing"},{"location":"docs/misconfiguration/custom/testing/","text":"<p>It is highly recommended to write tests for your custom policies.</p>","title":"Testing"},{"location":"docs/misconfiguration/custom/testing/#rego-testing","text":"<p>To help you verify the correctness of your custom policies, OPA gives you a framework that you can use to write tests for your policies.  By writing tests for your custom policies you can speed up the development process of new rules and reduce the amount of time it takes to modify rules as requirements evolve.</p> <p>For more details, see Policy Testing.</p>  <p>Example</p> <pre><code>package user.dockerfile.ID002\n\ntest_add_denied {\n    r := deny with input as {\"stages\": {\"alpine:3.13\": [\n        {\"Cmd\": \"add\", \"Value\": [\"/target/resources.tar.gz\", \"resources.jar\"]},\n        {\"Cmd\": \"add\", \"Value\": [\"/target/app.jar\", \"app.jar\"]},\n    ]}}\n\n    count(r) == 1\n    r[_] == \"Consider using 'COPY /target/app.jar app.jar' command instead of 'ADD /target/app.jar app.jar'\"\n}\n</code></pre>  <p>To write tests for custom policies, you can refer to existing tests under defsec.</p>","title":"Rego testing"},{"location":"docs/misconfiguration/custom/testing/#go-testing","text":"<p>Fanal which is a core library of Trivy can be imported as a Go library. You can scan config files in Go and test your custom policies using Go's testing methods, such as table-driven tests. This allows you to use the actual configuration file as input, making it easy to prepare test data and ensure that your custom policies work in practice.</p> <p>In particular, Dockerfile and HCL need to be converted to structural data as input, which may be different from the expected input format.</p>  <p>Tip</p> <p>We recommend writing OPA and Go tests both since they have different roles, like unit tests and integration tests.</p>  <p>The following example stores allowed and denied configuration files in a directory. <code>Successes</code> contains the result of successes, and <code>Failures</code> contains the result of failures.</p> <pre><code>{\n    name:  \"disallowed ports\",\n    input: \"configs/\",\n    fields: fields{\n        policyPaths: []string{\"policy\"},\n        dataPaths:   []string{\"data\"},\n        namespaces:  []string{\"user\"},\n    },\n    want: []types.Misconfiguration{\n        {\n            FileType: types.Dockerfile,\n            FilePath: \"Dockerfile.allowed\",\n            Successes: types.MisconfResults{\n                {\n                    Namespace: \"user.dockerfile.ID002\",\n                    PolicyMetadata: types.PolicyMetadata{\n                        ID:          \"ID002\",\n                        Type:        \"Docker Custom Check\",\n                        Title:       \"Disallowed ports exposed\",\n                        Severity:    \"HIGH\",\n                    },\n                },\n            },\n        },\n        {\n            FileType: types.Dockerfile,\n            FilePath: \"Dockerfile.denied\",\n            Failures: types.MisconfResults{\n                {\n                    Namespace: \"user.dockerfile.ID002\",\n                    Message:   \"Port 23 should not be exposed\",\n                    PolicyMetadata: types.PolicyMetadata{\n                        ID:          \"ID002\",\n                        Type:        \"Docker Custom Check\",\n                        Title:       \"Disallowed ports exposed\",\n                        Severity:    \"HIGH\",\n                    },\n                },\n            },\n        },\n    },\n},\n</code></pre> <p><code>Dockerfile.allowed</code> has one successful result in <code>Successes</code>, while <code>Dockerfile.denied</code> has one failure result in <code>Failures</code>.</p>","title":"Go testing"},{"location":"docs/misconfiguration/options/filter/","text":"","title":"Filter Misconfigurations"},{"location":"docs/misconfiguration/options/filter/#by-severity","text":"<p>Use <code>--severity</code> option.</p> <pre><code>trivy conf --severity HIGH,CRITICAL examples/misconf/mixed\n</code></pre>  Result <pre><code>2022-05-16T13:50:42.718+0100    INFO    Detected config files: 3\n\nDockerfile (dockerfile)\n=======================\nTests: 17 (SUCCESSES: 16, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (HIGH: 1, CRITICAL: 0)\n\nHIGH: Last USER command in Dockerfile should not be 'root'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nRunning containers with 'root' user can lead to a container escape situation. It is a best practice to run containers as non-root users, which can be done by adding a 'USER' statement to the Dockerfile.\n\nSee https://avd.aquasec.com/misconfig/ds002\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n Dockerfile:3\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   3 [ USER root\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n\n\n\ndeployment.yaml (kubernetes)\n============================\nTests: 8 (SUCCESSES: 8, FAILURES: 0, EXCEPTIONS: 0)\nFailures: 0 (HIGH: 0, CRITICAL: 0)\n\n\nmain.tf (terraform)\n===================\nTests: 1 (SUCCESSES: 0, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (HIGH: 0, CRITICAL: 1)\n\nCRITICAL: Classic resources should not be used.\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nAWS Classic resources run in a shared environment with infrastructure owned by other AWS customers. You should run\nresources in a VPC instead.\n\nSee https://avd.aquasec.com/misconfig/avd-aws-0081\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n main.tf:2-4\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   2 \u250c resource \"aws_db_security_group\" \"sg\" {\n   3 \u2502\n   4 \u2514 }\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre>","title":"By Severity"},{"location":"docs/misconfiguration/options/others/","text":"<p>Hint</p> <p>See also Others in Vulnerability section.</p>","title":"Others"},{"location":"docs/misconfiguration/options/others/#file-patterns","text":"<p>When a directory is given as an input, Trivy will recursively look for and test all files based on file patterns. The default file patterns are here.</p> <p>In addition to the default file patterns, the <code>--file-patterns</code> option takes regexp patterns to look for your files. For example, it may be useful when your file name of Dockerfile doesn't match the default patterns.</p> <p>This can be repeated for specifying multiple file patterns. Allowed values are here:</p> <ul> <li>dockerfile</li> <li>yaml</li> <li>json</li> <li>toml</li> <li>hcl</li> </ul> <p>For more details, see an example</p>","title":"File patterns"},{"location":"docs/misconfiguration/options/policy/","text":"","title":"Policy"},{"location":"docs/misconfiguration/options/policy/#pass-custom-policies","text":"<p>You can pass directories including your custom policies through <code>--policy</code> option. This can be repeated for specifying multiple directories.</p> <pre><code>cd examplex/misconf/\ntrivy conf --policy custom-policy/policy --policy combine/policy --namespaces user misconf/mixed\n</code></pre> <p>For more details, see Custom Policies.</p>  <p>Tip</p> <p>You also need to specify <code>--namespaces</code> option.</p>","title":"Pass custom policies"},{"location":"docs/misconfiguration/options/policy/#pass-custom-data","text":"<p>You can pass directories including your custom data through <code>--data</code> option. This can be repeated for specifying multiple directories.</p> <pre><code>cd examples/misconf/custom-data\ntrivy conf --policy ./policy --data ./data --namespaces user ./configs\n</code></pre> <p>For more details, see Custom Data.</p>","title":"Pass custom data"},{"location":"docs/misconfiguration/options/policy/#pass-namespaces","text":"<p>By default, Trivy evaluates policies defined in <code>builtin.*</code>. If you want to evaluate custom policies in other packages, you have to specify package prefixes through <code>--namespaces</code> option. This can be repeated for specifying multiple packages.</p> <pre><code>trivy conf --policy ./policy --namespaces main --namespaces user ./configs\n</code></pre>","title":"Pass namespaces"},{"location":"docs/misconfiguration/options/report/","text":"<p>See Reports Formats in Vulnerability section.</p>  <p>Caution</p> <p>Misconfiguration scanning doesn't support default templates such as XML for now.</p>","title":"Report Formats"},{"location":"docs/misconfiguration/policy/builtin/","text":"","title":"Built-in Policies"},{"location":"docs/misconfiguration/policy/builtin/#policy-sources","text":"<p>Built-in policies are mainly written in Rego and Go. Those policies are managed under defsec repository.</p>    Config type Source     Kubernetes defsec   Dockerfile, Containerfile defsec   Terraform defsec   CloudFormation defsec   Helm Chart defsec   RBAC defsec[rbac]    <p>For suggestions or issues regarding policy content, please open an issue under the defsec repository.</p> <p>Helm Chart scanning will resolve the chart to Kubernetes manifests then run the kubernetes checks.</p> <p>Ansible scanning is coming soon.</p>","title":"Policy Sources"},{"location":"docs/misconfiguration/policy/exceptions/","text":"<p>Exceptions let you specify cases where you allow policy violations. Trivy supports two types of exceptions.</p>  <p>Info</p> <p>Exceptions can be applied to built-in policies as well as custom policies.</p>","title":"Exceptions"},{"location":"docs/misconfiguration/policy/exceptions/#namespace-based-exceptions","text":"<p>There are some cases where you need to disable built-in policies partially or fully. Namespace-based exceptions lets you rough choose which individual packages to exempt.</p> <p>To use namespace-based exceptions, create a Rego rule with the name <code>exception</code> that returns the package names to exempt. The <code>exception</code> rule must be defined under <code>namespace.exceptions</code>. <code>data.namespaces</code> includes all package names.</p>  <p>Example</p> <pre><code>package namespace.exceptions\n\nimport data.namespaces\n\nexception[ns] {\n    ns := data.namespaces[_]\n    startswith(ns, \"builtin.kubernetes\")\n}\n</code></pre>  <p>This example exempts all built-in policies for Kubernetes.</p> <p>For more details, see an example.</p>","title":"Namespace-based exceptions"},{"location":"docs/misconfiguration/policy/exceptions/#rule-based-exceptions","text":"<p>There are some cases where you need more flexibility and granularity in defining which cases to exempt. Rule-based exceptions lets you granularly choose which individual rules to exempt, while also declaring under which conditions to exempt them.</p> <p>To use rule-based exceptions, create a Rego rule with the name <code>exception</code> that returns the rule name suffixes to exempt, prefixed by <code>deny_</code> (for example, returning <code>foo</code> will exempt <code>deny_foo</code>).  The rule can make any other assertion, for example, on the input or data documents.  This is useful to specify the exemption for a specific case.</p> <p>Note that if you specify the empty string, the exception will match all rules named <code>deny</code>.</p> <pre><code>exception[rules] {\n    # Logic\n\n    rules = [\"foo\",\"bar\"]\n}\n</code></pre> <p>The above would provide an exception from <code>deny_foo</code> and <code>deny_bar</code>.</p>  <p>Example</p> <pre><code>package user.kubernetes.ID100\n\n__rego_metadata := {\n    \"id\": \"ID100\",\n    \"title\": \"Deployment not allowed\",\n    \"severity\": \"HIGH\",\n    \"type\": \"Kubernetes Custom Check\",\n}\n\ndeny_deployment[msg] {\n    input.kind == \"Deployment\"\n    msg = sprintf(\"Found deployment '%s' but deployments are not allowed\", [name])\n}\n\nexception[rules] {\n    input.kind == \"Deployment\"\n    input.metadata.name == \"allow-deployment\"\n\n    rules := [\"deployment\"]\n}\n</code></pre>  <p>If you want to apply rule-based exceptions to built-in policies, you have to define the exception under the same package.</p>  <p>Example</p> <pre><code>package builtin.kubernetes.KSV012\n\nexception[rules] {\n    input.metadata.name == \"can-run-as-root\"\n    rules := [\"\"]\n}\n</code></pre>  <p>This exception is applied to KSV012 in defsec. You can get the package names in the defsec repository or the JSON output from Trivy.</p> <p>For more details, see an example.</p>","title":"Rule-based exceptions"},{"location":"docs/references/troubleshooting/","text":"","title":"Troubleshooting"},{"location":"docs/references/troubleshooting/#scan","text":"","title":"Scan"},{"location":"docs/references/troubleshooting/#timeout","text":"<p>Error</p> <pre><code>$ trivy image ...\n...\nanalyze error: timeout: context deadline exceeded\n</code></pre>  <p>Your scan may time out. Java takes a particularly long time to scan. Try increasing the value of the ---timeout option such as <code>--timeout 15m</code>.</p>","title":"Timeout"},{"location":"docs/references/troubleshooting/#certification","text":"<p>Error</p> <p>Error: x509: certificate signed by unknown authority</p>  <p><code>TRIVY_INSECURE</code> can be used to allow insecure connections to a container registry when using SSL.</p> <pre><code>$ TRIVY_INSECURE=true trivy image [YOUR_IMAGE]\n</code></pre>","title":"Certification"},{"location":"docs/references/troubleshooting/#github-rate-limiting","text":"<p>Error</p> <pre><code>$ trivy image ...\n...\nAPI rate limit exceeded for xxx.xxx.xxx.xxx.\n</code></pre>  <p>Specify GITHUB_TOKEN for authentication https://developer.github.com/v3/#rate-limiting</p> <pre><code>$ GITHUB_TOKEN=XXXXXXXXXX trivy alpine:3.10\n</code></pre>","title":"GitHub Rate limiting"},{"location":"docs/references/troubleshooting/#maven-rate-limiting-inconsistent-jar-vulnerability-reporting","text":"<p>Error</p> <pre><code>$ trivy image ...\n...\nstatus 403 Forbidden from http://search.maven.org/solrsearch/select\n</code></pre>  <p>Trivy calls Maven API for better detection of JAR files, but many requests may exceed rate limiting. This can easily happen if you are running more than one instance of Trivy which is concurrently scanning multiple images. Once this starts happening Trivy's vulnerability reporting on jar files may become inconsistent. There are two options to resolve this issue:</p> <p>The first is to enable offline scanning using the <code>--offline-scan</code> option to stop Trivy from making API requests. This option affects only vulnerability scanning. The vulnerability database and builtin policies are downloaded as usual. If you want to skip them as well, you can try <code>--skip-update</code> and <code>--skip-policy-update</code>. Note that a number of vulnerabilities might be fewer than without the <code>--offline-scan</code> option.</p> <p>The second, more scalable, option is the place Trivy behind a rate-limiting forward-proxy to the Maven Central API. One way to achieve this is to use nginx. You can use the following nginx config to enable both rate-limiting and caching (the caching greatly reduces the number of calls to the Maven Central API, especially if you are scanning a lot of similar images):</p> <pre><code>limit_req_zone global zone=maven:1m rate=10r/s;\nproxy_cache_path /tmp/cache keys_zone=mavencache:10m;\n\nserver {\n  listen 80;\n  proxy_cache mavencache;\n\n  location / {\n    limit_req zone=maven burst=1000;\n    proxy_cache_valid any 1h;\n    proxy_pass https://search.maven.org:443;\n  }\n}\n</code></pre> <p>This config file will allow a maximum of 10 requests per second to the Maven API, this number was determined experimentally so you might want to use something else if it doesn't fit your needs.</p> <p>Once nginx is up and running, you need to tell all your Trivy deployments to proxy their Maven API calls through nginx. You can do this by setting the <code>MAVEN_CENTRAL_URL</code> environment variable. For example, if your nginx proxy is running at <code>127.0.0.1</code>, you can set <code>MAVEN_CENTRAL_URL=http://127.0.0.1/solrsearch/select</code>.</p>","title":"Maven rate limiting / inconsistent jar vulnerability reporting"},{"location":"docs/references/troubleshooting/#running-in-parallel-takes-same-time-as-series-run","text":"<p>When running trivy on multiple images simultaneously, it will take same time as running trivy in series. This is because of a limitation of boltdb.</p>  <p>Bolt obtains a file lock on the data file so multiple processes cannot open the same database at the same time. Opening an already open Bolt database will cause it to hang until the other process closes it.</p>  <p>Reference : boltdb: Opening a database.</p>","title":"Running in parallel takes same time as series run"},{"location":"docs/references/troubleshooting/#error-downloading-vulnerability-db","text":"<p>Error</p> <p>FATAL failed to download vulnerability DB</p>  <p>If trivy is running behind corporate firewall, you have to add the following urls to your allowlist.</p> <ul> <li>ghcr.io</li> <li>pkg-containers.githubusercontent.com</li> </ul>","title":"Error downloading vulnerability DB"},{"location":"docs/references/troubleshooting/#old-db-schema","text":"<p>Error</p> <p>--skip-update cannot be specified with the old DB schema.</p>  <p>Trivy v0.23.0 or later requires Trivy DB v2. Please update your local database or follow the instruction of air-gapped environment.</p>","title":"Old DB schema"},{"location":"docs/references/troubleshooting/#multiple-trivy-servers","text":"<p>Error</p> <pre><code>$ trivy image --server http://xxx.com:xxxx test-image\n...\n- twirp error internal: failed scan, test-image: failed to apply layers: layer cache missing: sha256:*****\n</code></pre>  <p>To run multiple Trivy servers, you need to use Redis as the cache backend so that those servers can share the cache.  Follow this instruction to do so.</p>","title":"Multiple Trivy servers"},{"location":"docs/references/troubleshooting/#homebrew","text":"","title":"Homebrew"},{"location":"docs/references/troubleshooting/#scope-error","text":"<p>Error</p> <p>Error: Your macOS keychain GitHub credentials do not have sufficient scope!</p>  <pre><code>$ brew tap aquasecurity/trivy\nError: Your macOS keychain GitHub credentials do not have sufficient scope!\nScopes they need: none\nScopes they have:\nCreate a personal access token:\nhttps://github.com/settings/tokens/new?scopes=gist,public_repo&amp;description=Homebrew\necho 'export HOMEBREW_GITHUB_API_TOKEN=your_token_here' &gt;&gt; ~/.zshrc\n</code></pre> <p>Try:</p> <pre><code>$ printf \"protocol=https\\nhost=github.com\\n\" | git credential-osxkeychain erase\n</code></pre>","title":"Scope error"},{"location":"docs/references/troubleshooting/#already-installed","text":"<p>Error</p> <p>Error: aquasecurity/trivy/trivy 64 already installed</p>  <pre><code>$ brew upgrade\n...\nError: aquasecurity/trivy/trivy 64 already installed\n</code></pre> <p>Try:</p> <pre><code>$ brew unlink trivy &amp;&amp; brew uninstall trivy\n($ rm -rf /usr/local/Cellar/trivy/64)\n$ brew install aquasecurity/trivy/trivy\n</code></pre>","title":"Already installed"},{"location":"docs/references/troubleshooting/#others","text":"","title":"Others"},{"location":"docs/references/troubleshooting/#unknown-error","text":"<p>Try again with <code>--reset</code> option:</p> <pre><code>$ trivy image --reset\n</code></pre>","title":"Unknown error"},{"location":"docs/references/cli/","text":"<p>Trivy has several sub commands, image, fs, repo, client and server.</p> <pre><code>Scanner for vulnerabilities in container images, file systems, and Git repositories, as well as for configuration issues and hard-coded secrets\n\nUsage:\n  trivy [global flags] command [flags] target\n  trivy [command]\n\nExamples:\n  # Scan a container image\n  $ trivy image python:3.4-alpine\n\n  # Scan a container image from a tar archive\n  $ trivy image --input ruby-3.1.tar\n\n  # Scan local filesystem\n  $ trivy fs .\n\n  # Run in server mode\n  $ trivy server\n\nAvailable Commands:\n  config      Scan config files for misconfigurations\n  filesystem  Scan local filesystem\n  help        Help about any command\n  image       Scan a container image\n  kubernetes  scan kubernetes cluster\n  module      Manage modules\n  plugin      Manage plugins\n  repository  Scan a remote repository\n  rootfs      Scan rootfs\n  sbom        Scan SBOM for vulnerabilities\n  server      Server mode\n  version     Print the version\n\nFlags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n  -f, --format string             version format (json)\n      --generate-default-config   write the default config to trivy-default.yaml\n  -h, --help                      help for trivy\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n\nUse \"trivy [command] --help\" for more information about a command.\n</code></pre>","title":"Overview"},{"location":"docs/references/cli/client/","text":"<pre><code>Usage:\n  trivy client [flags] IMAGE_NAME\n\nAliases:\n  client, c\n\nScan Flags\n      --offline-scan             do not issue API requests to identify dependencies\n      --security-checks string   comma-separated list of what security issues to detect (vuln,config,secret) (default \"vuln,secret\")\n      --skip-dirs strings        specify the directories where the traversal is skipped\n      --skip-files strings       specify the file paths to skip traversal\n\nReport Flags\n      --dependency-tree        show dependency origin tree (EXPERIMENTAL)\n      --exit-code int          specify exit code when any security issues are found\n  -f, --format string          format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignore-policy string   specify the Rego file path to evaluate each vulnerability\n      --ignorefile string      specify .trivyignore file (default \".trivyignore\")\n      --list-all-pkgs          enabling the option will output all packages regardless of vulnerability\n  -o, --output string          output file name\n      --report string          specify a report format for the output. (all,summary) (default \"all\")\n  -s, --severity string        severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string        output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nVulnerability Flags\n      --ignore-unfixed     display only fixed vulnerabilities\n      --vuln-type string   comma-separated list of vulnerability types (os,library) (default \"os,library\")\n\nMisconfiguration Flags\n      --config-data strings         specify paths from which data for the Rego policies will be recursively loaded\n      --config-policy strings       specify paths to the Rego policy files directory, applying config files\n      --file-patterns strings       specify config file patterns, available with '--security-checks config'\n      --include-non-failures        include successes and exceptions, available with '--security-checks config'\n      --policy-namespaces strings   Rego namespaces\n      --trace                       enable more verbose trace output for custom queries\n\nClient/Server Flags\n      --custom-headers strings   custom headers in client mode\n      --remote string            server address (default \"http://localhost:4954\")\n      --token string             for authentication in client/server mode\n      --token-header string      specify a header name for token in client/server mode (default \"Trivy-Token\")\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Client"},{"location":"docs/references/cli/config/","text":"<pre><code>Scan config files for misconfigurations\n\nUsage:\n  trivy config [flags] DIR\n\nAliases:\n  config, conf\n\nScan Flags\n      --skip-dirs strings    specify the directories where the traversal is skipped\n      --skip-files strings   specify the file paths to skip traversal\n\nReport Flags\n      --exit-code int       specify exit code when any security issues are found\n  -f, --format string       format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignorefile string   specify .trivyignore file (default \".trivyignore\")\n  -o, --output string       output file name\n  -s, --severity string     severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string     output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nMisconfiguration Flags\n      --config-data strings         specify paths from which data for the Rego policies will be recursively loaded\n      --config-policy strings       specify paths to the Rego policy files directory, applying config files\n      --file-patterns strings       specify config file patterns, available with '--security-checks config'\n      --include-non-failures        include successes and exceptions, available with '--security-checks config'\n      --policy-namespaces strings   Rego namespaces\n      --trace                       enable more verbose trace output for custom queries\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Config"},{"location":"docs/references/cli/fs/","text":"<pre><code>Scan local filesystem\n\nUsage:\n  trivy filesystem [flags] PATH\n\nAliases:\n  filesystem, fs\n\nExamples:\n  # Scan a local project including language-specific files\n  $ trivy fs /path/to/your_project\n\n  # Scan a single file\n  $ trivy fs ./trivy-ci-test/Pipfile.lock\n\nScan Flags\n      --offline-scan             do not issue API requests to identify dependencies\n      --security-checks string   comma-separated list of what security issues to detect (vuln,config,secret) (default \"vuln,secret\")\n      --skip-dirs strings        specify the directories where the traversal is skipped\n      --skip-files strings       specify the file paths to skip traversal\n\nReport Flags\n      --dependency-tree        show dependency origin tree (EXPERIMENTAL)\n      --exit-code int          specify exit code when any security issues are found\n  -f, --format string          format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignore-policy string   specify the Rego file path to evaluate each vulnerability\n      --ignorefile string      specify .trivyignore file (default \".trivyignore\")\n      --list-all-pkgs          enabling the option will output all packages regardless of vulnerability\n  -o, --output string          output file name\n  -s, --severity string        severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string        output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nVulnerability Flags\n      --ignore-unfixed     display only fixed vulnerabilities\n      --vuln-type string   comma-separated list of vulnerability types (os,library) (default \"os,library\")\n\nMisconfiguration Flags\n      --config-data strings         specify paths from which data for the Rego policies will be recursively loaded\n      --config-policy strings       specify paths to the Rego policy files directory, applying config files\n      --file-patterns strings       specify config file patterns, available with '--security-checks config'\n      --include-non-failures        include successes and exceptions, available with '--security-checks config'\n      --policy-namespaces strings   Rego namespaces\n      --trace                       enable more verbose trace output for custom queries\n\nSecret Flags\n      --secret-config string   specify a path to config file for secret scanning (default \"trivy-secret.yaml\")\n\nLicense Flags\n      --ignored-licenses strings   specify a list of license to ignore\n      --license-full               eagerly look for licenses in source code headers and license files\n\nClient/Server Flags\n      --custom-headers strings   custom headers in client mode\n      --server string            server address in client mode\n      --token string             for authentication in client/server mode\n      --token-header string      specify a header name for token in client/server mode (default \"Trivy-Token\")\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Filesystem"},{"location":"docs/references/cli/image/","text":"<pre><code>Scan a container image\n\nUsage:\n  trivy image [flags] IMAGE_NAME\n\nAliases:\n  image, i\n\nExamples:\n  # Scan a container image\n  $ trivy image python:3.4-alpine\n\n  # Scan a container image from a tar archive\n  $ trivy image --input ruby-3.1.tar\n\n  # Filter by severities\n  $ trivy image --severity HIGH,CRITICAL alpine:3.15\n\n  # Ignore unfixed/unpatched vulnerabilities\n  $ trivy image --ignore-unfixed alpine:3.15\n\n  # Scan a container image in client mode\n  $ trivy image --server http://127.0.0.1:4954 alpine:latest\n\n  # Generate json result\n  $ trivy image --format json --output result.json alpine:3.15\n\n  # Generate a report in the CycloneDX format\n  $ trivy image --format cyclonedx --output result.cdx alpine:3.15\n\nScan Flags\n      --offline-scan             do not issue API requests to identify dependencies\n      --security-checks string   comma-separated list of what security issues to detect (vuln,config,secret) (default \"vuln,secret\")\n      --skip-dirs strings        specify the directories where the traversal is skipped\n      --skip-files strings       specify the file paths to skip traversal\n\nReport Flags\n      --exit-code int          specify exit code when any security issues are found\n  -f, --format string          format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignore-policy string   specify the Rego file path to evaluate each vulnerability\n      --ignorefile string      specify .trivyignore file (default \".trivyignore\")\n      --list-all-pkgs          enabling the option will output all packages regardless of vulnerability\n  -o, --output string          output file name\n  -s, --severity string        severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string        output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nImage Flags\n      --input string   input file path instead of image name\n      --removed-pkgs   detect vulnerabilities of removed packages (only for Alpine)\n\nVulnerability Flags\n      --ignore-unfixed     display only fixed vulnerabilities\n      --vuln-type string   comma-separated list of vulnerability types (os,library) (default \"os,library\")\n\nMisconfiguration Flags\n      --config-data strings         specify paths from which data for the Rego policies will be recursively loaded\n      --config-policy strings       specify paths to the Rego policy files directory, applying config files\n      --file-patterns strings       specify config file patterns, available with '--security-checks config'\n      --include-non-failures        include successes and exceptions, available with '--security-checks config'\n      --policy-namespaces strings   Rego namespaces\n      --trace                       enable more verbose trace output for custom queries\n\nSecret Flags\n      --secret-config string   specify a path to config file for secret scanning (default \"trivy-secret.yaml\")\n\nLicense Flags\n      --ignored-licenses strings   specify a list of license to ignore\n      --license-full               eagerly look for licenses in source code headers and license files\n\nClient/Server Flags\n      --custom-headers strings   custom headers in client mode\n      --server string            server address in client mode\n      --token string             for authentication in client/server mode\n      --token-header string      specify a header name for token in client/server mode (default \"Trivy-Token\")\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Image"},{"location":"docs/references/cli/module/","text":"<pre><code>Manage modules\n\nUsage:\n  trivy module [command]\n\nAliases:\n  module, m\n\nAvailable Commands:\n  install     Install a module\n  uninstall   Uninstall a module\n\nFlags:\n  -h, --help   help for module\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n\nUse \"trivy module [command] --help\" for more information about a command.\n</code></pre>","title":"Module"},{"location":"docs/references/cli/plugin/","text":"<pre><code>Manage plugins\n\nUsage:\n  trivy plugin [command]\n\nAliases:\n  plugin, p\n\nAvailable Commands:\n  info        Show information about the specified plugin\n  install     Install a plugin\n  list        List installed plugin\n  run         Run a plugin on the fly\n  uninstall   Uninstall a plugin\n  update      Update an existing plugin\n\nFlags:\n  -h, --help   help for plugin\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n\nUse \"trivy plugin [command] --help\" for more information about a command.\n</code></pre>","title":"Plugin"},{"location":"docs/references/cli/repo/","text":"<pre><code>Scan a remote repository\n\nUsage:\n  trivy repository [flags] REPO_URL\n\nAliases:\n  repository, repo\n\nExamples:\n  # Scan your remote git repository\n  $ trivy repo https://github.com/knqyf263/trivy-ci-test\n\nScan Flags\n      --offline-scan             do not issue API requests to identify dependencies\n      --security-checks string   comma-separated list of what security issues to detect (vuln,config,secret) (default \"vuln,secret\")\n      --skip-dirs strings        specify the directories where the traversal is skipped\n      --skip-files strings       specify the file paths to skip traversal\n\nReport Flags\n      --dependency-tree        show dependency origin tree (EXPERIMENTAL)\n      --exit-code int          specify exit code when any security issues are found\n  -f, --format string          format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignore-policy string   specify the Rego file path to evaluate each vulnerability\n      --ignorefile string      specify .trivyignore file (default \".trivyignore\")\n      --list-all-pkgs          enabling the option will output all packages regardless of vulnerability\n  -o, --output string          output file name\n  -s, --severity string        severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string        output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nVulnerability Flags\n      --ignore-unfixed     display only fixed vulnerabilities\n      --vuln-type string   comma-separated list of vulnerability types (os,library) (default \"os,library\")\n\nMisconfiguration Flags\n      --config-data strings         specify paths from which data for the Rego policies will be recursively loaded\n      --config-policy strings       specify paths to the Rego policy files directory, applying config files\n      --file-patterns strings       specify config file patterns, available with '--security-checks config'\n      --include-non-failures        include successes and exceptions, available with '--security-checks config'\n      --policy-namespaces strings   Rego namespaces\n      --trace                       enable more verbose trace output for custom queries\n\nSecret Flags\n      --secret-config string   specify a path to config file for secret scanning (default \"trivy-secret.yaml\")\n\nLicense Flags\n      --ignored-licenses strings   specify a list of license to ignore\n      --license-full               eagerly look for licenses in source code headers and license files\n\nClient/Server Flags\n      --custom-headers strings   custom headers in client mode\n      --server string            server address in client mode\n      --token string             for authentication in client/server mode\n      --token-header string      specify a header name for token in client/server mode (default \"Trivy-Token\")\n\nRepository Flags\n      --branch string   pass the branch name to be scanned\n      --commit string   pass the commit hash to be scanned\n      --tag string      pass the tag name to be scanned\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Repository"},{"location":"docs/references/cli/rootfs/","text":"<pre><code>Scan rootfs\n\nUsage:\n  trivy rootfs [flags] ROOTDIR\n\nExamples:\n  # Scan unpacked filesystem\n  $ docker export $(docker create alpine:3.10.2) | tar -C /tmp/rootfs -xvf -\n  $ trivy rootfs /tmp/rootfs\n\n  # Scan from inside a container\n  $ docker run --rm -it alpine:3.11\n  / # curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin\n  / # trivy rootfs /\n\nScan Flags\n      --offline-scan             do not issue API requests to identify dependencies\n      --security-checks string   comma-separated list of what security issues to detect (vuln,config,secret) (default \"vuln,secret\")\n      --skip-dirs strings        specify the directories where the traversal is skipped\n      --skip-files strings       specify the file paths to skip traversal\n\nReport Flags\n      --dependency-tree        show dependency origin tree (EXPERIMENTAL)\n      --exit-code int          specify exit code when any security issues are found\n  -f, --format string          format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignore-policy string   specify the Rego file path to evaluate each vulnerability\n      --ignorefile string      specify .trivyignore file (default \".trivyignore\")\n      --list-all-pkgs          enabling the option will output all packages regardless of vulnerability\n  -o, --output string          output file name\n  -s, --severity string        severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string        output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nVulnerability Flags\n      --ignore-unfixed     display only fixed vulnerabilities\n      --vuln-type string   comma-separated list of vulnerability types (os,library) (default \"os,library\")\n\nMisconfiguration Flags\n      --config-data strings         specify paths from which data for the Rego policies will be recursively loaded\n      --config-policy strings       specify paths to the Rego policy files directory, applying config files\n      --file-patterns strings       specify config file patterns, available with '--security-checks config'\n      --include-non-failures        include successes and exceptions, available with '--security-checks config'\n      --policy-namespaces strings   Rego namespaces\n      --trace                       enable more verbose trace output for custom queries\n\nSecret Flags\n      --secret-config string   specify a path to config file for secret scanning (default \"trivy-secret.yaml\")\n\nLicense Flags\n      --ignored-licenses strings   specify a list of license to ignore\n      --license-full               eagerly look for licenses in source code headers and license files\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Rootfs"},{"location":"docs/references/cli/sbom/","text":"<pre><code>Scan SBOM for vulnerabilities\n\nUsage:\n  trivy sbom [flags] SBOM_PATH\n\nExamples:\n  # Scan CycloneDX and show the result in tables\n  $ trivy sbom /path/to/report.cdx\n\n  # Scan CycloneDX and generate a CycloneDX report\n  $ trivy sbom --format cyclonedx /path/to/report.cdx\n\n\nScan Flags\n      --offline-scan             do not issue API requests to identify dependencies\n      --security-checks string   comma-separated list of what security issues to detect (vuln,config,secret) (default \"vuln,secret\")\n      --skip-dirs strings        specify the directories where the traversal is skipped\n      --skip-files strings       specify the file paths to skip traversal\n\nReport Flags\n      --exit-code int          specify exit code when any security issues are found\n  -f, --format string          format (table, json, sarif, template, cyclonedx, spdx, spdx-json, github, cosign-vuln) (default \"table\")\n      --ignore-policy string   specify the Rego file path to evaluate each vulnerability\n      --ignorefile string      specify .trivyignore file (default \".trivyignore\")\n      --list-all-pkgs          enabling the option will output all packages regardless of vulnerability\n  -o, --output string          output file name\n  -s, --severity string        severities of security issues to be displayed (comma separated) (default \"UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL\")\n  -t, --template string        output template\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nVulnerability Flags\n      --ignore-unfixed     display only fixed vulnerabilities\n      --vuln-type string   comma-separated list of vulnerability types (os,library) (default \"os,library\")\n\nClient/Server Flags\n      --custom-headers strings   custom headers in client mode\n      --server string            server address in client mode\n      --token string             for authentication in client/server mode\n      --token-header string      specify a header name for token in client/server mode (default \"Trivy-Token\")\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"SBOM"},{"location":"docs/references/cli/server/","text":"<pre><code>Server mode\n\nUsage:\n  trivy server [flags]\n\nAliases:\n  server, s\n\nExamples:\n  # Run a server\n  $ trivy server\n\n  # Listen on 0.0.0.0:10000\n  $ trivy server --listen 0.0.0.0:10000\n\n\nCache Flags\n      --cache-backend string   cache backend (e.g. redis://localhost:6379) (default \"fs\")\n      --cache-ttl duration     cache TTL when using redis as cache backend\n      --clear-cache            clear image caches without scanning\n      --redis-ca string        redis ca file location, if using redis as cache backend\n      --redis-cert string      redis certificate file location, if using redis as cache backend\n      --redis-key string       redis key file location, if using redis as cache backend\n\nDB Flags\n      --db-repository string   OCI repository to retrieve trivy-db from (default \"ghcr.io/aquasecurity/trivy-db\")\n      --download-db-only       download/update vulnerability database but don't run a scan\n      --no-progress            suppress progress bar\n      --reset                  remove all caches and database\n      --skip-db-update         skip updating vulnerability database\n\nClient/Server Flags\n      --listen string         listen address in server mode (default \"localhost:4954\")\n      --token string          for authentication in client/server mode\n      --token-header string   specify a header name for token in client/server mode (default \"Trivy-Token\")\n\nGlobal Flags:\n      --cache-dir string          cache directory (default \"/Users/teppei/Library/Caches/trivy\")\n  -c, --config string             config path (default \"trivy.yaml\")\n  -d, --debug                     debug mode\n      --generate-default-config   write the default config to trivy-default.yaml\n      --insecure                  allow insecure server connections when using TLS\n  -q, --quiet                     suppress progress bar and log output\n      --timeout duration          timeout (default 5m0s)\n  -v, --version                   show version\n</code></pre>","title":"Server"},{"location":"docs/references/customization/config-file/","text":"<p>Trivy can be customized by tweaking a <code>trivy.yaml</code> file. The config path can be overridden by the <code>--config</code> flag.</p> <p>An example is here.</p>","title":"Config file"},{"location":"docs/references/customization/config-file/#global-options","text":"<pre><code># Same as '--quiet'\n# Default is false\nquiet: false\n\n# Same as '--debug'\n# Default is false\ndebug: false\n\n# Same as '--insecure'\n# Default is false\ninsecure: false\n\n# Same as '--timeout'\n# Default is '5m'\ntimeout: 10m\n\n# Same as '--cache-dir'\n# Default is your system cache dir\ncache-dir: $HOME/.cache/trivy\n</code></pre>","title":"Global Options"},{"location":"docs/references/customization/config-file/#report-options","text":"<pre><code># Same as '--format'\n# Default is 'table'\nformat: table\n\n# Same as '--report' (available with 'trivy k8s')\n# Default is all\nreport: all\n\n# Same as '--template'\n# Default is empty\ntemplate: \n\n# Same as '--dependency-tree'\n# Default is false\ndependency-tree: false\n\n# Same as '--list-all-pkgs'\n# Default is false\nlist-all-pkgs: false\n\n# Same as '--ignorefile'\n# Default is '.trivyignore'\nignorefile: .trivyignore\n\n# Same as '--ignore-policy'\n# Default is empty\nignore-policy:\n\n# Same as '--exit-code'\n# Default is 0\nexit-code: 0\n\n# Same as '--output'\n# Default is empty (stdout)\noutput:\n\n# Same as '--severity'\n# Default is all severities\nseverity:\n  - UNKNOWN\n  - LOW\n  - MEDIUM\n  - HIGH\n  - CRITICAL\n</code></pre>","title":"Report Options"},{"location":"docs/references/customization/config-file/#scan-options","text":"<p>Available in client/server mode</p> <pre><code>scan:\n  # Same as '--skip-dirs'\n  # Default is empty\n  skip-dirs:\n    - usr/local/\n    - etc/\n\n  # Same as '--skip-files'\n  # Default is empty\n  skip-files:\n    - package-dev.json\n\n  # Same as '--offline-scan'\n  # Default is false\n  offline-scan: false\n\n  # Same as '--security-checks'\n  # Default depends on subcommand\n  security-checks:\n    - vuln\n    - config\n    - secret\n</code></pre>","title":"Scan Options"},{"location":"docs/references/customization/config-file/#cache-options","text":"<pre><code>cache:\n  # Same as '--cache-backend'\n  # Default is 'fs' \n  backend: 'fs'\n\n  # Same as '--cache-ttl'\n  # Default is 0 (no ttl) \n  ttl: 0\n\n  # Redis options\n  redis:\n    # Same as '--redis-ca'\n    # Default is empty\n    ca:\n\n    # Same as '--redis-cert'\n    # Default is empty\n    cert:\n\n    # Same as '--redis-key'\n    # Default is empty\n    key:\n</code></pre>","title":"Cache Options"},{"location":"docs/references/customization/config-file/#db-options","text":"<pre><code>db:\n  # Same as '--skip-db-update'\n  # Default is false\n  skip-update: false\n\n  # Same as '--no-progress'\n  # Default is false\n  no-progress: false\n\n  # Same as '--db-repository'\n  # Default is 'github.com/aquasecurity-trivy-repo'\n  repository: github.com/aquasecurity-trivy-repo\n</code></pre>","title":"DB Options"},{"location":"docs/references/customization/config-file/#image-options","text":"<p>Available with container image scanning</p> <pre><code>image:\n  # Same as '--input' (available with 'trivy image')\n  # Default is empty\n  input:\n\n  # Same as '--removed-pkgs'\n  # Default is false\n  removed-pkgs: false\n</code></pre>","title":"Image Options"},{"location":"docs/references/customization/config-file/#vulnerability-options","text":"<p>Available with vulnerability scanning</p> <pre><code>vulnerability:\n  # Same as '--vuln-type'\n  # Default is 'os,library'\n  type:\n    - os\n    - library\n\n  # Same as '--ignore-unfixed'\n  # Default is false\n  ignore-unfixed: false\n</code></pre>","title":"Vulnerability Options"},{"location":"docs/references/customization/config-file/#secret-options","text":"<p>Available with secret scanning</p> <pre><code>secret:\n  # Same as '--secret-config'\n  # Default is 'trivy-secret.yaml'\n  config: config/trivy/secret.yaml\n</code></pre>","title":"Secret Options"},{"location":"docs/references/customization/config-file/#misconfiguration-options","text":"<p>Available with misconfiguration scanning</p> <pre><code>misconfiguration:\n  # Same as '--file-patterns'\n  # Default is empty\n  file-patterns:\n    -\n\n  # Same as '--include-non-failures'\n  # Default is false\n  include-non-failures: false\n\n  # Same as '--trace'\n  # Default is false\n  trace: false\n\n  # Same as '--config-policy'\n  # Default is empty\n  policy:\n    - policy/repository\n    - policy/custom\n\n  # Same as '--config-data'\n  # Default is empty\n  data:\n    - data/\n\n  # Same as '--policy-namespaces'\n  # Default is empty\n  namespaces:\n    - opa.examples\n    - users\n</code></pre>","title":"Misconfiguration Options"},{"location":"docs/references/customization/config-file/#kubernetes-options","text":"<p>Available with Kubernetes scanning</p> <pre><code>kubernetes:\n  # Same as '--context'\n  # Default is empty\n  context:\n\n  # Same as '--namespace'\n  # Default is empty\n  namespace:\n</code></pre>","title":"Kubernetes Options"},{"location":"docs/references/customization/config-file/#repository-options","text":"<p>Available with git repository scanning (<code>trivy repo</code>) </p> <pre><code>repository:\n  # Same as '--branch'\n  # Default is empty\n  branch:\n\n  # Same as '--commit'\n  # Default is empty\n  commit:\n\n  # Same as '--tag'\n  # Default is empty\n  tag:\n</code></pre>","title":"Repository Options"},{"location":"docs/references/customization/config-file/#clientserver-options","text":"<p>Available in client/server mode</p> <pre><code>server:\n  # Same as '--server' (available in client mode)\n  # Default is empty\n  addr: http://localhost:4954\n\n  # Same as '--token'\n  # Default is empty\n  token: \"something-secret\"\n\n  # Same as '--token-header'\n  # Default is 'Trivy-Token'\n  token-header: 'My-Token-Header'\n\n  # Same as '--custom-headers'\n  # Default is empty\n  custom-headers:\n    - scanner: trivy\n    - x-api-token: xxx\n\n  # Same as '--listen' (available in server mode)\n  # Default is 'localhost:4954'\n  listen: 0.0.0.0:10000\n</code></pre>","title":"Client/Server Options"},{"location":"docs/references/customization/envs/","text":"<p>Trivy can be customized by environment variables. The environment variable key is the flag name converted by the following procedure.</p> <ul> <li>Add <code>TRIVY_</code> prefix</li> <li>Make it all uppercase</li> <li>Replace <code>-</code> with <code>_</code></li> </ul> <p>For example, </p> <ul> <li><code>--debug</code> =&gt; <code>TRIVY_DEBUG</code></li> <li><code>--cache-dir</code> =&gt; <code>TRIVY_CACHE_DIR</code></li> </ul> <pre><code>$ TRIVY_DEBUG=true TRIVY_SEVERITY=CRITICAL trivy image alpine:3.15\n</code></pre>","title":"Environment variables"},{"location":"docs/references/modes/client-server/","text":"<p>Trivy has client/server mode. Trivy server has vulnerability database and Trivy client doesn't have to download vulnerability database. It is useful if you want to scan images or files at multiple locations and do not want to download the database at every location.</p>","title":"Client/Server"},{"location":"docs/references/modes/client-server/#server","text":"<p>At first, you need to launch Trivy server. It downloads vulnerability database automatically and continue to fetch the latest DB in the background. <pre><code>$ trivy server --listen localhost:8080\n2019-12-12T15:17:06.551+0200    INFO    Need to update DB\n2019-12-12T15:17:56.706+0200    INFO    Reopening DB...\n2019-12-12T15:17:56.707+0200    INFO    Listening localhost:8080...\n</code></pre></p> <p>If you want to accept a connection from outside, you have to specify <code>0.0.0.0</code> or your ip address, not <code>localhost</code>.</p> <pre><code>$ trivy server --listen 0.0.0.0:8080\n</code></pre>","title":"Server"},{"location":"docs/references/modes/client-server/#remote-image-scan","text":"<p>Then, specify the server address for <code>image</code> command. <pre><code>$ trivy image --server http://localhost:8080 alpine:3.10\n</code></pre> Note: It's important to specify the protocol (http or https).</p>  Result <pre><code>alpine:3.10 (alpine 3.10.2)\n===========================\nTotal: 3 (UNKNOWN: 0, LOW: 1, MEDIUM: 2, HIGH: 0, CRITICAL: 0)\n\n+---------+------------------+----------+-------------------+---------------+\n| LIBRARY | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |\n+---------+------------------+----------+-------------------+---------------+\n| openssl | CVE-2019-1549    | MEDIUM   | 1.1.1c-r0         | 1.1.1d-r0     |\n+         +------------------+          +                   +               +\n|         | CVE-2019-1563    |          |                   |               |\n+         +------------------+----------+                   +               +\n|         | CVE-2019-1547    | LOW      |                   |               |\n+---------+------------------+----------+-------------------+---------------+\n</code></pre>","title":"Remote image scan"},{"location":"docs/references/modes/client-server/#remote-scan-of-local-filesystem","text":"<p>Also, there is a way to scan local file system: <pre><code>$ trivy fs --server http://localhost:8080 --severity CRITICAL ./integration/testdata/fixtures/fs/pom/\n</code></pre> Note: It's important to specify the protocol (http or https).</p>  Result pom.xml (pom) ============= Total: 24 (CRITICAL: 24)  +---------------------------------------------+------------------+----------+-------------------+--------------------------------+---------------------------------------+ |                   LIBRARY                   | VULNERABILITY ID | SEVERITY | INSTALLED VERSION |         FIXED VERSION          |                 TITLE                 | +---------------------------------------------+------------------+----------+-------------------+--------------------------------+---------------------------------------+ | com.fasterxml.jackson.core:jackson-databind | CVE-2017-17485   | CRITICAL | 2.9.1             | 2.8.11, 2.9.4                  | jackson-databind: Unsafe              | |                                             |                  |          |                   |                                | deserialization due to                | |                                             |                  |          |                   |                                | incomplete black list (incomplete     | |                                             |                  |          |                   |                                | fix for CVE-2017-15095)...            | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2017-17485 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2018-11307   |          |                   | 2.7.9.4, 2.8.11.2, 2.9.6       | jackson-databind: Potential           | |                                             |                  |          |                   |                                | information exfiltration with         | |                                             |                  |          |                   |                                | default typing, serialization         | |                                             |                  |          |                   |                                | gadget from MyBatis                   | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-11307 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2018-14718   |          |                   | 2.6.7.2, 2.9.7                 | jackson-databind: arbitrary code      | |                                             |                  |          |                   |                                | execution in slf4j-ext class          | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-14718 | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2018-14719   |          |                   |                                | jackson-databind: arbitrary           | |                                             |                  |          |                   |                                | code execution in blaze-ds-opt        | |                                             |                  |          |                   |                                | and blaze-ds-core classes             | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-14719 | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2018-14720   |          |                   |                                | jackson-databind: exfiltration/XXE    | |                                             |                  |          |                   |                                | in some JDK classes                   | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-14720 | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2018-14721   |          |                   |                                | jackson-databind: server-side request | |                                             |                  |          |                   |                                | forgery (SSRF) in axis2-jaxws class   | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-14721 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2018-19360   |          |                   | 2.6.7.3, 2.7.9.5, 2.8.11.3,    | jackson-databind: improper            | |                                             |                  |          |                   | 2.9.8                          | polymorphic deserialization           | |                                             |                  |          |                   |                                | in axis2-transport-jms class          | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-19360 | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2018-19361   |          |                   |                                | jackson-databind: improper            | |                                             |                  |          |                   |                                | polymorphic deserialization           | |                                             |                  |          |                   |                                | in openjpa class                      | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-19361 | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2018-19362   |          |                   |                                | jackson-databind: improper            | |                                             |                  |          |                   |                                | polymorphic deserialization           | |                                             |                  |          |                   |                                | in jboss-common-core class            | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-19362 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2018-7489    |          |                   | 2.7.9.3, 2.8.11.1, 2.9.5       | jackson-databind: incomplete fix      | |                                             |                  |          |                   |                                | for CVE-2017-7525 permits unsafe      | |                                             |                  |          |                   |                                | serialization via c3p0 libraries      | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2018-7489  | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-14379   |          |                   | 2.7.9.6, 2.8.11.4, 2.9.9.2     | jackson-databind: default             | |                                             |                  |          |                   |                                | typing mishandling leading            | |                                             |                  |          |                   |                                | to remote code execution              | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-14379 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-14540   |          |                   | 2.9.10                         | jackson-databind:                     | |                                             |                  |          |                   |                                | Serialization gadgets in              | |                                             |                  |          |                   |                                | com.zaxxer.hikari.HikariConfig        | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-14540 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-14892   |          |                   | 2.6.7.3, 2.8.11.5, 2.9.10      | jackson-databind: Serialization       | |                                             |                  |          |                   |                                | gadgets in classes of the             | |                                             |                  |          |                   |                                | commons-configuration package         | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-14892 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-14893   |          |                   | 2.8.11.5, 2.9.10               | jackson-databind:                     | |                                             |                  |          |                   |                                | Serialization gadgets in              | |                                             |                  |          |                   |                                | classes of the xalan package          | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-14893 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-16335   |          |                   | 2.9.10                         | jackson-databind:                     | |                                             |                  |          |                   |                                | Serialization gadgets in              | |                                             |                  |          |                   |                                | com.zaxxer.hikari.HikariDataSource    | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-16335 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-16942   |          |                   | 2.9.10.1                       | jackson-databind:                     | |                                             |                  |          |                   |                                | Serialization gadgets in              | |                                             |                  |          |                   |                                | org.apache.commons.dbcp.datasources.* | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-16942 | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2019-16943   |          |                   |                                | jackson-databind:                     | |                                             |                  |          |                   |                                | Serialization gadgets in              | |                                             |                  |          |                   |                                | com.p6spy.engine.spy.P6DataSource     | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-16943 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-17267   |          |                   | 2.9.10                         | jackson-databind: Serialization       | |                                             |                  |          |                   |                                | gadgets in classes of                 | |                                             |                  |          |                   |                                | the ehcache package                   | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-17267 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-17531   |          |                   | 2.9.10.1                       | jackson-databind:                     | |                                             |                  |          |                   |                                | Serialization gadgets in              | |                                             |                  |          |                   |                                | org.apache.log4j.receivers.db.*       | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-17531 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2019-20330   |          |                   | 2.8.11.5, 2.9.10.2             | jackson-databind: lacks               | |                                             |                  |          |                   |                                | certain net.sf.ehcache blocking       | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2019-20330 | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2020-8840    |          |                   | 2.7.9.7, 2.8.11.5, 2.9.10.3    | jackson-databind: Lacks certain       | |                                             |                  |          |                   |                                | xbean-reflect/JNDI blocking           | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-8840  | +                                             +------------------+          +                   +--------------------------------+---------------------------------------+ |                                             | CVE-2020-9546    |          |                   | 2.7.9.7, 2.8.11.6, 2.9.10.4    | jackson-databind: Serialization       | |                                             |                  |          |                   |                                | gadgets in shaded-hikari-config       | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-9546  | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2020-9547    |          |                   |                                | jackson-databind: Serialization       | |                                             |                  |          |                   |                                | gadgets in ibatis-sqlmap              | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-9547  | +                                             +------------------+          +                   +                                +---------------------------------------+ |                                             | CVE-2020-9548    |          |                   |                                | jackson-databind: Serialization       | |                                             |                  |          |                   |                                | gadgets in anteros-core               | |                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-9548  | +---------------------------------------------+------------------+----------+-------------------+--------------------------------+---------------------------------------+","title":"Remote scan of local filesystem"},{"location":"docs/references/modes/client-server/#authentication","text":"<pre><code>$ trivy server --listen localhost:8080 --token dummy\n</code></pre> <pre><code>$ trivy image --server http://localhost:8080 --token dummy alpine:3.10\n</code></pre>","title":"Authentication"},{"location":"docs/references/modes/client-server/#architecture","text":"<p></p>","title":"Architecture"},{"location":"docs/references/modes/standalone/","text":"<p><code>trivy image</code>, <code>trivy filesystem</code>, and <code>trivy repo</code> works as standalone mode.</p>","title":"Standalone"},{"location":"docs/references/modes/standalone/#image","text":"<p></p>","title":"Image"},{"location":"docs/references/modes/standalone/#filesystem","text":"<p></p>","title":"Filesystem"},{"location":"docs/references/modes/standalone/#git-repository","text":"<p></p>","title":"Git Repository"},{"location":"docs/sbom/","text":"","title":"SBOM"},{"location":"docs/sbom/#reporting","text":"<p>Trivy can generate the following SBOM formats.</p> <ul> <li>CycloneDX</li> <li>SPDX</li> </ul> <p>To generate SBOM, you can use the <code>--format</code> option for each subcommand such as <code>image</code> and <code>fs</code>.</p> <pre><code>$ trivy image --format spdx-json --output result.json alpine:3.15\n</code></pre> <pre><code>$ trivy fs --format cyclonedx --output result.json /app/myproject\n</code></pre>  Result <pre><code>{\n  \"bomFormat\": \"CycloneDX\",\n  \"specVersion\": \"1.3\",\n  \"serialNumber\": \"urn:uuid:2be5773d-7cd3-4b4b-90a5-e165474ddace\",\n  \"version\": 1,\n  \"metadata\": {\n    \"timestamp\": \"2022-02-22T15:11:40.270597Z\",\n    \"tools\": [\n      {\n        \"vendor\": \"aquasecurity\",\n        \"name\": \"trivy\",\n        \"version\": \"dev\"\n      }\n    ],\n    \"component\": {\n      \"bom-ref\": \"pkg:oci/alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300?repository_url=index.docker.io%2Flibrary%2Falpine&amp;arch=amd64\",\n      \"type\": \"container\",\n      \"name\": \"alpine:3.15\",\n      \"version\": \"\",\n      \"purl\": \"pkg:oci/alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300?repository_url=index.docker.io%2Flibrary%2Falpine&amp;arch=amd64\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:SchemaVersion\",\n          \"value\": \"2\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:ImageID\",\n          \"value\": \"sha256:c059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:RepoDigest\",\n          \"value\": \"alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:DiffID\",\n          \"value\": \"sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:RepoTag\",\n          \"value\": \"alpine:3.15\"\n        }\n      ]\n    }\n  },\n  \"components\": [\n    {\n      \"bom-ref\": \"pkg:apk/alpine/alpine-baselayout@3.2.0-r18?distro=3.15.0\",\n      \"type\": \"library\",\n      \"name\": \"alpine-baselayout\",\n      \"version\": \"3.2.0-r18\",\n      \"licenses\": [\n        {\n          \"expression\": \"GPL-2.0-only\"\n        }\n      ],\n      \"purl\": \"pkg:apk/alpine/alpine-baselayout@3.2.0-r18?distro=3.15.0\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:SrcName\",\n          \"value\": \"alpine-baselayout\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:SrcVersion\",\n          \"value\": \"3.2.0-r18\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDigest\",\n          \"value\": \"sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDiffID\",\n          \"value\": \"sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\"\n        }\n      ]\n    },\n    ...(snip)...\n    {\n      \"bom-ref\": \"pkg:apk/alpine/zlib@1.2.11-r3?distro=3.15.0\",\n      \"type\": \"library\",\n      \"name\": \"zlib\",\n      \"version\": \"1.2.11-r3\",\n      \"licenses\": [\n        {\n          \"expression\": \"Zlib\"\n        }\n      ],\n      \"purl\": \"pkg:apk/alpine/zlib@1.2.11-r3?distro=3.15.0\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:SrcName\",\n          \"value\": \"zlib\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:SrcVersion\",\n          \"value\": \"1.2.11-r3\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDigest\",\n          \"value\": \"sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDiffID\",\n          \"value\": \"sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\"\n        }\n      ]\n    },\n    {\n      \"bom-ref\": \"3da6a469-964d-4b4e-b67d-e94ec7c88d37\",\n      \"type\": \"operating-system\",\n      \"name\": \"alpine\",\n      \"version\": \"3.15.0\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:Type\",\n          \"value\": \"alpine\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:Class\",\n          \"value\": \"os-pkgs\"\n        }\n      ]\n    }\n  ],\n  \"dependencies\": [\n    {\n      \"ref\": \"3da6a469-964d-4b4e-b67d-e94ec7c88d37\",\n      \"dependsOn\": [\n        \"pkg:apk/alpine/alpine-baselayout@3.2.0-r18?distro=3.15.0\",\n        \"pkg:apk/alpine/alpine-keys@2.4-r1?distro=3.15.0\",\n        \"pkg:apk/alpine/apk-tools@2.12.7-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/busybox@1.34.1-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/ca-certificates-bundle@20191127-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/libc-utils@0.7.2-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/libcrypto1.1@1.1.1l-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/libretls@3.3.4-r2?distro=3.15.0\",\n        \"pkg:apk/alpine/libssl1.1@1.1.1l-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/musl@1.2.2-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/musl-utils@1.2.2-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/scanelf@1.3.3-r0?distro=3.15.0\",\n        \"pkg:apk/alpine/ssl_client@1.34.1-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/zlib@1.2.11-r3?distro=3.15.0\"\n      ]\n    },\n    {\n      \"ref\": \"pkg:oci/alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300?repository_url=index.docker.io%2Flibrary%2Falpine&amp;arch=amd64\",\n      \"dependsOn\": [\n        \"3da6a469-964d-4b4e-b67d-e94ec7c88d37\"\n      ]\n    }\n  ]\n}\n</code></pre>","title":"Reporting"},{"location":"docs/sbom/#scanning","text":"<p>Trivy also can take the following SBOM formats as an input and scan for vulnerabilities.</p> <ul> <li>CycloneDX</li> </ul> <p>To scan SBOM, you can use the <code>sbom</code> subcommand and pass the path to the SBOM.</p> <pre><code>$ trivy sbom /path/to/cyclonedx.json\n\ncyclonedx.json (alpine 3.7.1)\n=========================\nTotal: 3 (CRITICAL: 3)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Library   \u2502 Vulnerability  \u2502 Severity \u2502 Installed Version \u2502 Fixed Version \u2502                            Title                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 curl        \u2502 CVE-2018-14618 \u2502 CRITICAL \u2502 7.61.0-r0         \u2502 7.61.1-r0     \u2502 curl: NTLM password overflow via integer overflow            \u2502\n\u2502             \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2018-14618                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 libbz2      \u2502 CVE-2019-12900 \u2502 CRITICAL \u2502 1.0.6-r6          \u2502 1.0.6-r7      \u2502 bzip2: out-of-bounds write in function BZ2_decompress        \u2502\n\u2502             \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2019-12900                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 sqlite-libs \u2502 CVE-2019-8457  \u2502 CRITICAL \u2502 3.21.0-r1         \u2502 3.25.3-r1     \u2502 sqlite: heap out-of-bound read in function rtreenode()       \u2502\n\u2502             \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2019-8457                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>  <p>Note</p> <p>CycloneDX XML and SPDX are not supported at the moment.</p>","title":"Scanning"},{"location":"docs/sbom/cyclonedx/","text":"","title":"CycloneDX"},{"location":"docs/sbom/cyclonedx/#reporting","text":"<p>Trivy generates JSON reports in the CycloneDX format. Note that XML format is not supported at the moment.</p> <p>You can use the regular subcommands (like <code>image</code>, <code>fs</code> and <code>rootfs</code>) and specify <code>cyclonedx</code> with the <code>--format</code> option.</p> <p>CycloneDX can represent either or both SBOM or BOV.</p> <ul> <li>Software Bill of Materials (SBOM)</li> <li>Bill of Vulnerabilities (BOV)</li> </ul> <p>By default, <code>--format cyclonedx</code> represents SBOM and doesn't include vulnerabilities in the CycloneDX output.</p> <pre><code>$ trivy image --format cyclonedx --output result.json alpine:3.15\n2022-07-19T07:47:27.624Z        INFO    \"--format cyclonedx\" disables security checks. Specify \"--security-checks vuln\" explicitly if you want to include vulnerabilities in the CycloneDX report.\n</code></pre>  Result <pre><code>$ cat result.json | jq .\n{\n  \"bomFormat\": \"CycloneDX\",\n  \"specVersion\": \"1.4\",\n  \"serialNumber\": \"urn:uuid:2be5773d-7cd3-4b4b-90a5-e165474ddace\",\n  \"version\": 1,\n  \"metadata\": {\n    \"timestamp\": \"2022-02-22T15:11:40.270597Z\",\n    \"tools\": [\n      {\n        \"vendor\": \"aquasecurity\",\n        \"name\": \"trivy\",\n        \"version\": \"dev\"\n      }\n    ],\n    \"component\": {\n      \"bom-ref\": \"pkg:oci/alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300?repository_url=index.docker.io%2Flibrary%2Falpine&amp;arch=amd64\",\n      \"type\": \"container\",\n      \"name\": \"alpine:3.15\",\n      \"version\": \"\",\n      \"purl\": \"pkg:oci/alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300?repository_url=index.docker.io%2Flibrary%2Falpine&amp;arch=amd64\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:SchemaVersion\",\n          \"value\": \"2\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:ImageID\",\n          \"value\": \"sha256:c059bfaa849c4d8e4aecaeb3a10c2d9b3d85f5165c66ad3a4d937758128c4d18\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:RepoDigest\",\n          \"value\": \"alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:DiffID\",\n          \"value\": \"sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:RepoTag\",\n          \"value\": \"alpine:3.15\"\n        }\n      ]\n    }\n  },\n  \"components\": [\n    {\n      \"bom-ref\": \"pkg:apk/alpine/alpine-baselayout@3.2.0-r18?distro=3.15.0\",\n      \"type\": \"library\",\n      \"name\": \"alpine-baselayout\",\n      \"version\": \"3.2.0-r18\",\n      \"licenses\": [\n        {\n          \"expression\": \"GPL-2.0-only\"\n        }\n      ],\n      \"purl\": \"pkg:apk/alpine/alpine-baselayout@3.2.0-r18?distro=3.15.0\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:SrcName\",\n          \"value\": \"alpine-baselayout\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:SrcVersion\",\n          \"value\": \"3.2.0-r18\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDigest\",\n          \"value\": \"sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDiffID\",\n          \"value\": \"sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\"\n        }\n      ]\n    },\n    ...(snip)...\n    {\n      \"bom-ref\": \"pkg:apk/alpine/zlib@1.2.11-r3?distro=3.15.0\",\n      \"type\": \"library\",\n      \"name\": \"zlib\",\n      \"version\": \"1.2.11-r3\",\n      \"licenses\": [\n        {\n          \"expression\": \"Zlib\"\n        }\n      ],\n      \"purl\": \"pkg:apk/alpine/zlib@1.2.11-r3?distro=3.15.0\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:SrcName\",\n          \"value\": \"zlib\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:SrcVersion\",\n          \"value\": \"1.2.11-r3\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDigest\",\n          \"value\": \"sha256:59bf1c3509f33515622619af21ed55bbe26d24913cedbca106468a5fb37a50c3\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:LayerDiffID\",\n          \"value\": \"sha256:8d3ac3489996423f53d6087c81180006263b79f206d3fdec9e66f0e27ceb8759\"\n        }\n      ]\n    },\n    {\n      \"bom-ref\": \"3da6a469-964d-4b4e-b67d-e94ec7c88d37\",\n      \"type\": \"operating-system\",\n      \"name\": \"alpine\",\n      \"version\": \"3.15.0\",\n      \"properties\": [\n        {\n          \"name\": \"aquasecurity:trivy:Type\",\n          \"value\": \"alpine\"\n        },\n        {\n          \"name\": \"aquasecurity:trivy:Class\",\n          \"value\": \"os-pkgs\"\n        }\n      ]\n    }\n  ],\n  \"dependencies\": [\n    {\n      \"ref\": \"3da6a469-964d-4b4e-b67d-e94ec7c88d37\",\n      \"dependsOn\": [\n        \"pkg:apk/alpine/alpine-baselayout@3.2.0-r18?distro=3.15.0\",\n        \"pkg:apk/alpine/alpine-keys@2.4-r1?distro=3.15.0\",\n        \"pkg:apk/alpine/apk-tools@2.12.7-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/busybox@1.34.1-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/ca-certificates-bundle@20191127-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/libc-utils@0.7.2-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/libcrypto1.1@1.1.1l-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/libretls@3.3.4-r2?distro=3.15.0\",\n        \"pkg:apk/alpine/libssl1.1@1.1.1l-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/musl@1.2.2-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/musl-utils@1.2.2-r7?distro=3.15.0\",\n        \"pkg:apk/alpine/scanelf@1.3.3-r0?distro=3.15.0\",\n        \"pkg:apk/alpine/ssl_client@1.34.1-r3?distro=3.15.0\",\n        \"pkg:apk/alpine/zlib@1.2.11-r3?distro=3.15.0\"\n      ]\n    },\n    {\n      \"ref\": \"pkg:oci/alpine@sha256:21a3deaa0d32a8057914f36584b5288d2e5ecc984380bc0118285c70fa8c9300?repository_url=index.docker.io%2Flibrary%2Falpine&amp;arch=amd64\",\n      \"dependsOn\": [\n        \"3da6a469-964d-4b4e-b67d-e94ec7c88d37\"\n      ]\n    }\n  ],\n  \"vulnerabilities\": [\n    {\n      \"id\": \"CVE-2021-42386\",\n      \"source\": {\n        \"name\": \"alpine\",\n        \"url\": \"https://secdb.alpinelinux.org/\"\n      },\n      \"ratings\": [\n        {\n          \"source\": {\n            \"name\": \"nvd\"\n          },\n          \"score\": 7.2,\n          \"severity\": \"high\",\n          \"method\": \"CVSSv31\",\n          \"vector\": \"CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:H\"\n        },\n        {\n          \"source\": {\n            \"name\": \"nvd\"\n          },\n          \"score\": 6.5,\n          \"severity\": \"medium\",\n          \"method\": \"CVSSv2\",\n          \"vector\": \"AV:N/AC:L/Au:S/C:P/I:P/A:P\"\n        },\n        {\n          \"source\": {\n            \"name\": \"redhat\"\n          },\n          \"score\": 6.6,\n          \"severity\": \"medium\",\n          \"method\": \"CVSSv31\",\n          \"vector\": \"CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H\"\n        }\n      ],\n      \"cwes\": [\n        416\n      ],\n      \"description\": \"A use-after-free in Busybox's awk applet leads to denial of service and possibly code execution when processing a crafted awk pattern in the nvalloc function\",\n      \"advisories\": [\n        {\n          \"url\": \"https://access.redhat.com/security/cve/CVE-2021-42386\"\n        },\n        {\n          \"url\": \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-42386\"\n        }\n      ],\n      \"published\": \"2021-11-15 21:15:00 +0000 UTC\",\n      \"updated\": \"2022-01-04 17:14:00 +0000 UTC\",\n      \"affects\": [\n        {\n          \"ref\": \"pkg:apk/alpine/busybox@1.33.1-r3?distro=3.14.2\"\n        },\n        {\n          \"ref\": \"pkg:apk/alpine/ssl_client@1.33.1-r3?distro=3.14.2\"\n        }\n      ]\n    }\n  ]\n}\n</code></pre>  <p>If you want to include vulnerabilities, you can enable vulnerability scanning via <code>--security-checks vuln</code>.</p> <pre><code>$ trivy image --security-checks vuln --format cyclonedx --output result.json alpine:3.15\n</code></pre>","title":"Reporting"},{"location":"docs/sbom/cyclonedx/#scanning","text":"<p>Trivy can take CycloneDX as an input and scan for vulnerabilities. To scan SBOM, you can use the <code>sbom</code> subcommand and pass the path to your CycloneDX report. </p> <pre><code>$ trivy sbom /path/to/cyclonedx.json\n\ncyclonedx.json (alpine 3.7.1)\n=========================\nTotal: 3 (CRITICAL: 3)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   Library   \u2502 Vulnerability  \u2502 Severity \u2502 Installed Version \u2502 Fixed Version \u2502                            Title                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 curl        \u2502 CVE-2018-14618 \u2502 CRITICAL \u2502 7.61.0-r0         \u2502 7.61.1-r0     \u2502 curl: NTLM password overflow via integer overflow            \u2502\n\u2502             \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2018-14618                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 libbz2      \u2502 CVE-2019-12900 \u2502 CRITICAL \u2502 1.0.6-r6          \u2502 1.0.6-r7      \u2502 bzip2: out-of-bounds write in function BZ2_decompress        \u2502\n\u2502             \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2019-12900                   \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 sqlite-libs \u2502 CVE-2019-8457  \u2502 CRITICAL \u2502 3.21.0-r1         \u2502 3.25.3-r1     \u2502 sqlite: heap out-of-bound read in function rtreenode()       \u2502\n\u2502             \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2019-8457                    \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>  <p>Note</p> <p>If you want to generate a CycloneDX report from a CycloneDX input, please be aware that the output stores references to your original CycloneDX report and contains only detected vulnerabilities, not components. The report is called BOV.</p>","title":"Scanning"},{"location":"docs/sbom/spdx/","text":"<p>Trivy generates reports in the SPDX format.</p> <p>You can use the regular subcommands (like <code>image</code>, <code>fs</code> and <code>rootfs</code>) and specify <code>spdx</code> with the <code>--format</code> option.</p> <pre><code>$ trivy image --format spdx --output result.spdx alpine:3.15\n</code></pre>  Result <pre><code>$ cat result.spdx\nSPDXVersion: SPDX-2.2\nDataLicense: CC0-1.0\nSPDXID: SPDXRef-DOCUMENT\nDocumentName: alpine:3.15\nDocumentNamespace: http://aquasecurity.github.io/trivy/container_image/alpine:3.15-bebf6b19-a94c-4e2c-af44-065f63923f48\nCreator: Organization: aquasecurity\nCreator: Tool: trivy\nCreated: 2022-04-28T07:32:57.142806Z\n\n##### Package: zlib\n\nPackageName: zlib\nSPDXID: SPDXRef-12bc938ac028a5e1\nPackageVersion: 1.2.12-r0\nFilesAnalyzed: false\nPackageLicenseConcluded: Zlib\nPackageLicenseDeclared: Zlib\n\n##### Package: apk-tools\n\nPackageName: apk-tools\nSPDXID: SPDXRef-26c274652190d87f\nPackageVersion: 2.12.7-r3\nFilesAnalyzed: false\nPackageLicenseConcluded: GPL-2.0-only\nPackageLicenseDeclared: GPL-2.0-only\n\n##### Package: libretls\n\nPackageName: libretls\nSPDXID: SPDXRef-2b021966d19a8211\nPackageVersion: 3.3.4-r3\nFilesAnalyzed: false\nPackageLicenseConcluded: ISC AND (BSD-3-Clause OR MIT)\nPackageLicenseDeclared: ISC AND (BSD-3-Clause OR MIT)\n\n##### Package: busybox\n\nPackageName: busybox\nSPDXID: SPDXRef-317ce3476703f20d\nPackageVersion: 1.34.1-r5\nFilesAnalyzed: false\nPackageLicenseConcluded: GPL-2.0-only\nPackageLicenseDeclared: GPL-2.0-only\n\n##### Package: libcrypto1.1\n\nPackageName: libcrypto1.1\nSPDXID: SPDXRef-34f407fb4dbd67f4\nPackageVersion: 1.1.1n-r0\nFilesAnalyzed: false\nPackageLicenseConcluded: OpenSSL\nPackageLicenseDeclared: OpenSSL\n\n##### Package: libc-utils\n\nPackageName: libc-utils\nSPDXID: SPDXRef-4bbc1cb449d54083\nPackageVersion: 0.7.2-r3\nFilesAnalyzed: false\nPackageLicenseConcluded: BSD-2-Clause AND BSD-3-Clause\nPackageLicenseDeclared: BSD-2-Clause AND BSD-3-Clause\n\n##### Package: alpine-keys\n\nPackageName: alpine-keys\nSPDXID: SPDXRef-a3bdd174be1456b6\nPackageVersion: 2.4-r1\nFilesAnalyzed: false\nPackageLicenseConcluded: MIT\nPackageLicenseDeclared: MIT\n\n##### Package: ca-certificates-bundle\n\nPackageName: ca-certificates-bundle\nSPDXID: SPDXRef-ac6472ba26fb991c\nPackageVersion: 20211220-r0\nFilesAnalyzed: false\nPackageLicenseConcluded: MPL-2.0 AND MIT\nPackageLicenseDeclared: MPL-2.0 AND MIT\n\n##### Package: libssl1.1\n\nPackageName: libssl1.1\nSPDXID: SPDXRef-b2d1b1d70fe90f7d\nPackageVersion: 1.1.1n-r0\nFilesAnalyzed: false\nPackageLicenseConcluded: OpenSSL\nPackageLicenseDeclared: OpenSSL\n\n##### Package: scanelf\n\nPackageName: scanelf\nSPDXID: SPDXRef-c617077ba6649520\nPackageVersion: 1.3.3-r0\nFilesAnalyzed: false\nPackageLicenseConcluded: GPL-2.0-only\nPackageLicenseDeclared: GPL-2.0-only\n\n##### Package: musl\n\nPackageName: musl\nSPDXID: SPDXRef-ca80b810029cde0e\nPackageVersion: 1.2.2-r7\nFilesAnalyzed: false\nPackageLicenseConcluded: MIT\nPackageLicenseDeclared: MIT\n\n##### Package: alpine-baselayout\n\nPackageName: alpine-baselayout\nSPDXID: SPDXRef-d782e64751ba9faa\nPackageVersion: 3.2.0-r18\nFilesAnalyzed: false\nPackageLicenseConcluded: GPL-2.0-only\nPackageLicenseDeclared: GPL-2.0-only\n\n##### Package: musl-utils\n\nPackageName: musl-utils\nSPDXID: SPDXRef-e5e8a237f6162e22\nPackageVersion: 1.2.2-r7\nFilesAnalyzed: false\nPackageLicenseConcluded: MIT BSD GPL2+\nPackageLicenseDeclared: MIT BSD GPL2+\n\n##### Package: ssl_client\n\nPackageName: ssl_client\nSPDXID: SPDXRef-fdf0ce84f6337be4\nPackageVersion: 1.34.1-r5\nFilesAnalyzed: false\nPackageLicenseConcluded: GPL-2.0-only\nPackageLicenseDeclared: GPL-2.0-only\n</code></pre>  <p>SPDX-JSON format is also supported by using <code>spdx-json</code> with the <code>--format</code> option.</p> <pre><code>$ trivy image --format spdx-json --output result.spdx.json alpine:3.15\n</code></pre>  Result <pre><code>$ cat result.spdx.json | jq .\n{\n    \"SPDXID\": \"SPDXRef-DOCUMENT\",\n    \"creationInfo\": {\n        \"created\": \"2022-04-28T08:16:55.328255Z\",\n        \"creators\": [\n            \"Tool: trivy\",\n            \"Organization: aquasecurity\"\n        ]\n    },\n    \"dataLicense\": \"CC0-1.0\",\n    \"documentNamespace\": \"http://aquasecurity.github.io/trivy/container_image/alpine:3.15-d9549e3a-a4c5-4ee3-8bde-8c78d451fbe7\",\n    \"name\": \"alpine:3.15\",\n    \"packages\": [\n        {\n            \"SPDXID\": \"SPDXRef-12bc938ac028a5e1\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"Zlib\",\n            \"licenseDeclared\": \"Zlib\",\n            \"name\": \"zlib\",\n            \"versionInfo\": \"1.2.12-r0\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-26c274652190d87f\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"GPL-2.0-only\",\n            \"licenseDeclared\": \"GPL-2.0-only\",\n            \"name\": \"apk-tools\",\n            \"versionInfo\": \"2.12.7-r3\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-2b021966d19a8211\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"ISC AND (BSD-3-Clause OR MIT)\",\n            \"licenseDeclared\": \"ISC AND (BSD-3-Clause OR MIT)\",\n            \"name\": \"libretls\",\n            \"versionInfo\": \"3.3.4-r3\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-317ce3476703f20d\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"GPL-2.0-only\",\n            \"licenseDeclared\": \"GPL-2.0-only\",\n            \"name\": \"busybox\",\n            \"versionInfo\": \"1.34.1-r5\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-34f407fb4dbd67f4\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"OpenSSL\",\n            \"licenseDeclared\": \"OpenSSL\",\n            \"name\": \"libcrypto1.1\",\n            \"versionInfo\": \"1.1.1n-r0\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-4bbc1cb449d54083\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"BSD-2-Clause AND BSD-3-Clause\",\n            \"licenseDeclared\": \"BSD-2-Clause AND BSD-3-Clause\",\n            \"name\": \"libc-utils\",\n            \"versionInfo\": \"0.7.2-r3\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-a3bdd174be1456b6\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"MIT\",\n            \"licenseDeclared\": \"MIT\",\n            \"name\": \"alpine-keys\",\n            \"versionInfo\": \"2.4-r1\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-ac6472ba26fb991c\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"MPL-2.0 AND MIT\",\n            \"licenseDeclared\": \"MPL-2.0 AND MIT\",\n            \"name\": \"ca-certificates-bundle\",\n            \"versionInfo\": \"20211220-r0\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-b2d1b1d70fe90f7d\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"OpenSSL\",\n            \"licenseDeclared\": \"OpenSSL\",\n            \"name\": \"libssl1.1\",\n            \"versionInfo\": \"1.1.1n-r0\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-c617077ba6649520\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"GPL-2.0-only\",\n            \"licenseDeclared\": \"GPL-2.0-only\",\n            \"name\": \"scanelf\",\n            \"versionInfo\": \"1.3.3-r0\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-ca80b810029cde0e\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"MIT\",\n            \"licenseDeclared\": \"MIT\",\n            \"name\": \"musl\",\n            \"versionInfo\": \"1.2.2-r7\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-d782e64751ba9faa\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"GPL-2.0-only\",\n            \"licenseDeclared\": \"GPL-2.0-only\",\n            \"name\": \"alpine-baselayout\",\n            \"versionInfo\": \"3.2.0-r18\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-e5e8a237f6162e22\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"MIT BSD GPL2+\",\n            \"licenseDeclared\": \"MIT BSD GPL2+\",\n            \"name\": \"musl-utils\",\n            \"versionInfo\": \"1.2.2-r7\"\n        },\n        {\n            \"SPDXID\": \"SPDXRef-fdf0ce84f6337be4\",\n            \"filesAnalyzed\": false,\n            \"licenseConcluded\": \"GPL-2.0-only\",\n            \"licenseDeclared\": \"GPL-2.0-only\",\n            \"name\": \"ssl_client\",\n            \"versionInfo\": \"1.34.1-r5\"\n        }\n    ],\n    \"spdxVersion\": \"SPDX-2.2\"\n}\n</code></pre>","title":"SPDX"},{"location":"docs/secret/configuration/","text":"<p>Trivy tries to load <code>trivy-secret.yaml</code> in the current directory by default. If the file doesn't exist, only built-in rules are used. You can customize the config file path via the <code>--secret-config</code> flag.</p> <p>You can see the example here.</p>","title":"Configuration"},{"location":"docs/secret/configuration/#custom-rules","text":"<p>Trivy allows defining custom rules. You can see an example.</p> <pre><code>rules:\n  - id: rule1\n    category: general\n    title: Generic Rule\n    severity: HIGH\n    path: .*\\.sh\n    keywords:\n      - secret\n    regex: (?i)(?P&lt;key&gt;(secret))(=|:).{0,5}['\"](?P&lt;secret&gt;[0-9a-zA-Z\\-_=]{8,64})['\"]\n    secret-group-name: secret\n    allow-rules:\n      - id: skip-text\n        description: skip text files\n        path: .*\\.txt\n</code></pre>  <code>id</code> (required)  <ul> <li>Unique identifier for this rule.</li> </ul>  <code>category</code> (required)  <ul> <li>String used for metadata and reporting purposes.</li> </ul>  <code>title</code> (required)  <ul> <li>Short human-readable title of the rule.</li> </ul>  <code>severity</code> (required)  <ul> <li>How critical this rule is.</li> <li>Allowed values:<ul> <li>CRITICAL</li> <li>HIGH</li> <li>MEDIUM</li> <li>LOW</li> </ul> </li> </ul>  <code>regex</code> (required)  <ul> <li>Golang regular expression used to detect secrets.</li> </ul>  <code>path</code> (optional)  <ul> <li>Golang regular expression used to match paths.</li> </ul>  <code>keywords</code> (optional, recommended)  <ul> <li>Keywords are used for pre-regex check filtering.</li> <li>Rules that contain keywords will perform a quick string compare check to make sure the keyword(s) are in the content being scanned.</li> <li>Ideally these values should either be part of the identifier or unique strings specific to the rule's regex.</li> <li>It is recommended to define for better performance.</li> </ul>  <code>allow-rules</code> (optional)  <ul> <li>Allow rules for a single rule to reduce false positives with known secrets.</li> <li>The details are below.</li> </ul>","title":"Custom Rules"},{"location":"docs/secret/configuration/#allow-rules","text":"<p>If the detected secret is matched with the specified <code>regex</code>, then that secret will be skipped and not detected. The same logic applies for <code>path</code>.</p> <p><code>allow-rules</code> can be defined globally and per each rule. The fields are the same.</p> <pre><code>rules:\n  - id: rule1\n    category: general\n    title: Generic Rule\n    severity: HIGH\n    regex: (?i)(?P&lt;key&gt;(secret))(=|:).{0,5}['\"](?P&lt;secret&gt;[0-9a-zA-Z\\-_=]{8,64})['\"]\n    allow-rules:\n      - id: skip-text\n        description: skip text files\n        path: .*\\.txt\nallow-rules:\n  - id: social-security-number\n    description: skip social security number\n    regex: 219-09-9999\n</code></pre>  <code>id</code> (required)  <ul> <li>Unique identifier for this allow rule.</li> </ul>  <code>description</code> (optional)  <ul> <li>Short human-readable description of this allow rule.</li> </ul>  <code>regex</code> (optional)  <ul> <li>Golang regular expression used to allow detected secrets.</li> <li><code>regex</code> or <code>path</code> must be specified.</li> </ul>  <code>path</code> (optional)  <ul> <li>Golang regular expression used to allow matched paths.</li> <li><code>regex</code> or <code>path</code> must be specified.</li> </ul>","title":"Allow Rules"},{"location":"docs/secret/configuration/#enable-rules","text":"<p>Trivy provides plenty of out-of-box rules and allow rules, but you may not need all of them. In that case, <code>enable-builin-rules</code> will be helpful. If you just need AWS secret detection, you can enable only relevant rules as shown below. It specifies AWS-related rule IDs in <code>enable-builin-rules</code>. All other rules are disabled, so the scanning will be much faster. We would strongly recommend using this option if you don't need all rules.</p> <p>You can see a full list of built-in rule IDs and [built-in allow rule IDs][builtin-allow].</p> <pre><code>enable-builtin-rules:\n  - aws-access-key-id\n  - aws-account-id\n  - aws-secret-access-key\n</code></pre>","title":"Enable Rules"},{"location":"docs/secret/configuration/#disable-rules","text":"<p>Trivy offers built-in rules and allow rules, but you may want to disable some of them. For example, you don't use Slack, so Slack doesn't have to be scanned. You can specify the Slack rule IDs, <code>slack-access-token</code> and <code>slack-web-hook</code> in <code>disable-rules</code> so that those rules will be disabled for less false positives.</p> <p>You should specify either <code>enable-builin-rules</code> or <code>disable-rules</code>. If they both are specified, <code>disable-rules</code> takes precedence. In case <code>github-pat</code> is specified in <code>enable-builin-rules</code> and <code>disable-rules</code>, it will be disabled.</p> <p>In addition, there are some allow rules. Markdown files are ignored by default, but you may want to scan markdown files as well. You can disable the allow rule by adding <code>markdown</code> to <code>disable-allow-rules</code>.</p> <p>You can see a full list of built-in rule IDs and [built-in allow rule IDs][builtin-allow].</p> <pre><code>disable-rules:\n  - slack-access-token\n  - slack-web-hook\ndisable-allow-rules:\n  - markdown\n</code></pre>","title":"Disable Rules"},{"location":"docs/secret/examples/","text":"<p>Also see quick start.</p>","title":"Examples"},{"location":"docs/secret/examples/#skip-directories","text":"<p>Trivy traversals directories and scans all files except those matching the built-in allow rules by default. If your have a lot of files in your container image or project, the scanning takes time. To make it faster, you can skip traversal in the specific directory. Also, it would be helpful if your project contains secrets and certificates for testing.</p> <pre><code>$ trivy image --skip-dirs /var/lib --skip-dirs /var/log YOUR_IMAGE\n</code></pre> <pre><code>$ trivy fs --skip-dirs ./my-test-dir --skip-dirs ./my-testing-cert/ /path/to/your_project\n</code></pre> <p><code>--skip-fles</code> also works similarly.</p>","title":"Skip Directories"},{"location":"docs/secret/examples/#filter-by-severity","text":"<p>Use <code>--severity</code> option.</p> <pre><code>$ trivy fs --severity CRITICAL ./\n\napp/secret.sh (secrets)\n=======================\nTotal: 1 (CRITICAL: 1)\n\n+----------+-------------------+----------+---------+--------------------------------+\n| CATEGORY |    DESCRIPTION    | SEVERITY | LINE NO |             MATCH              |\n+----------+-------------------+----------+---------+--------------------------------+\n|   AWS    | AWS Access Key ID | CRITICAL |   10    | export AWS_ACCESS_KEY_ID=***** |\n+----------+-------------------+----------+---------+--------------------------------+\n</code></pre>","title":"Filter by severity"},{"location":"docs/secret/examples/#disable-secret-scanning","text":"<p>If you need vulnerability scanning only, you can disable secret scanning via the <code>--security-checks</code> flag.</p> <pre><code>$ trivy image --security-checks vuln alpine:3.15\n</code></pre>","title":"Disable secret scanning"},{"location":"docs/secret/examples/#with-configuration-file","text":"<p><code>trivy-secret.yaml</code> in the working directory is loaded by default.</p> <pre><code>$ cat trivy-secret.yaml\nrules:\n  - id: rule1\n    category: general\n    title: Generic Rule\n    severity: HIGH\n    regex: (?i)(?P&lt;key&gt;(secret))(=|:).{0,5}['\"](?P&lt;secret&gt;[0-9a-zA-Z\\-_=]{8,64})['\"]\nallow-rules:\n  - id: social-security-number\n    description: skip social security number\n    regex: 219-09-9999\n  - id: log-dir\n    description: skip log directory\n    path: ^\\/var\\/log\\/\ndisable-rules:\n  - slack-access-token\n  - slack-web-hook\ndisable-allow-rules:\n  - markdown\n\n# The following command automatically loads the above configuration.\n$ trivy image YOUR_IMAGE\n</code></pre> <p>Also, you can customize the config file path via <code>--secret-config</code>.</p> <pre><code>$ cat ./secret-config/trivy.yaml\nrules:\n  - id: rule1\n    category: general\n    title: Generic Rule\n    severity: HIGH\n    regex: (?i)(?P&lt;key&gt;(secret))(=|:).{0,5}['\"](?P&lt;secret&gt;[0-9a-zA-Z\\-_=]{8,64})['\"]\n    allow-rules:\n      - id: skip-text\n        description: skip text files\n        path: .*\\.txt\nenable-builtin-rules:\n  - aws-access-key-id\n  - aws-account-id\n  - aws-secret-access-key\ndisable-allow-rules:\n  - usr-dirs\n\n# Pass the above config with `--secret-config`.\n$ trivy fs --secret-config ./secret-config/trivy.yaml /path/to/your_project\n</code></pre>","title":"With configuration file"},{"location":"docs/secret/scanning/","text":"<p>Trivy scans any container image, filesystem and git repository to detect exposed secrets like passwords, api keys, and tokens. Secret scanning is enabled by default.</p> <p>Trivy will scan every plaintext file, according to builtin rules or configuration. There are plenty of builtin rules:</p> <ul> <li>AWS access key</li> <li>GCP service account</li> <li>GitHub personal access token</li> <li>GitLab personal access token</li> <li>Slack access token</li> <li>etc.</li> </ul> <p>You can see a full list of built-in rules and built-in allow rules.</p>  <p>Tip</p> <p>If your secret is not detected properly, please make sure that your file including the secret is not in the allowed paths. You can disable allow rules via disable-allow-rules.</p>","title":"Secret Scanning"},{"location":"docs/secret/scanning/#quick-start","text":"<p>This section shows how to scan secrets in container image and filesystem. Other subcommands should be the same.</p>","title":"Quick start"},{"location":"docs/secret/scanning/#container-image","text":"<p>Specify an image name.</p> <pre><code>$ trivy image myimage:1.0.0\n2022-04-21T18:56:44.099+0300    INFO    Detected OS: alpine\n2022-04-21T18:56:44.099+0300    INFO    Detecting Alpine vulnerabilities...\n2022-04-21T18:56:44.101+0300    INFO    Number of language-specific files: 0\n\nmyimage:1.0.0 (alpine 3.15.0)\n=============================\nTotal: 6 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)\n\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n|   LIBRARY    | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |                 TITLE                 |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n| busybox      | CVE-2022-28391   | CRITICAL | 1.34.1-r3         | 1.34.1-r5     | CVE-2022-28391 affecting              |\n|              |                  |          |                   |               | package busybox 1.35.0                |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2022-28391 |\n+--------------+------------------|          |-------------------+---------------+---------------------------------------+\n| ssl_client   | CVE-2022-28391   |          | 1.34.1-r3         | 1.34.1-r5     | CVE-2022-28391 affecting              |\n|              |                  |          |                   |               | package busybox 1.35.0                |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2022-28391 |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n\napp/secret.sh (secrets)\n=======================\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)\n\n+----------+-------------------+----------+---------+--------------------------------+\n| CATEGORY |    DESCRIPTION    | SEVERITY | LINE NO |             MATCH              |\n+----------+-------------------+----------+---------+--------------------------------+\n|   AWS    | AWS Access Key ID | CRITICAL |   10    | export AWS_ACCESS_KEY_ID=***** |\n+----------+-------------------+----------+---------+--------------------------------+\n</code></pre>  <p>Tip</p> <p>Trivy tries to detect a base image and skip those layers for secret scanning. A base image usually contains a lot of files and makes secret scanning much slower. If a secret is not detected properly, you can see base layers with the <code>--debug</code> flag.</p>","title":"Container image"},{"location":"docs/secret/scanning/#filesystem","text":"<pre><code>$ trivy fs /path/to/your_project\n...(snip)...\n\ncerts/key.pem (secrets)\n========================\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1, CRITICAL: 0)\n\n+----------------------+------------------------+----------+---------+---------------------------------+\n|       CATEGORY       |      DESCRIPTION       | SEVERITY | LINE NO |              MATCH              |\n+----------------------+------------------------+----------+---------+---------------------------------+\n| AsymmetricPrivateKey | Asymmetric Private Key |   HIGH   |    1    | -----BEGIN RSA PRIVATE KEY----- |\n+----------------------+------------------------+----------+---------+---------------------------------+\n</code></pre>  <p>Tip</p> <p>Your project may have some secrets for testing. You can skip them with <code>--skip-dirs</code> or <code>--skip-files</code>. We would recommend specifying these options so that the secret scanning can be faster if those files don't need to be scanned. Also, you can specify paths to be allowed in a configuration file. See the detail here.   </p>","title":"Filesystem"},{"location":"docs/secret/scanning/#configuration","text":"<p>Trivy has a set of builtin rules for secret scanning, which can be extended or modified by a configuration file.</p>","title":"Configuration"},{"location":"docs/secret/scanning/#recommendation","text":"<p>We would recommend specifying <code>--skip-dirs</code> for faster secret scanning. In container image scanning, Trivy walks the file tree rooted  <code>/</code> and scans all the files other than built-in allowed paths. It will take a while if your image contains a lot of files even though Trivy tries to avoid scanning layers from a base image. If you want to make scanning faster, <code>--skip-dirs</code> and <code>--skip-files</code> helps so that Trivy will skip scanning those files and directories. The usage examples are here.</p> <p><code>allow-rules</code> is also helpful. See the allow-rules section.</p> <p>In addition, all the built-in rules are enabled by default, so it takes some time to scan all of them. If you don't need all those rules, you can use <code>enable-builtin-rules</code> or <code>disable-rules</code> in the configuration file. You should use <code>enable-builin-rules</code> if you need only AWS secret detection, for example. All rules are disabled except for the ones you specify, so it runs very fast. On the other hand, you should use <code>disable-rules</code> if you just want to disable some built-in rules. See the enable-rules and disable-rules sections for the detail.</p> <p>If you don't need secret scanning, you can disable it via the <code>--security-checks</code> flag.</p> <pre><code>$ trivy image --security-checks vuln alpine:3.15\n</code></pre>","title":"Recommendation"},{"location":"docs/secret/scanning/#credit","text":"<p>This feature is inspired by gitleaks. </p>","title":"Credit"},{"location":"docs/vulnerability/distributions/","text":"","title":"Distributions"},{"location":"docs/vulnerability/distributions/#cbl-mariner","text":"<p>Trivy scans CBL-Mariner.</p>","title":"CBL-Mariner"},{"location":"docs/vulnerability/distributions/#support","text":"<p>The following table provides an outline of the features Trivy offers.</p>    Version Container image Virtual machine Distroless Multi-arch Unfixed support     1.0 \u2714 \u2714 \u2714 amd64, arm64 \u2714   2.0 \u2714 \u2714 \u2714 amd64, arm64 \u2714","title":"Support"},{"location":"docs/vulnerability/distributions/#examples","text":"imagefs   <pre><code>\u279c trivy image mcr.microsoft.com/cbl-mariner/base/core:2.0\n2022-07-27T14:48:20.355+0600    INFO    Detected OS: cbl-mariner\n2022-07-27T14:48:20.355+0600    INFO    Detecting CBL-Mariner vulnerabilities...\n2022-07-27T14:48:20.356+0600    INFO    Number of language-specific files: 0\n\nmcr.microsoft.com/cbl-mariner/base/core:2.0 (cbl-mariner 2.0.20220527)\n\nTotal: 33 (UNKNOWN: 0, LOW: 0, MEDIUM: 15, HIGH: 13, CRITICAL: 5)\n</code></pre>   <pre><code>\u279c docker run  -it --rm --entrypoint bin/bash mcr.microsoft.com/cbl-mariner/base/core:2.0 \n\nroot [ / ]# tdnf -y install ca-certificates\n...\n\nroot [ / ]# rpm -ivh https://github.com/aquasecurity/trivy/releases/download/v0.30.4/trivy_0.30.4_Linux-64bit.rpm\n...\n\nroot [ / ]# trivy fs /\n2022-07-27T09:30:06.815Z    INFO    Need to update DB\n2022-07-27T09:30:06.815Z    INFO    DB Repository: ghcr.io/aquasecurity/trivy-db\n2022-07-27T09:30:06.815Z    INFO    Downloading DB...\n33.25 MiB / 33.25 MiB [------------------------------] 100.00% 4.20 MiB p/s 8.1s\n2022-07-27T09:30:21.756Z    INFO    Vulnerability scanning is enabled\n2022-07-27T09:30:21.756Z    INFO    Secret scanning is enabled\n2022-07-27T09:30:21.756Z    INFO    If your scanning is slow, please try '--security-checks vuln' to disable secret scanning\n2022-07-27T09:30:21.756Z    INFO    Please see also https://aquasecurity.github.io/trivy/0.30.4/docs/secret/scanning/#recommendation for faster secret detection\n2022-07-27T09:30:22.205Z    INFO    Detected OS: cbl-mariner\n2022-07-27T09:30:22.205Z    INFO    Detecting CBL-Mariner vulnerabilities...\n2022-07-27T09:30:22.205Z    INFO    Number of language-specific files: 0\n\n40ba9a55397c (cbl-mariner 2.0.20220527)\n\nTotal: 33 (UNKNOWN: 0, LOW: 0, MEDIUM: 15, HIGH: 13, CRITICAL: 5)\n</code></pre>","title":"Examples"},{"location":"docs/vulnerability/distributions/#data-source","text":"<p>See here.</p>","title":"Data source"},{"location":"docs/vulnerability/detection/data-source/","text":"OS Source     Arch Linux Vulnerable Issues   Alpine Linux secdb   Amazon Linux Amazon Linux Security Center   Debian Security Bug Tracker    OVAL   Ubuntu Ubuntu CVE Tracker   RHEL/CentOS OVAL    Security Data   AlmaLinux AlmaLinux Product Errata   Rocky Linux Rocky Linux UpdateInfo   Oracle Linux OVAL   CBL-Mariner OVAL   OpenSUSE/SLES CVRF   Photon OS Photon Security Advisory","title":"OS"},{"location":"docs/vulnerability/detection/data-source/#programming-language","text":"Language Source Commercial Use Delay1     PHP PHP Security Advisories Database \u2705 -    GitHub Advisory Database (Composer) \u2705 -   Python GitHub Advisory Database (pip) \u2705 -    Open Source Vulnerabilities (PyPI) \u2705 -   Ruby Ruby Advisory Database \u2705 -    GitHub Advisory Database (RubyGems) \u2705 -   Node.js Ecosystem Security Working Group \u2705 -    GitHub Advisory Database (npm) \u2705 -   Java GitLab Advisories Community \u2705 1 month    GitHub Advisory Database (Maven) \u2705 -   Go GitLab Advisories Community \u2705 1 month    The Go Vulnerability Database \u2705 -   Rust Open Source Vulnerabilities (crates.io) \u2705 -   .NET GitHub Advisory Database (NuGet) \u2705 -","title":"Programming Language"},{"location":"docs/vulnerability/detection/data-source/#others","text":"Name Source     National Vulnerability Database NVD","title":"Others"},{"location":"docs/vulnerability/detection/data-source/#data-source-selection","text":"<p>Trivy only consumes security advisories from the sources listed in the following tables.</p> <p>As for packages installed from OS package managers (<code>dpkg</code>, <code>yum</code>, <code>apk</code>, etc.), Trivy uses the advisory database from the appropriate OS vendor.</p> <p>For example: for a python package installed from <code>yum</code> (Amazon linux), Trivy will only get advisories from [ALAS][amazon2]. But for a python package installed from another source (e.g. <code>pip</code>), Trivy will get advisories from the <code>GitLab</code> and <code>GitHub</code> databases.</p> <p>This advisory selection is essential to avoid getting false positives because OS vendors usually backport upstream fixes, and the fixed version can be different from the upstream fixed version. The severity is from the selected data source. If the data source does not provide severity, it falls back to NVD, and if NVD does not have severity, it will be UNKNOWN.</p>   <ol> <li> <p>Intentional delay between vulnerability disclosure and registration in the DB\u00a0\u21a9</p> </li> </ol>","title":"Data source selection"},{"location":"docs/vulnerability/detection/language/","text":"<p><code>Trivy</code> automatically detects the following files in the container and scans vulnerabilities in the application dependencies.</p>    Language File Image8 Rootfs9 Filesystem10 Repository11 Dev dependencies     Ruby Gemfile.lock - - \u2705 \u2705 included    gemspec \u2705 \u2705 - - included   Python Pipfile.lock - - \u2705 \u2705 excluded    poetry.lock - - \u2705 \u2705 included    requirements.txt - - \u2705 \u2705 included    egg package1 \u2705 \u2705 - - excluded    wheel package2 \u2705 \u2705 - - excluded   PHP composer.lock \u2705 \u2705 \u2705 \u2705 excluded   Node.js package-lock.json - - \u2705 \u2705 excluded    yarn.lock - - \u2705 \u2705 included    pnpm-lock.yaml - - \u2705 \u2705 excluded    package.json \u2705 \u2705 - - excluded   .NET packages.lock.json \u2705 \u2705 \u2705 \u2705 included    packages.config \u2705 \u2705 \u2705 \u2705 excluded    .deps.json \u2705 \u2705 \u2705 \u2705 excluded   Java JAR/WAR/PAR/EAR34 \u2705 \u2705 - - included    pom.xml5 - - \u2705 \u2705 excluded   Go Binaries built by Go6 \u2705 \u2705 - - excluded    go.mod7 - - \u2705 \u2705 included   Rust Cargo.lock \u2705 \u2705 \u2705 \u2705 included    <p>The path of these files does not matter.</p> <p>Example: Dockerfile</p>   <ol> <li> <p><code>*.egg-info</code>, <code>*.egg-info/PKG-INFO</code>, <code>*.egg</code> and <code>EGG-INFO/PKG-INFO</code> \u21a9</p> </li> <li> <p><code>.dist-info/META-DATA</code> \u21a9</p> </li> <li> <p><code>*.jar</code>, <code>*.war</code>, <code>*.par</code> and <code>*.ear</code> \u21a9</p> </li> <li> <p>It requires Internet access\u00a0\u21a9</p> </li> <li> <p>It requires Internet access when the POM doesn't exist in your local repository\u00a0\u21a9</p> </li> <li> <p>UPX-compressed binaries don't work\u00a0\u21a9</p> </li> <li> <p>If smaller than go 1.17, go.sum is also required\u00a0\u21a9</p> </li> <li> <p>\u2705 means \"enabled\" and <code>-</code> means \"disabled\" in the image scanning\u00a0\u21a9</p> </li> <li> <p>\u2705 means \"enabled\" and <code>-</code> means \"disabled\" in the rootfs scanning\u00a0\u21a9</p> </li> <li> <p>\u2705 means \"enabled\" and <code>-</code> means \"disabled\" in the filesystem scanning\u00a0\u21a9</p> </li> <li> <p>\u2705 means \"enabled\" and <code>-</code> means \"disabled\" in the git repository scanning\u00a0\u21a9</p> </li> </ol>","title":"Language-specific Packages"},{"location":"docs/vulnerability/detection/os/","text":"<p>The unfixed/unfixable vulnerabilities mean that the patch has not yet been provided on their distribution. Trivy doesn't support self-compiled packages/binaries, but official packages provided by vendors such as Red Hat and Debian.</p>    OS Supported Versions Target Packages Detection of unfixed vulnerabilities     Alpine Linux 2.2 - 2.7, 3.0 - 3.16, edge Installed by apk NO   Red Hat Universal Base Image1 7, 8, 9 Installed by yum/rpm YES   Red Hat Enterprise Linux 6, 7, 8 Installed by yum/rpm YES   CentOS 6, 7, 8 Installed by yum/rpm YES   AlmaLinux 8 Installed by yum/rpm NO   Rocky Linux 8 Installed by yum/rpm NO   Oracle Linux 5, 6, 7, 8 Installed by yum/rpm NO   CBL-Mariner 1.0, 2.0 Installed by yum/rpm YES   Amazon Linux 1, 2, 2022 Installed by yum/rpm NO   openSUSE Leap 42, 15 Installed by zypper/rpm NO   SUSE Enterprise Linux 11, 12, 15 Installed by zypper/rpm NO   Photon OS 1.0, 2.0, 3.0, 4.0 Installed by tdnf/yum/rpm NO   Debian GNU/Linux wheezy, jessie, stretch, buster, bullseye Installed by apt/apt-get/dpkg YES   Ubuntu All versions supported by Canonical Installed by apt/apt-get/dpkg YES   Distroless2 Any Installed by apt/apt-get/dpkg YES      <ol> <li> <p>https://developers.redhat.com/products/rhel/ubi\u00a0\u21a9</p> </li> <li> <p>https://github.com/GoogleContainerTools/distroless\u00a0\u21a9</p> </li> </ol>","title":"Supported OS"},{"location":"docs/vulnerability/detection/supported/","text":"","title":"Supported"},{"location":"docs/vulnerability/detection/supported/#container-runtime","text":"<ul> <li>Docker Engine</li> <li>Podman</li> <li>containerd</li> </ul>","title":"Container Runtime"},{"location":"docs/vulnerability/detection/supported/#container-registry","text":"<ul> <li>Docker Registry HTTP API V2</li> <li>OCI Distribution Specification</li> </ul>","title":"Container Registry"},{"location":"docs/vulnerability/detection/supported/#image-tar-formats","text":"<p>Trivy scans a tar image with the following format.</p> <ul> <li>Docker Image Specification<ul> <li>Moby Project</li> <li>Buildah</li> <li>Podman</li> <li>img</li> </ul> </li> <li>Kaniko</li> </ul>","title":"Image Tar Formats"},{"location":"docs/vulnerability/detection/supported/#image-layout","text":"<ul> <li>OCI Image Format Specification</li> </ul>","title":"Image Layout"},{"location":"docs/vulnerability/examples/cache/","text":"","title":"Cache"},{"location":"docs/vulnerability/examples/cache/#clear-caches","text":"<p>The <code>--clear-cache</code> option removes caches.</p> <p>The scan is not performed.</p> <pre><code>$ trivy image --clear-cache\n</code></pre>  Result <pre><code>2019-11-15T15:13:26.209+0200    INFO    Reopening vulnerability DB\n2019-11-15T15:13:26.209+0200    INFO    Removing image caches...\n</code></pre>","title":"Clear Caches"},{"location":"docs/vulnerability/examples/cache/#cache-directory","text":"<p>Specify where the cache is stored with <code>--cache-dir</code>.</p> <pre><code>$ trivy --cache-dir /tmp/trivy/ image python:3.4-alpine3.9\n</code></pre>","title":"Cache Directory"},{"location":"docs/vulnerability/examples/cache/#cache-backend","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>Trivy supports local filesystem and Redis as the cache backend. This option is useful especially for client/server mode.</p> <p>Two options:</p> <ul> <li><code>fs</code><ul> <li>the cache path can be specified by <code>--cache-dir</code></li> </ul> </li> <li><code>redis://</code><ul> <li><code>redis://[HOST]:[PORT]</code></li> <li>TTL can be configured via <code>--cache-ttl</code></li> </ul> </li> </ul> <pre><code>$ trivy server --cache-backend redis://localhost:6379\n</code></pre> <p>Trivy also support for connecting to Redis using TLS, you only need to specify <code>--redis-ca</code> , <code>--redis-cert</code> , and <code>--redis-key</code> option.</p> <pre><code>$ trivy server --cache-backend redis://localhost:6379 \\\n  --redis-ca /path/to/ca-cert.pem \\\n  --redis-cert /path/to/cert.pem \\\n  --redis-key /path/to/key.pem\n</code></pre> <p>TLS option for redis is hidden from Trivy command-line flag, but you still can use it.</p>","title":"Cache Backend"},{"location":"docs/vulnerability/examples/db/","text":"","title":"Vulnerability DB"},{"location":"docs/vulnerability/examples/db/#skip-update-of-vulnerability-db","text":"<p><code>Trivy</code> downloads its vulnerability database every 12 hours when it starts operating. This is usually fast, as the size of the DB is only 10~30MB. But if you want to skip even that, use the <code>--skip-db-update</code> option.</p> <pre><code>$ trivy image --skip-db-update python:3.4-alpine3.9\n</code></pre>  Result <pre><code>2019-05-16T12:48:08.703+0900    INFO    Detecting Alpine vulnerabilities...\n\npython:3.4-alpine3.9 (alpine 3.9.2)\n===================================\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\n\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| LIBRARY | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |             TITLE              |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| openssl | CVE-2019-1543    | MEDIUM   | 1.1.1a-r1         | 1.1.1b-r1     | openssl: ChaCha20-Poly1305     |\n|         |                  |          |                   |               | with long nonces               |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n</code></pre>","title":"Skip update of vulnerability DB"},{"location":"docs/vulnerability/examples/db/#only-download-vulnerability-database","text":"<p>You can also ask <code>Trivy</code> to simply retrieve the vulnerability database. This is useful to initialize workers in Continuous Integration systems.</p> <pre><code>$ trivy image --download-db-only\n</code></pre>","title":"Only download vulnerability database"},{"location":"docs/vulnerability/examples/db/#db-repository","text":"<p><code>Trivy</code> could also download the vulnerability database from an external OCI registry by using <code>--db-repository</code> option.</p> <pre><code>$ trivy image --db-repository registry.gitlab.com/gitlab-org/security-products/dependencies/trivy-db\n</code></pre>","title":"DB Repository"},{"location":"docs/vulnerability/examples/filter/","text":"","title":"Filter Vulnerabilities"},{"location":"docs/vulnerability/examples/filter/#hide-unfixed-vulnerabilities","text":"<p>By default, <code>Trivy</code> also detects unpatched/unfixed vulnerabilities. This means you can't fix these vulnerabilities even if you update all packages. If you would like to ignore them, use the <code>--ignore-unfixed</code> option.</p> <pre><code>$ trivy image --ignore-unfixed ruby:2.4.0\n</code></pre>  Result <pre><code>2019-05-16T12:49:52.656+0900    INFO    Updating vulnerability database...\n2019-05-16T12:50:14.786+0900    INFO    Detecting Debian vulnerabilities...\n\nruby:2.4.0 (debian 8.7)\n=======================\nTotal: 4730 (UNKNOWN: 1, LOW: 145, MEDIUM: 3487, HIGH: 1014, CRITICAL: 83)\n\n+------------------------------+------------------+----------+----------------------------+----------------------------------+-----------------------------------------------------+\n|           LIBRARY            | VULNERABILITY ID | SEVERITY |     INSTALLED VERSION      |          FIXED VERSION           |                        TITLE                        |\n+------------------------------+------------------+----------+----------------------------+----------------------------------+-----------------------------------------------------+\n| apt                          | CVE-2019-3462    | CRITICAL | 1.0.9.8.3                  | 1.0.9.8.5                        | Incorrect sanitation of the                         |\n|                              |                  |          |                            |                                  | 302 redirect field in HTTP                          |\n|                              |                  |          |                            |                                  | transport method of...                              |\n+                              +------------------+----------+                            +----------------------------------+-----------------------------------------------------+\n|                              | CVE-2016-1252    | MEDIUM   |                            | 1.0.9.8.4                        | The apt package in Debian                           |\n|                              |                  |          |                            |                                  | jessie before 1.0.9.8.4, in                         |\n|                              |                  |          |                            |                                  | Debian unstable before...                           |\n+------------------------------+------------------+----------+----------------------------+----------------------------------+-----------------------------------------------------+\n| bash                         | CVE-2019-9924    | HIGH     | 4.3-11                     | 4.3-11+deb8u2                    | bash: BASH_CMD is writable in                       |\n|                              |                  |          |                            |                                  | restricted bash shells                              |\n+                              +------------------+          +                            +----------------------------------+-----------------------------------------------------+\n|                              | CVE-2016-7543    |          |                            | 4.3-11+deb8u1                    | bash: Specially crafted                             |\n|                              |                  |          |                            |                                  | SHELLOPTS+PS4 variables allows                      |\n|                              |                  |          |                            |                                  | command substitution                                |\n+                              +------------------+----------+                            +                                  +-----------------------------------------------------+\n|                              | CVE-2016-0634    | MEDIUM   |                            |                                  | bash: Arbitrary code execution                      |\n|                              |                  |          |                            |                                  | via malicious hostname                              |\n+                              +------------------+----------+                            +----------------------------------+-----------------------------------------------------+\n|                              | CVE-2016-9401    | LOW      |                            | 4.3-11+deb8u2                    | bash: popd controlled free                          |\n+------------------------------+------------------+----------+----------------------------+----------------------------------+-----------------------------------------------------+\n...\n</code></pre>","title":"Hide Unfixed Vulnerabilities"},{"location":"docs/vulnerability/examples/filter/#by-severity","text":"<p>Use <code>--severity</code> option.</p> <pre><code>$ trivy image --severity HIGH,CRITICAL ruby:2.4.0\n</code></pre>  Result <pre><code>2019-05-16T01:51:46.255+0900    INFO    Updating vulnerability database...\n2019-05-16T01:51:49.213+0900    INFO    Detecting Debian vulnerabilities...\n\nruby:2.4.0 (debian 8.7)\n=======================\nTotal: 1785 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 1680, CRITICAL: 105)\n\n+-----------------------------+------------------+----------+---------------------------+----------------------------------+-------------------------------------------------+\n|           LIBRARY           | VULNERABILITY ID | SEVERITY |     INSTALLED VERSION     |          FIXED VERSION           |                      TITLE                      |\n+-----------------------------+------------------+----------+---------------------------+----------------------------------+-------------------------------------------------+\n| apt                         | CVE-2019-3462    | CRITICAL | 1.0.9.8.3                 | 1.0.9.8.5                        | Incorrect sanitation of the                     |\n|                             |                  |          |                           |                                  | 302 redirect field in HTTP                      |\n|                             |                  |          |                           |                                  | transport method of...                          |\n+-----------------------------+------------------+----------+---------------------------+----------------------------------+-------------------------------------------------+\n| bash                        | CVE-2019-9924    | HIGH     | 4.3-11                    | 4.3-11+deb8u2                    | bash: BASH_CMD is writable in                   |\n|                             |                  |          |                           |                                  | restricted bash shells                          |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2016-7543    |          |                           | 4.3-11+deb8u1                    | bash: Specially crafted                         |\n|                             |                  |          |                           |                                  | SHELLOPTS+PS4 variables allows                  |\n|                             |                  |          |                           |                                  | command substitution                            |\n+-----------------------------+------------------+          +---------------------------+----------------------------------+-------------------------------------------------+\n| binutils                    | CVE-2017-8421    |          | 2.25-5                    |                                  | binutils: Memory exhaustion in                  |\n|                             |                  |          |                           |                                  | objdump via a crafted PE file                   |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2017-14930   |          |                           |                                  | binutils: Memory leak in                        |\n|                             |                  |          |                           |                                  | decode_line_info                                |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2017-7614    |          |                           |                                  | binutils: NULL                                  |\n|                             |                  |          |                           |                                  | pointer dereference in                          |\n|                             |                  |          |                           |                                  | bfd_elf_final_link function                     |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2014-9939    |          |                           |                                  | binutils: buffer overflow in                    |\n|                             |                  |          |                           |                                  | ihex.c                                          |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2017-13716   |          |                           |                                  | binutils: Memory leak with the                  |\n|                             |                  |          |                           |                                  | C++ symbol demangler routine                    |\n|                             |                  |          |                           |                                  | in libiberty                                    |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2018-12699   |          |                           |                                  | binutils: heap-based buffer                     |\n|                             |                  |          |                           |                                  | overflow in finish_stab in                      |\n|                             |                  |          |                           |                                  | stabs.c                                         |\n+-----------------------------+------------------+          +---------------------------+----------------------------------+-------------------------------------------------+\n| bsdutils                    | CVE-2015-5224    |          | 2.25.2-6                  |                                  | util-linux: File name                           |\n|                             |                  |          |                           |                                  | collision due to incorrect                      |\n|                             |                  |          |                           |                                  | mkstemp use                                     |\n+                             +------------------+          +                           +----------------------------------+-------------------------------------------------+\n|                             | CVE-2016-2779    |          |                           |                                  | util-linux: runuser tty hijack                  |\n|                             |                  |          |                           |                                  | via TIOCSTI ioctl                               |\n+-----------------------------+------------------+----------+---------------------------+----------------------------------+-------------------------------------------------+\n</code></pre>","title":"By Severity"},{"location":"docs/vulnerability/examples/filter/#by-vulnerability-ids","text":"<p>Use <code>.trivyignore</code>.</p> <pre><code>$ cat .trivyignore\n# Accept the risk\nCVE-2018-14618\n\n# Accept the risk until 2023-01-01\nCVE-2019-14697 exp:2023-01-01\n\n# No impact in our settings\nCVE-2019-1543\n\n$ trivy image python:3.4-alpine3.9\n</code></pre>  Result <pre><code>2019-05-16T12:53:10.076+0900    INFO    Updating vulnerability database...\n2019-05-16T12:53:28.134+0900    INFO    Detecting Alpine vulnerabilities...\n\npython:3.4-alpine3.9 (alpine 3.9.2)\n===================================\nTotal: 0 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n</code></pre>","title":"By Vulnerability IDs"},{"location":"docs/vulnerability/examples/filter/#by-type","text":"<p>Use <code>--vuln-type</code> option.</p> <pre><code>$ trivy image --vuln-type os ruby:2.4.0\n</code></pre> <p>Available values: - library - os</p>  Result <pre><code>2019-05-22T19:36:50.530+0200    \u001b[34mINFO\u001b[0m    Updating vulnerability database...\n2019-05-22T19:36:51.681+0200    \u001b[34mINFO\u001b[0m    Detecting Alpine vulnerabilities...\n2019-05-22T19:36:51.685+0200    \u001b[34mINFO\u001b[0m    Updating npm Security DB...\n2019-05-22T19:36:52.389+0200    \u001b[34mINFO\u001b[0m    Detecting npm vulnerabilities...\n2019-05-22T19:36:52.390+0200    \u001b[34mINFO\u001b[0m    Updating pipenv Security DB...\n2019-05-22T19:36:53.406+0200    \u001b[34mINFO\u001b[0m    Detecting pipenv vulnerabilities...\n\nruby:2.4.0 (debian 8.7)\nTotal: 4751 (UNKNOWN: 1, LOW: 150, MEDIUM: 3504, HIGH: 1013, CRITICAL: 83)\n\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| LIBRARY | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |              TITLE               |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| curl    | CVE-2018-14618   | CRITICAL | 7.61.0-r0         | 7.61.1-r0     | curl: NTLM password overflow     |\n|         |                  |          |                   |               | via integer overflow             |\n+         +------------------+----------+                   +---------------+----------------------------------+\n|         | CVE-2018-16839   | HIGH     |                   | 7.61.1-r1     | curl: Integer overflow leading   |\n|         |                  |          |                   |               | to heap-based buffer overflow in |\n|         |                  |          |                   |               | Curl_sasl_create_plain_message() |\n+         +------------------+          +                   +---------------+----------------------------------+\n|         | CVE-2019-3822    |          |                   | 7.61.1-r2     | curl: NTLMv2 type-3 header       |\n|         |                  |          |                   |               | stack buffer overflow            |\n+         +------------------+          +                   +---------------+----------------------------------+\n|         | CVE-2018-16840   |          |                   | 7.61.1-r1     | curl: Use-after-free when        |\n|         |                  |          |                   |               | closing \"easy\" handle in         |\n|         |                  |          |                   |               | Curl_close()                     |\n+         +------------------+----------+                   +---------------+----------------------------------+\n|         | CVE-2019-3823    | MEDIUM   |                   | 7.61.1-r2     | curl: SMTP end-of-response       |\n|         |                  |          |                   |               | out-of-bounds read               |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2018-16890   |          |                   |               | curl: NTLM type-2 heap           |\n|         |                  |          |                   |               | out-of-bounds buffer read        |\n+         +------------------+          +                   +---------------+----------------------------------+\n|         | CVE-2018-16842   |          |                   | 7.61.1-r1     | curl: Heap-based buffer          |\n|         |                  |          |                   |               | over-read in the curl tool       |\n|         |                  |          |                   |               | warning formatting               |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| git     | CVE-2018-17456   | HIGH     | 2.15.2-r0         | 2.15.3-r0     | git: arbitrary code execution    |\n|         |                  |          |                   |               | via .gitmodules                  |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2018-19486   |          |                   |               | git: Improper handling of        |\n|         |                  |          |                   |               | PATH allows for commands to be   |\n|         |                  |          |                   |               | executed from...                 |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| libssh2 | CVE-2019-3855    | CRITICAL | 1.8.0-r2          | 1.8.1-r0      | libssh2: Integer overflow in     |\n|         |                  |          |                   |               | transport read resulting in      |\n|         |                  |          |                   |               | out of bounds write...           |\n+         +------------------+----------+                   +               +----------------------------------+\n|         | CVE-2019-3861    | MEDIUM   |                   |               | libssh2: Out-of-bounds reads     |\n|         |                  |          |                   |               | with specially crafted SSH       |\n|         |                  |          |                   |               | packets                          |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3857    |          |                   |               | libssh2: Integer overflow in     |\n|         |                  |          |                   |               | SSH packet processing channel    |\n|         |                  |          |                   |               | resulting in out of...           |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3856    |          |                   |               | libssh2: Integer overflow in     |\n|         |                  |          |                   |               | keyboard interactive handling    |\n|         |                  |          |                   |               | resulting in out of bounds...    |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3863    |          |                   |               | libssh2: Integer overflow        |\n|         |                  |          |                   |               | in user authenticate             |\n|         |                  |          |                   |               | keyboard interactive allows      |\n|         |                  |          |                   |               | out-of-bounds writes             |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3862    |          |                   |               | libssh2: Out-of-bounds memory    |\n|         |                  |          |                   |               | comparison with specially        |\n|         |                  |          |                   |               | crafted message channel          |\n|         |                  |          |                   |               | request                          |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3860    |          |                   |               | libssh2: Out-of-bounds reads     |\n|         |                  |          |                   |               | with specially crafted SFTP      |\n|         |                  |          |                   |               | packets                          |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3858    |          |                   |               | libssh2: Zero-byte allocation    |\n|         |                  |          |                   |               | with a specially crafted SFTP    |\n|         |                  |          |                   |               | packed leading to an...          |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-3859    |          |                   |               | libssh2: Unchecked use of        |\n|         |                  |          |                   |               | _libssh2_packet_require and      |\n|         |                  |          |                   |               | _libssh2_packet_requirev         |\n|         |                  |          |                   |               | resulting in out-of-bounds       |\n|         |                  |          |                   |               | read                             |\n+---------+------------------+          +-------------------+---------------+----------------------------------+\n| libxml2 | CVE-2018-14404   |          | 2.9.7-r0          | 2.9.8-r1      | libxml2: NULL pointer            |\n|         |                  |          |                   |               | dereference in                   |\n|         |                  |          |                   |               | xpath.c:xmlXPathCompOpEval()     |\n|         |                  |          |                   |               | can allow attackers to cause     |\n|         |                  |          |                   |               | a...                             |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2018-14567   |          |                   |               | libxml2: Infinite loop when      |\n|         |                  |          |                   |               | --with-lzma is used allows for   |\n|         |                  |          |                   |               | denial of service...             |\n+         +------------------+----------+                   +               +----------------------------------+\n|         | CVE-2018-9251    | LOW      |                   |               | libxml2: infinite loop in        |\n|         |                  |          |                   |               | xz_decomp function in xzlib.c    |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| openssh | CVE-2019-6109    | MEDIUM   | 7.5_p1-r9         | 7.5_p1-r10    | openssh: Missing character       |\n|         |                  |          |                   |               | encoding in progress display     |\n|         |                  |          |                   |               | allows for spoofing of scp...    |\n+         +------------------+          +                   +               +----------------------------------+\n|         | CVE-2019-6111    |          |                   |               | openssh: Improper validation     |\n|         |                  |          |                   |               | of object names allows           |\n|         |                  |          |                   |               | malicious server to overwrite    |\n|         |                  |          |                   |               | files...                         |\n+         +------------------+----------+                   +               +----------------------------------+\n|         | CVE-2018-20685   | LOW      |                   |               | openssh: scp client improper     |\n|         |                  |          |                   |               | directory name validation        |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| sqlite  | CVE-2018-20346   | MEDIUM   | 3.21.0-r1         | 3.25.3-r0     | CVE-2018-20505 CVE-2018-20506    |\n|         |                  |          |                   |               | sqlite: Multiple flaws in        |\n|         |                  |          |                   |               | sqlite which can be triggered    |\n|         |                  |          |                   |               | via...                           |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n| tar     | CVE-2018-20482   | LOW      | 1.29-r1           | 1.31-r0       | tar: Infinite read loop in       |\n|         |                  |          |                   |               | sparse_dump_region function in   |\n|         |                  |          |                   |               | sparse.c                         |\n+---------+------------------+----------+-------------------+---------------+----------------------------------+\n</code></pre>","title":"By Type"},{"location":"docs/vulnerability/examples/filter/#by-open-policy-agent","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>Trivy supports Open Policy Agent (OPA) to filter vulnerabilities. You can specify a Rego file with <code>--ignore-policy</code> option.</p> <p>The Rego package name must be <code>trivy</code> and it must include a rule called <code>ignore</code> which determines if each individual vulnerability should be excluded (ignore=true) or not (ignore=false). In the policy, each vulnerability will be available for inspection as the <code>input</code> variable. The structure of each vulnerability input is the same as for the Trivy JSON output. There is a built-in Rego library with helper functions that you can import into your policy using: <code>import data.lib.trivy</code>. For more info about the helper functions, look at the library here</p> <p>To get started, see the example policy.</p> <pre><code>$ trivy image --ignore-policy contrib/example_policy/basic.rego centos:7\n</code></pre>  Result <pre><code>centos:7 (centos 7.9.2009)\n==========================\nTotal: 9 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 4, CRITICAL: 5)\n\n+--------------+------------------+----------+-------------------+-------------------+-----------------------------------------+\n|   LIBRARY    | VULNERABILITY ID | SEVERITY | INSTALLED VERSION |   FIXED VERSION   |                  TITLE                  |\n+--------------+------------------+----------+-------------------+-------------------+-----------------------------------------+\n| glib2        | CVE-2015-8385    | HIGH     | 2.56.1-7.el7      |                   | pcre: buffer overflow caused            |\n|              |                  |          |                   |                   | by named forward reference              |\n|              |                  |          |                   |                   | to duplicate group number...            |\n|              |                  |          |                   |                   | --&gt;avd.aquasec.com/nvd/cve-2015-8385    |\n+              +------------------+          +                   +-------------------+-----------------------------------------+\n|              | CVE-2016-3191    |          |                   |                   | pcre: workspace overflow for            |\n|              |                  |          |                   |                   | (*ACCEPT) with deeply nested            |\n|              |                  |          |                   |                   | parentheses (8.39/13, 10.22/12)         |\n|              |                  |          |                   |                   | --&gt;avd.aquasec.com/nvd/cve-2016-3191    |\n+              +------------------+          +                   +-------------------+-----------------------------------------+\n|              | CVE-2021-27219   |          |                   | 2.56.1-9.el7_9    | glib: integer overflow in               |\n|              |                  |          |                   |                   | g_bytes_new function on                 |\n|              |                  |          |                   |                   | 64-bit platforms due to an...           |\n|              |                  |          |                   |                   | --&gt;avd.aquasec.com/nvd/cve-2021-27219   |\n+--------------+------------------+----------+-------------------+-------------------+-----------------------------------------+\n| glibc        | CVE-2019-1010022 | CRITICAL | 2.17-317.el7      |                   | glibc: stack guard protection bypass    |\n|              |                  |          |                   |                   | --&gt;avd.aquasec.com/nvd/cve-2019-1010022 |\n+--------------+                  +          +                   +-------------------+                                         +\n| glibc-common |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n+--------------+------------------+          +-------------------+-------------------+-----------------------------------------+\n| nss          | CVE-2021-43527   |          | 3.53.1-3.el7_9    | 3.67.0-4.el7_9    | nss: Memory corruption in               |\n|              |                  |          |                   |                   | decodeECorDsaSignature with             |\n|              |                  |          |                   |                   | DSA signatures (and RSA-PSS)            |\n|              |                  |          |                   |                   | --&gt;avd.aquasec.com/nvd/cve-2021-43527   |\n+--------------+                  +          +                   +                   +                                         +\n| nss-sysinit  |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n+--------------+                  +          +                   +                   +                                         +\n| nss-tools    |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n|              |                  |          |                   |                   |                                         |\n+--------------+------------------+----------+-------------------+-------------------+-----------------------------------------+\n| openssl-libs | CVE-2020-1971    | HIGH     | 1:1.0.2k-19.el7   | 1:1.0.2k-21.el7_9 | openssl: EDIPARTYNAME                   |\n|              |                  |          |                   |                   | NULL pointer de-reference               |\n|              |                  |          |                   |                   | --&gt;avd.aquasec.com/nvd/cve-2020-1971    |\n+--------------+------------------+----------+-------------------+-------------------+-----------------------------------------+\n</code></pre>","title":"By Open Policy Agent"},{"location":"docs/vulnerability/examples/others/","text":"","title":"Others"},{"location":"docs/vulnerability/examples/others/#skip-files","text":"<p>Trivy traversals directories and looks for all lock files by default. If your image contains lock files which are not maintained by you, you can skip the file.</p> <pre><code>$ trivy image --skip-files \"/Gemfile.lock\" --skip-files \"/var/lib/gems/2.5.0/gems/http_parser.rb-0.6.0/Gemfile.lock\" quay.io/fluentd_elasticsearch/fluentd:v2.9.0\n</code></pre>","title":"Skip Files"},{"location":"docs/vulnerability/examples/others/#skip-directories","text":"<p>Trivy traversals directories and look for all lock files by default. If your image contains lock files which are not maintained by you, you can skip traversal in the specific directory.</p> <pre><code>$ trivy image --skip-dirs /var/lib/gems/2.5.0/gems/fluent-plugin-detect-exceptions-0.0.13 --skip-dirs \"/var/lib/gems/2.5.0/gems/http_parser.rb-0.6.0\" quay.io/fluentd_elasticsearch/fluentd:v2.9.0\n</code></pre>","title":"Skip Directories"},{"location":"docs/vulnerability/examples/others/#exit-code","text":"<p>By default, <code>Trivy</code> exits with code 0 even when vulnerabilities are detected. Use the <code>--exit-code</code> option if you want to exit with a non-zero exit code.</p> <pre><code>$ trivy image --exit-code 1 python:3.4-alpine3.9\n</code></pre>  Result <pre><code>2019-05-16T12:51:43.500+0900    INFO    Updating vulnerability database...\n2019-05-16T12:52:00.387+0900    INFO    Detecting Alpine vulnerabilities...\n\npython:3.4-alpine3.9 (alpine 3.9.2)\n===================================\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\n\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| LIBRARY | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |             TITLE              |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| openssl | CVE-2019-1543    | MEDIUM   | 1.1.1a-r1         | 1.1.1b-r1     | openssl: ChaCha20-Poly1305     |\n|         |                  |          |                   |               | with long nonces               |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n</code></pre>  <p>This option is useful for CI/CD. In the following example, the test will fail only when a critical vulnerability is found.</p> <pre><code>$ trivy image --exit-code 0 --severity MEDIUM,HIGH ruby:2.4.0\n$ trivy image --exit-code 1 --severity CRITICAL ruby:2.4.0\n</code></pre>","title":"Exit Code"},{"location":"docs/vulnerability/examples/others/#reset","text":"<p>The <code>--reset</code> option removes all caches and database. After this, it takes a long time as the vulnerability database needs to be rebuilt locally.</p> <pre><code>$ trivy image --reset\n</code></pre>  Result <pre><code>2019-05-16T13:05:31.935+0900    INFO    Resetting...\n</code></pre>","title":"Reset"},{"location":"docs/vulnerability/examples/report/","text":"","title":"Report Formats"},{"location":"docs/vulnerability/examples/report/#table-default","text":"<pre><code>$ trivy image -f table golang:1.12-alpine\n</code></pre>","title":"Table (Default)"},{"location":"docs/vulnerability/examples/report/#show-origins-of-vulnerable-dependencies","text":"<p>EXPERIMENTAL</p> <p>This feature might change without preserving backwards compatibility.</p>  <p>Modern software development relies on the use of third-party libraries. Third-party dependencies also depend on others so a list of dependencies can be represented as a dependency graph. In some cases, vulnerable dependencies are not linked directly, and it requires analyses of the tree. To make this task simpler Trivy can show a dependency origin tree with the <code>--dependency-tree</code> flag. This flag is only available with the <code>fs</code> or <code>repo</code> commands and the <code>--format table</code> flag.</p> <p>This tree is the reverse of the npm list command. However, if you want to resolve a vulnerability in a particular indirect dependency, the reversed tree is useful to know where that dependency comes from and identify which package you actually need to update.</p> <p>In table output, it looks like:</p> <pre><code>$ trivy fs --severity HIGH,CRITICAL --dependency-tree /path/to/your_node_project\n\npackage-lock.json (npm)\n=======================\nTotal: 2 (HIGH: 1, CRITICAL: 1)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502     Library      \u2502 Vulnerability  \u2502 Severity \u2502 Installed Version \u2502 Fixed Version \u2502                           Title                            \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 follow-redirects \u2502 CVE-2022-0155  \u2502 HIGH     \u2502 1.14.6            \u2502 1.14.7        \u2502 follow-redirects: Exposure of Private Personal Information \u2502\n\u2502                  \u2502                \u2502          \u2502                   \u2502               \u2502 to an Unauthorized Actor                                   \u2502\n\u2502                  \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2022-0155                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 glob-parent      \u2502 CVE-2020-28469 \u2502 CRITICAL \u2502 3.1.0             \u2502 5.1.2         \u2502 nodejs-glob-parent: Regular expression denial of service   \u2502\n\u2502                  \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2020-28469                 \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\nDependency Origin Tree\n======================\npackage-lock.json\n\u251c\u2500\u2500 follow-redirects@1.14.6, (HIGH: 1, CRITICAL: 0)\n\u2502   \u2514\u2500\u2500 axios@0.21.4\n\u2514\u2500\u2500 glob-parent@3.1.0, (HIGH: 0, CRITICAL: 1)\n    \u2514\u2500\u2500 chokidar@2.1.8\n        \u2514\u2500\u2500 watchpack-chokidar2@2.0.1\n            \u2514\u2500\u2500 watchpack@1.7.5\n                \u2514\u2500\u2500 webpack@4.46.0\n                    \u2514\u2500\u2500 cra-append-sw@2.7.0\n</code></pre> <p>Vulnerable dependencies are shown in the top level of the tree. Lower levels show how those vulnerabilities are introduced. In the example above axios@0.21.4 included in the project directly depends on the vulnerable follow-redirects@1.14.6. Also, glob-parent@3.1.0 with some vulnerabilities is included through chain of dependencies that is added by cra-append-sw@2.7.0.</p> <p>Then, you can try to update axios@0.21.4 and cra-append-sw@2.7.0 to resolve vulnerabilities in follow-redirects@1.14.6 and glob-parent@3.1.0.</p>  <p>Note</p> <p>Only Node.js (package-lock.json) is supported at the moment.</p>","title":"Show origins of vulnerable dependencies"},{"location":"docs/vulnerability/examples/report/#json","text":"<pre><code>$ trivy image -f json -o results.json golang:1.12-alpine\n</code></pre>  <p>Caution</p> <p>v0.20.0 changes the JSON schema. For more details, see here.</p>   Result <pre><code>2019-05-16T01:46:31.777+0900    INFO    Updating vulnerability database...\n2019-05-16T01:47:03.007+0900    INFO    Detecting Alpine vulnerabilities...\n</code></pre>   JSON <pre><code>[\n  {\n    \"Target\": \"php-app/composer.lock\",\n    \"Vulnerabilities\": null\n  },\n  {\n    \"Target\": \"node-app/package-lock.json\",\n    \"Vulnerabilities\": [\n      {\n        \"VulnerabilityID\": \"CVE-2018-16487\",\n        \"PkgName\": \"lodash\",\n        \"InstalledVersion\": \"4.17.4\",\n        \"FixedVersion\": \"\\u003e=4.17.11\",\n        \"Title\": \"lodash: Prototype pollution in utilities function\",\n        \"Description\": \"A prototype pollution vulnerability was found in lodash \\u003c4.17.11 where the functions merge, mergeWith, and defaultsDeep can be tricked into adding or modifying properties of Object.prototype.\",\n        \"Severity\": \"HIGH\",\n        \"References\": [\n          \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-16487\",\n        ]\n      }\n    ]\n  },\n  {\n    \"Target\": \"trivy-ci-test (alpine 3.7.1)\",\n    \"Vulnerabilities\": [\n      {\n        \"VulnerabilityID\": \"CVE-2018-16840\",\n        \"PkgName\": \"curl\",\n        \"InstalledVersion\": \"7.61.0-r0\",\n        \"FixedVersion\": \"7.61.1-r1\",\n        \"Title\": \"curl: Use-after-free when closing \\\"easy\\\" handle in Curl_close()\",\n        \"Description\": \"A heap use-after-free flaw was found in curl versions from 7.59.0 through 7.61.1 in the code related to closing an easy handle. \",\n        \"Severity\": \"HIGH\",\n        \"References\": [\n          \"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-16840\",\n        ]\n      },\n      {\n        \"VulnerabilityID\": \"CVE-2019-3822\",\n        \"PkgName\": \"curl\",\n        \"InstalledVersion\": \"7.61.0-r0\",\n        \"FixedVersion\": \"7.61.1-r2\",\n        \"Title\": \"curl: NTLMv2 type-3 header stack buffer overflow\",\n        \"Description\": \"libcurl versions from 7.36.0 to before 7.64.0 are vulnerable to a stack-based buffer overflow. \",\n        \"Severity\": \"HIGH\",\n        \"References\": [\n          \"https://curl.haxx.se/docs/CVE-2019-3822.html\",\n          \"https://lists.apache.org/thread.html/8338a0f605bdbb3a6098bb76f666a95fc2b2f53f37fa1ecc89f1146f@%3Cdevnull.infra.apache.org%3E\"\n        ]\n      },\n      {\n        \"VulnerabilityID\": \"CVE-2018-16839\",\n        \"PkgName\": \"curl\",\n        \"InstalledVersion\": \"7.61.0-r0\",\n        \"FixedVersion\": \"7.61.1-r1\",\n        \"Title\": \"curl: Integer overflow leading to heap-based buffer overflow in Curl_sasl_create_plain_message()\",\n        \"Description\": \"Curl versions 7.33.0 through 7.61.1 are vulnerable to a buffer overrun in the SASL authentication code that may lead to denial of service.\",\n        \"Severity\": \"HIGH\",\n        \"References\": [\n          \"https://github.com/curl/curl/commit/f3a24d7916b9173c69a3e0ee790102993833d6c5\",\n        ]\n      },\n      {\n        \"VulnerabilityID\": \"CVE-2018-19486\",\n        \"PkgName\": \"git\",\n        \"InstalledVersion\": \"2.15.2-r0\",\n        \"FixedVersion\": \"2.15.3-r0\",\n        \"Title\": \"git: Improper handling of PATH allows for commands to be executed from the current directory\",\n        \"Description\": \"Git before 2.19.2 on Linux and UNIX executes commands from the current working directory (as if '.' were at the end of $PATH) in certain cases involving the run_command() API and run-command.c, because there was a dangerous change from execvp to execv during 2017.\",\n        \"Severity\": \"HIGH\",\n        \"References\": [\n          \"https://usn.ubuntu.com/3829-1/\",\n        ]\n      },\n      {\n        \"VulnerabilityID\": \"CVE-2018-17456\",\n        \"PkgName\": \"git\",\n        \"InstalledVersion\": \"2.15.2-r0\",\n        \"FixedVersion\": \"2.15.3-r0\",\n        \"Title\": \"git: arbitrary code execution via .gitmodules\",\n        \"Description\": \"Git before 2.14.5, 2.15.x before 2.15.3, 2.16.x before 2.16.5, 2.17.x before 2.17.2, 2.18.x before 2.18.1, and 2.19.x before 2.19.1 allows remote code execution during processing of a recursive \\\"git clone\\\" of a superproject if a .gitmodules file has a URL field beginning with a '-' character.\",\n        \"Severity\": \"HIGH\",\n        \"References\": [\n          \"http://www.securitytracker.com/id/1041811\",\n        ]\n      }\n    ]\n  },\n  {\n    \"Target\": \"python-app/Pipfile.lock\",\n    \"Vulnerabilities\": null\n  },\n  {\n    \"Target\": \"ruby-app/Gemfile.lock\",\n    \"Vulnerabilities\": null\n  },\n  {\n    \"Target\": \"rust-app/Cargo.lock\",\n    \"Vulnerabilities\": null\n  }\n]\n</code></pre>  <p><code>VulnerabilityID</code>, <code>PkgName</code>, <code>InstalledVersion</code>, and <code>Severity</code> in <code>Vulnerabilities</code> are always filled with values, but other fields might be empty.</p>","title":"JSON"},{"location":"docs/vulnerability/examples/report/#sarif","text":"<p>Sarif can be generated with the <code>--format sarif</code> option.</p> <pre><code>$ trivy image --format sarif -o report.sarif  golang:1.12-alpine\n</code></pre> <p>This SARIF file can be uploaded to GitHub code scanning results, and there is a Trivy GitHub Action for automating this process.</p>","title":"SARIF"},{"location":"docs/vulnerability/examples/report/#template","text":"","title":"Template"},{"location":"docs/vulnerability/examples/report/#custom-template","text":"<pre><code>$ trivy image --format template --template \"{{ range . }} {{ .Target }} {{ end }}\" golang:1.12-alpine\n</code></pre>  Result <pre><code>2020-01-02T18:02:32.856+0100    INFO    Detecting Alpine vulnerabilities...\n golang:1.12-alpine (alpine 3.10.2)\n</code></pre>  <p>You can compute different figures within the template using sprig functions. As an example you can summarize the different classes of issues:</p> <pre><code>$ trivy image --format template --template '{{- $critical := 0 }}{{- $high := 0 }}{{- range . }}{{- range .Vulnerabilities }}{{- if  eq .Severity \"CRITICAL\" }}{{- $critical = add $critical 1 }}{{- end }}{{- if  eq .Severity \"HIGH\" }}{{- $high = add $high 1 }}{{- end }}{{- end }}{{- end }}Critical: {{ $critical }}, High: {{ $high }}' golang:1.12-alpine\n</code></pre>  Result <pre><code>Critical: 0, High: 2\n</code></pre>  <p>For other features of sprig, see the official sprig documentation.</p>","title":"Custom Template"},{"location":"docs/vulnerability/examples/report/#load-templates-from-a-file","text":"<p>You can load templates from a file prefixing the template path with an @.</p> <pre><code>$ trivy image --format template --template \"@/path/to/template\" golang:1.12-alpine\n</code></pre>","title":"Load templates from a file"},{"location":"docs/vulnerability/examples/report/#default-templates","text":"<p>If Trivy is installed using rpm then default templates can be found at <code>/usr/local/share/trivy/templates</code>.</p>","title":"Default Templates"},{"location":"docs/vulnerability/examples/report/#xml","text":"<p>In the following example using the template <code>junit.tpl</code> XML can be generated. <pre><code>$ trivy image --format template --template \"@contrib/junit.tpl\" -o junit-report.xml  golang:1.12-alpine\n</code></pre></p>","title":"XML"},{"location":"docs/vulnerability/examples/report/#asff","text":"<p>Trivy also supports an ASFF template for reporting findings to AWS Security Hub</p>","title":"ASFF"},{"location":"docs/vulnerability/examples/report/#html","text":"<pre><code>$ trivy image --format template --template \"@contrib/html.tpl\" -o report.html golang:1.12-alpine\n</code></pre> <p>The following example shows use of default HTML template when Trivy is installed using rpm.</p> <pre><code>$ trivy image --format template --template \"@/usr/local/share/trivy/templates/html.tpl\" -o report.html golang:1.12-alpine\n</code></pre>","title":"HTML"},{"location":"docs/vulnerability/languages/golang/","text":"","title":"Go"},{"location":"docs/vulnerability/languages/golang/#features","text":"<p>Trivy supports two types of Go scanning, Go Modules and binaries built by Go. The following table provides an outline of the features Trivy offers.</p>    Artifact Offline1 Dev dependencies     Modules \u2713 Include   Binaries \u2713 Exclude     <p>Note</p> <p>Trivy scans only dependencies of the Go project. Let's say you scan the Docker binary, Trivy doesn't detect vulnerabilities of Docker itself. Also, when you scan go.mod in Kubernetes, the Kubernetes vulnerabilities will not be found.</p>","title":"Features"},{"location":"docs/vulnerability/languages/golang/#go-modules","text":"<p>Depending on Go versions, the required files are different.</p>    Version Required files Offline License     &gt;=1.17 go.mod \u2713 -   &lt;1.17 go.mod, go.sum \u2713 -    <p>In Go 1.17+ projects, Trivy uses <code>go.mod</code> for direct/indirect dependencies. On the other hand, it uses <code>go.mod</code> for direct dependencies and <code>go.sum</code> for indirect dependencies in Go 1.16 or less.</p> <p>Go 1.17+ holds actually needed indirect dependencies in <code>go.mod</code>, and it reduces false detection. <code>go.sum</code> in Go 1.16 or less contains all indirect dependencies that are even not needed for compiling. If you want to have better detection, please consider updating the Go version in your project.</p>  <p>Note</p> <p>The Go version doesn't mean your CLI version, but the Go version in your go.mod.</p> <pre><code>module github.com/aquasecurity/trivy\n\ngo 1.18\n\nrequire (\n        github.com/CycloneDX/cyclonedx-go v0.5.0\n        ...\n)\n</code></pre> <p>To update the Go version in your project, you need to run the following command.</p> <pre><code>$ go mod tidy -go=1.18\n</code></pre>","title":"Go Modules"},{"location":"docs/vulnerability/languages/golang/#go-binaries","text":"<p>Trivy scans binaries built by Go. If there is a Go binary in your container image, Trivy automatically finds and scans it.</p> <p>Also, you can scan your local binaries.</p> <pre><code>$ trivy fs ./your_binary\n</code></pre>   <ol> <li> <p>It doesn't require the Internet access.\u00a0\u21a9</p> </li> </ol>","title":"Go binaries"},{"location":"docs/vulnerability/scanning/","text":"<p>Trivy scans Container Images, Rootfs, Filesystem, and Git Repositories to detect vulnerabilities.</p> <p></p>","title":"Vulnerability Scanning"},{"location":"docs/vulnerability/scanning/filesystem/","text":"<p>Scan a local project including language-specific files.</p> <pre><code>$ trivy fs /path/to/project\n</code></pre>","title":"Filesystem"},{"location":"docs/vulnerability/scanning/filesystem/#standalone-mode","text":"","title":"Standalone mode"},{"location":"docs/vulnerability/scanning/filesystem/#local-project","text":"<p>Trivy will look for vulnerabilities based on lock files such as Gemfile.lock and package-lock.json.</p> <pre><code>$ trivy fs ~/src/github.com/aquasecurity/trivy-ci-test\n</code></pre>  Result <pre><code>2020-06-01T17:06:58.652+0300    WARN    OS is not detected and vulnerabilities in OS packages are not detected.\n2020-06-01T17:06:58.652+0300    INFO    Detecting pipenv vulnerabilities...\n2020-06-01T17:06:58.691+0300    INFO    Detecting cargo vulnerabilities...\n\nPipfile.lock\n============\nTotal: 10 (UNKNOWN: 2, LOW: 0, MEDIUM: 6, HIGH: 2, CRITICAL: 0)\n\n+---------------------+------------------+----------+-------------------+------------------------+------------------------------------+\n|       LIBRARY       | VULNERABILITY ID | SEVERITY | INSTALLED VERSION |     FIXED VERSION      |               TITLE                |\n+---------------------+------------------+----------+-------------------+------------------------+------------------------------------+\n| django              | CVE-2020-7471    | HIGH     | 2.0.9             | 3.0.3, 2.2.10, 1.11.28 | django: potential                  |\n|                     |                  |          |                   |                        | SQL injection via                  |\n|                     |                  |          |                   |                        | StringAgg(delimiter)               |\n+                     +------------------+----------+                   +------------------------+------------------------------------+\n|                     | CVE-2019-19844   | MEDIUM   |                   | 3.0.1, 2.2.9, 1.11.27  | Django: crafted email address      |\n|                     |                  |          |                   |                        | allows account takeover            |\n+                     +------------------+          +                   +------------------------+------------------------------------+\n|                     | CVE-2019-3498    |          |                   | 2.1.5, 2.0.10, 1.11.18 | python-django: Content             |\n|                     |                  |          |                   |                        | spoofing via URL path in           |\n|                     |                  |          |                   |                        | default 404 page                   |\n+                     +------------------+          +                   +------------------------+------------------------------------+\n|                     | CVE-2019-6975    |          |                   | 2.1.6, 2.0.11, 1.11.19 | python-django:                     |\n|                     |                  |          |                   |                        | memory exhaustion in               |\n|                     |                  |          |                   |                        | django.utils.numberformat.format() |\n+---------------------+------------------+----------+-------------------+------------------------+------------------------------------+\n...\n</code></pre>","title":"Local Project"},{"location":"docs/vulnerability/scanning/filesystem/#single-file","text":"<p>It's also possible to scan a single file.</p> <pre><code>$ trivy fs ~/src/github.com/aquasecurity/trivy-ci-test/Pipfile.lock\n</code></pre>","title":"Single file"},{"location":"docs/vulnerability/scanning/filesystem/#clientserver-mode","text":"<p>You must launch Trivy server in advance. </p> <pre><code>$ trivy server\n</code></pre> <p>Then, Trivy works as a client if you specify the <code>--server</code> option.</p> <pre><code>$ trivy fs --server http://localhost:4954 --severity CRITICAL ./integration/testdata/fixtures/fs/pom/\n</code></pre>  Result <pre><code>pom.xml (pom)\n=============\nTotal: 4 (CRITICAL: 4)\n\n+---------------------------------------------+------------------+----------+-------------------+--------------------------------+---------------------------------------+\n|                   LIBRARY                   | VULNERABILITY ID | SEVERITY | INSTALLED VERSION |         FIXED VERSION          |                 TITLE                 |\n+---------------------------------------------+------------------+----------+-------------------+--------------------------------+---------------------------------------+\n| com.fasterxml.jackson.core:jackson-databind | CVE-2017-17485   | CRITICAL | 2.9.1             | 2.8.11, 2.9.4                  | jackson-databind: Unsafe              |\n|                                             |                  |          |                   |                                | deserialization due to                |\n|                                             |                  |          |                   |                                | incomplete black list (incomplete     |\n|                                             |                  |          |                   |                                | fix for CVE-2017-15095)...            |\n|                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2017-17485 |\n+                                             +------------------+          +                   +--------------------------------+---------------------------------------+\n|                                             | CVE-2020-9546    |          |                   | 2.7.9.7, 2.8.11.6, 2.9.10.4    | jackson-databind: Serialization       |\n|                                             |                  |          |                   |                                | gadgets in shaded-hikari-config       |\n|                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-9546  |\n+                                             +------------------+          +                   +                                +---------------------------------------+\n|                                             | CVE-2020-9547    |          |                   |                                | jackson-databind: Serialization       |\n|                                             |                  |          |                   |                                | gadgets in ibatis-sqlmap              |\n|                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-9547  |\n+                                             +------------------+          +                   +                                +---------------------------------------+\n|                                             | CVE-2020-9548    |          |                   |                                | jackson-databind: Serialization       |\n|                                             |                  |          |                   |                                | gadgets in anteros-core               |\n|                                             |                  |          |                   |                                | --&gt;avd.aquasec.com/nvd/cve-2020-9548  |\n+---------------------------------------------+------------------+----------+-------------------+--------------------------------+---------------------------------------+\n</code></pre>","title":"Client/Server mode"},{"location":"docs/vulnerability/scanning/git-repository/","text":"<p>Scan your remote git repository</p> <pre><code>$ trivy repo https://github.com/knqyf263/trivy-ci-test\n</code></pre>  Result <pre><code>2021-03-09T15:04:19.003+0200    INFO    Detecting cargo vulnerabilities...\n2021-03-09T15:04:19.005+0200    INFO    Detecting pipenv vulnerabilities...\n\nCargo.lock\n==========\nTotal: 7 (UNKNOWN: 7, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n\n+----------+-------------------+----------+-------------------+------------------------------+---------------------------------------------+\n| LIBRARY  | VULNERABILITY ID  | SEVERITY | INSTALLED VERSION |        FIXED VERSION         |                    TITLE                    |\n+----------+-------------------+----------+-------------------+------------------------------+---------------------------------------------+\n| ammonia  | RUSTSEC-2019-0001 | UNKNOWN  | 1.9.0             | &gt;= 2.1.0                     | Uncontrolled recursion leads                |\n|          |                   |          |                   |                              | to abort in HTML serialization              |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2019-0001 |\n+----------+-------------------+          +-------------------+------------------------------+---------------------------------------------+\n| openssl  | RUSTSEC-2016-0001 |          | 0.8.3             | &gt;= 0.9.0                     | SSL/TLS MitM vulnerability                  |\n|          |                   |          |                   |                              | due to insecure defaults                    |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2016-0001 |\n+----------+-------------------+          +-------------------+------------------------------+---------------------------------------------+\n| smallvec | RUSTSEC-2018-0018 |          | 0.6.9             | &gt;= 0.6.13                    | smallvec creates uninitialized              |\n|          |                   |          |                   |                              | value of any type                           |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2018-0018 |\n+          +-------------------+          +                   +------------------------------+---------------------------------------------+\n|          | RUSTSEC-2019-0009 |          |                   | &gt;= 0.6.10                    | Double-free and use-after-free              |\n|          |                   |          |                   |                              | in SmallVec::grow()                         |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2019-0009 |\n+          +-------------------+          +                   +                              +---------------------------------------------+\n|          | RUSTSEC-2019-0012 |          |                   |                              | Memory corruption in SmallVec::grow()       |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2019-0012 |\n+          +-------------------+          +                   +------------------------------+---------------------------------------------+\n|          | RUSTSEC-2021-0003 |          |                   | &gt;= 0.6.14, &lt; 1.0.0, &gt;= 1.6.1 | Buffer overflow in SmallVec::insert_many    |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2021-0003 |\n+----------+-------------------+          +-------------------+------------------------------+---------------------------------------------+\n| tempdir  | RUSTSEC-2018-0017 |          | 0.3.7             |                              | `tempdir` crate has been                    |\n|          |                   |          |                   |                              | deprecated; use `tempfile` instead          |\n|          |                   |          |                   |                              | --&gt;rustsec.org/advisories/RUSTSEC-2018-0017 |\n+----------+-------------------+----------+-------------------+------------------------------+---------------------------------------------+\n\nPipfile.lock\n============\nTotal: 20 (UNKNOWN: 3, LOW: 0, MEDIUM: 7, HIGH: 5, CRITICAL: 5)\n\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n|       LIBRARY       | VULNERABILITY ID | SEVERITY | INSTALLED VERSION |     FIXED VERSION      |                 TITLE                 |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| django              | CVE-2019-19844   | CRITICAL | 2.0.9             | 3.0.1, 2.2.9, 1.11.27  | Django: crafted email address         |\n|                     |                  |          |                   |                        | allows account takeover               |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2019-19844 |\n+                     +------------------+          +                   +------------------------+---------------------------------------+\n|                     | CVE-2020-7471    |          |                   | 3.0.3, 2.2.10, 1.11.28 | django: potential SQL injection       |\n|                     |                  |          |                   |                        | via StringAgg(delimiter)              |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-7471  |\n+                     +------------------+----------+                   +------------------------+---------------------------------------+\n|                     | CVE-2019-6975    | HIGH     |                   | 2.1.6, 2.0.11, 1.11.19 | python-django: memory exhaustion in   |\n|                     |                  |          |                   |                        | django.utils.numberformat.format()    |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2019-6975  |\n+                     +------------------+          +                   +------------------------+---------------------------------------+\n|                     | CVE-2020-9402    |          |                   | 3.0.4, 2.2.11, 1.11.29 | django: potential SQL injection       |\n|                     |                  |          |                   |                        | via \"tolerance\" parameter in          |\n|                     |                  |          |                   |                        | GIS functions and aggregates...       |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-9402  |\n+                     +------------------+----------+                   +------------------------+---------------------------------------+\n|                     | CVE-2019-3498    | MEDIUM   |                   | 2.1.5, 2.0.10, 1.11.18 | python-django: Content spoofing       |\n|                     |                  |          |                   |                        | via URL path in default 404 page      |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2019-3498  |\n+                     +------------------+          +                   +------------------------+---------------------------------------+\n|                     | CVE-2020-13254   |          |                   | 3.0.7, 2.2.13          | django: potential data leakage        |\n|                     |                  |          |                   |                        | via malformed memcached keys          |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-13254 |\n+                     +------------------+          +                   +                        +---------------------------------------+\n|                     | CVE-2020-13596   |          |                   |                        | django: possible XSS via              |\n|                     |                  |          |                   |                        | admin ForeignKeyRawIdWidget           |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-13596 |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| django-cors-headers | pyup.io-37132    | UNKNOWN  | 2.5.2             | 3.0.0                  | In django-cors-headers                |\n|                     |                  |          |                   |                        | version 3.0.0,                        |\n|                     |                  |          |                   |                        | ``CORS_ORIGIN_WHITELIST``             |\n|                     |                  |          |                   |                        | requires URI schemes, and             |\n|                     |                  |          |                   |                        | optionally ports. This...             |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| djangorestframework | CVE-2020-25626   | MEDIUM   | 3.9.2             | 3.11.2                 | django-rest-framework: XSS            |\n|                     |                  |          |                   |                        | Vulnerability in API viewer           |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-25626 |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| httplib2            | CVE-2021-21240   | HIGH     | 0.12.1            | 0.19.0                 | python-httplib2: Regular              |\n|                     |                  |          |                   |                        | expression denial of                  |\n|                     |                  |          |                   |                        | service via malicious header          |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2021-21240 |\n+                     +------------------+----------+                   +------------------------+---------------------------------------+\n|                     | CVE-2020-11078   | MEDIUM   |                   | 0.18.0                 | python-httplib2: CRLF injection       |\n|                     |                  |          |                   |                        | via an attacker controlled            |\n|                     |                  |          |                   |                        | unescaped part of uri for...          |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-11078 |\n+                     +------------------+----------+                   +                        +---------------------------------------+\n|                     | pyup.io-38303    | UNKNOWN  |                   |                        | Httplib2 0.18.0 is an                 |\n|                     |                  |          |                   |                        | important security update to          |\n|                     |                  |          |                   |                        | patch a CWE-93 CRLF...                |\n+---------------------+------------------+          +-------------------+------------------------+---------------------------------------+\n| jinja2              | pyup.io-39525    |          | 2.10.1            | 2.11.3                 | This affects the package              |\n|                     |                  |          |                   |                        | jinja2 from 0.0.0 and before          |\n|                     |                  |          |                   |                        | 2.11.3. The ReDOS...                  |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| py                  | CVE-2020-29651   | HIGH     | 1.8.0             |                        | python-py: ReDoS in the py.path.svnwc |\n|                     |                  |          |                   |                        | component via malicious input         |\n|                     |                  |          |                   |                        | to blame functionality...             |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-29651 |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| pyyaml              | CVE-2019-20477   | CRITICAL |               5.1 |                        | PyYAML: command execution             |\n|                     |                  |          |                   |                        | through python/object/apply           |\n|                     |                  |          |                   |                        | constructor in FullLoader             |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2019-20477 |\n+                     +------------------+          +                   +------------------------+---------------------------------------+\n|                     | CVE-2020-14343   |          |                   |                    5.4 | PyYAML: incomplete                    |\n|                     |                  |          |                   |                        | fix for CVE-2020-1747                 |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-14343 |\n+                     +------------------+          +                   +------------------------+---------------------------------------+\n|                     | CVE-2020-1747    |          |                   | 5.3.1                  | PyYAML: arbitrary command             |\n|                     |                  |          |                   |                        | execution through python/object/new   |\n|                     |                  |          |                   |                        | when FullLoader is used               |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-1747  |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n| urllib3             | CVE-2019-11324   | HIGH     | 1.24.1            | 1.24.2                 | python-urllib3: Certification         |\n|                     |                  |          |                   |                        | mishandle when error should be thrown |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2019-11324 |\n+                     +------------------+----------+                   +------------------------+---------------------------------------+\n|                     | CVE-2019-11236   | MEDIUM   |                   |                        | python-urllib3: CRLF injection        |\n|                     |                  |          |                   |                        | due to not encoding the               |\n|                     |                  |          |                   |                        | '\\r\\n' sequence leading to...         |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2019-11236 |\n+                     +------------------+          +                   +------------------------+---------------------------------------+\n|                     | CVE-2020-26137   |          |                   | 1.25.9                 | python-urllib3: CRLF injection        |\n|                     |                  |          |                   |                        | via HTTP request method               |\n|                     |                  |          |                   |                        | --&gt;avd.aquasec.com/nvd/cve-2020-26137 |\n+---------------------+------------------+----------+-------------------+------------------------+---------------------------------------+\n</code></pre>","title":"Git Repository"},{"location":"docs/vulnerability/scanning/git-repository/#scanning-a-branch","text":"<p>Pass a <code>--branch</code> agrument with a valid branch name on the remote repository provided:</p> <pre><code>$ trivy repo --branch &lt;branch-name&gt; &lt;repo-name&gt;\n</code></pre>","title":"Scanning a Branch"},{"location":"docs/vulnerability/scanning/git-repository/#scanning-upto-a-commit","text":"<p>Pass a <code>--commit</code> agrument with a valid commit hash on the remote repository provided:</p> <pre><code>$ trivy repo --commit &lt;commit-hash&gt; &lt;repo-name&gt;\n</code></pre>","title":"Scanning upto a Commit"},{"location":"docs/vulnerability/scanning/git-repository/#scanning-a-tag","text":"<p>Pass a <code>--tag</code> agrument with a valid tag on the remote repository provided:</p> <pre><code>$ trivy repo --tag &lt;tag-name&gt; &lt;repo-name&gt;\n</code></pre>","title":"Scanning a Tag"},{"location":"docs/vulnerability/scanning/git-repository/#scanning-private-repositories","text":"<p>In order to scan private GitHub or GitLab repositories, the environment variable <code>GITHUB_TOKEN</code> or <code>GITLAB_TOKEN</code> must be set, respectively, with a valid token that has access to the private repository being scanned.</p> <p>The <code>GITHUB_TOKEN</code> environment variable will take precedence over <code>GITLAB_TOKEN</code>, so if a private GitLab repository will be scanned, then <code>GITHUB_TOKEN</code> must be unset.</p> <p>For example:</p> <pre><code>$ export GITHUB_TOKEN=\"your_private_github_token\"\n$ trivy repo &lt;your private GitHub repo URL&gt;\n$\n$ # or\n$ export GITLAB_TOKEN=\"your_private_gitlab_token\"\n$ trivy repo &lt;your private GitLab repo URL&gt;\n</code></pre>","title":"Scanning Private Repositories"},{"location":"docs/vulnerability/scanning/image/","text":"","title":"Image"},{"location":"docs/vulnerability/scanning/image/#container-images","text":"<p>Simply specify an image name (and a tag).</p> <pre><code>$ trivy image [YOUR_IMAGE_NAME]\n</code></pre> <p>For example:</p> <pre><code>$ trivy image python:3.4-alpine\n</code></pre>  Result <pre><code>2019-05-16T01:20:43.180+0900    INFO    Updating vulnerability database...\n2019-05-16T01:20:53.029+0900    INFO    Detecting Alpine vulnerabilities...\n\npython:3.4-alpine3.9 (alpine 3.9.2)\n===================================\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\n\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| LIBRARY | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |             TITLE              |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| openssl | CVE-2019-1543    | MEDIUM   | 1.1.1a-r1         | 1.1.1b-r1     | openssl: ChaCha20-Poly1305     |\n|         |                  |          |                   |               | with long nonces               |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n</code></pre>","title":"Container Images"},{"location":"docs/vulnerability/scanning/image/#tar-files","text":"<pre><code>$ docker pull ruby:3.1-alpine3.15\n$ docker save ruby:3.1-alpine3.15 -o ruby-3.1.tar\n$ trivy image --input ruby-3.1.tar\n</code></pre>  Result <pre><code>2022-02-03T10:08:19.127Z        INFO    Detected OS: alpine\n2022-02-03T10:08:19.127Z        WARN    This OS version is not on the EOL list: alpine 3.15\n2022-02-03T10:08:19.127Z        INFO    Detecting Alpine vulnerabilities...\n2022-02-03T10:08:19.127Z        INFO    Number of language-specific files: 2\n2022-02-03T10:08:19.127Z        INFO    Detecting gemspec vulnerabilities...\n2022-02-03T10:08:19.128Z        INFO    Detecting node-pkg vulnerabilities...\n2022-02-03T10:08:19.128Z        WARN    This OS version is no longer supported by the distribution: alpine 3.15.0\n2022-02-03T10:08:19.128Z        WARN    The vulnerability detection may be insufficient because security updates are not provided\n\nruby-3.1.tar (alpine 3.15.0)\n============================\nTotal: 3 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 3, CRITICAL: 0)\n\n+----------+------------------+----------+-------------------+---------------+---------------------------------------+\n| LIBRARY  | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |                 TITLE                 |\n+----------+------------------+----------+-------------------+---------------+---------------------------------------+\n| gmp      | CVE-2021-43618   | HIGH     | 6.2.1-r0          | 6.2.1-r1      | gmp: Integer overflow and resultant   |\n|          |                  |          |                   |               | buffer overflow via crafted input     |\n|          |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-43618 |\n+----------+                  +          +                   +               +                                       +\n| gmp-dev  |                  |          |                   |               |                                       |\n|          |                  |          |                   |               |                                       |\n|          |                  |          |                   |               |                                       |\n+----------+                  +          +                   +               +                                       +\n| libgmpxx |                  |          |                   |               |                                       |\n|          |                  |          |                   |               |                                       |\n|          |                  |          |                   |               |                                       |\n+----------+------------------+----------+-------------------+---------------+---------------------------------------+\n\nNode.js (node-pkg)\n==================\nTotal: 0 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n\n\nRuby (gemspec)\n==============\nTotal: 0 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 0)\n</code></pre>","title":"Tar Files"},{"location":"docs/vulnerability/scanning/rootfs/","text":"<p>Scan a root filesystem (such as a host machine, a virtual machine image, or an unpacked container image filesystem).</p> <pre><code>$ trivy rootfs /path/to/rootfs\n</code></pre>","title":"Rootfs"},{"location":"docs/vulnerability/scanning/rootfs/#from-inside-containers","text":"<p>Scan your container from inside the container.</p> <pre><code>$ docker run --rm -it alpine:3.11\n/ # curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin\n/ # trivy rootfs /\n</code></pre>  Result <pre><code>2021-03-08T05:22:26.378Z        INFO    Need to update DB\n2021-03-08T05:22:26.380Z        INFO    Downloading DB...\n20.37 MiB / 20.37 MiB [-------------------------------------------------------------------------------------------------------------------------------------] 100.00% 8.24 MiB p/s 2s\n2021-03-08T05:22:30.134Z        INFO    Detecting Alpine vulnerabilities...\n2021-03-08T05:22:30.138Z        INFO    Trivy skips scanning programming language libraries because no supported file was detected\n\n313430f09696 (alpine 3.11.7)\n============================\nTotal: 6 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 6, CRITICAL: 0)\n\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n|   LIBRARY    | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |                 TITLE                 |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n| libcrypto1.1 | CVE-2021-23839   | HIGH     | 1.1.1i-r0         | 1.1.1j-r0     | openssl: incorrect SSLv2              |\n|              |                  |          |                   |               | rollback protection                   |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23839 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23840   |          |                   |               | openssl: integer                      |\n|              |                  |          |                   |               | overflow in CipherUpdate              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23840 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23841   |          |                   |               | openssl: NULL pointer dereference     |\n|              |                  |          |                   |               | in X509_issuer_and_serial_hash()      |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23841 |\n+--------------+------------------+          +                   +               +---------------------------------------+\n| libssl1.1    | CVE-2021-23839   |          |                   |               | openssl: incorrect SSLv2              |\n|              |                  |          |                   |               | rollback protection                   |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23839 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23840   |          |                   |               | openssl: integer                      |\n|              |                  |          |                   |               | overflow in CipherUpdate              |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23840 |\n+              +------------------+          +                   +               +---------------------------------------+\n|              | CVE-2021-23841   |          |                   |               | openssl: NULL pointer dereference     |\n|              |                  |          |                   |               | in X509_issuer_and_serial_hash()      |\n|              |                  |          |                   |               | --&gt;avd.aquasec.com/nvd/cve-2021-23841 |\n+--------------+------------------+----------+-------------------+---------------+---------------------------------------+\n</code></pre>","title":"From Inside Containers"},{"location":"docs/vulnerability/scanning/rootfs/#other-examples","text":"<ul> <li>Embed in Dockerfile</li> <li>Unpacked container image filesystem</li> </ul>","title":"Other Examples"},{"location":"getting-started/further/","text":"","title":"Further Reading"},{"location":"getting-started/further/#presentations","text":"<ul> <li>Aqua Security YouTube Channel<ul> <li>Trivy - container image scanning</li> <li>Using Trivy in client server mode</li> <li>Tweaking Trivy output to fit your workflow</li> <li>How does a vulnerability scanner identify packages?</li> </ul> </li> <li>CNCF Webinar 2020<ul> <li>Trivy Open Source Scanner for Container Images \u2013 Just Download and Run!</li> </ul> </li> <li>KubeCon + CloudNativeCon Europe 2020 Virtual<ul> <li>Handling Container Vulnerabilities with Open Policy Agent - Teppei Fukuda, Aqua Security</li> </ul> </li> </ul>","title":"Presentations"},{"location":"getting-started/further/#blogs","text":"<ul> <li>Trivy Vulnerability Scanner Joins the Aqua Open-source Family</li> <li>Trivy Image Vulnerability Scanner Now Under Apache 2.0 License</li> <li>DevSecOps with Trivy and GitHub Actions</li> <li>Find Image Vulnerabilities Using GitHub and Aqua Security Trivy Action</li> <li>Using Trivy to Discover Vulnerabilities in VS Code Projects</li> </ul>","title":"Blogs"},{"location":"getting-started/installation/","text":"","title":"Installation"},{"location":"getting-started/installation/#rhelcentos","text":"RepositoryRPM   <p>Add repository setting to <code>/etc/yum.repos.d</code>.</p> <pre><code>RELEASE_VERSION=$(grep -Po '(?&lt;=VERSION_ID=\")[0-9]' /etc/os-release)\ncat &lt;&lt; EOF | sudo tee -a /etc/yum.repos.d/trivy.repo\n[trivy]\nname=Trivy repository\nbaseurl=https://aquasecurity.github.io/trivy-repo/rpm/releases/$RELEASE_VERSION/\\$basearch/\ngpgcheck=0\nenabled=1\nEOF\nsudo yum -y update\nsudo yum -y install trivy\n</code></pre>   <pre><code>rpm -ivh https://github.com/aquasecurity/trivy/releases/download/v0.30.4/trivy_0.30.4_Linux-64bit.rpm\n</code></pre>","title":"RHEL/CentOS"},{"location":"getting-started/installation/#debianubuntu","text":"RepositoryDEB   <p>Add repository setting to <code>/etc/apt/sources.list.d</code>.</p> <pre><code>sudo apt-get install wget apt-transport-https gnupg lsb-release\nwget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg &gt; /dev/null\necho \"deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main\" | sudo tee -a /etc/apt/sources.list.d/trivy.list\nsudo apt-get update\nsudo apt-get install trivy\n</code></pre>   <pre><code>wget https://github.com/aquasecurity/trivy/releases/download/v0.30.4/trivy_0.30.4_Linux-64bit.deb\nsudo dpkg -i trivy_0.30.4_Linux-64bit.deb\n</code></pre>","title":"Debian/Ubuntu"},{"location":"getting-started/installation/#arch-linux","text":"<p>Package trivy-bin can be installed from the Arch User Repository.</p> pikauryay   <pre><code>pikaur -Sy trivy-bin\n</code></pre>   <pre><code>yay -Sy trivy-bin\n</code></pre>","title":"Arch Linux"},{"location":"getting-started/installation/#homebrew","text":"<p>You can use homebrew on macOS and Linux.</p> <pre><code>brew install aquasecurity/trivy/trivy\n</code></pre>","title":"Homebrew"},{"location":"getting-started/installation/#nixnixos","text":"<p>Direct issues installing <code>trivy</code> via <code>nix</code> through the channels mentioned here</p> <p>You can use <code>nix</code> on Linux or macOS and on other platforms unofficially.</p> <p><code>nix-env --install -A nixpkgs.trivy</code></p> <p>Or through your configuration as usual</p> <p>NixOS:</p> <pre><code>  # your other config ...\n  environment.systemPackages = with pkgs; [\n    # your other packages ...\n    trivy\n  ];\n</code></pre> <p>home-manager:</p> <pre><code>  # your other config ...\n  home.packages = with pkgs; [\n    # your other packages ...\n    trivy\n  ];\n</code></pre>","title":"Nix/NixOS"},{"location":"getting-started/installation/#install-script","text":"<p>This script downloads Trivy binary based on your OS and architecture.</p> <pre><code>curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin v0.30.4\n</code></pre>","title":"Install Script"},{"location":"getting-started/installation/#binary","text":"<p>Download the archive file for your operating system/architecture from here.  Unpack the archive, and put the binary somewhere in your <code>$PATH</code> (on UNIX-y systems, /usr/local/bin or the like). Make sure it has execution bits turned on.</p>","title":"Binary"},{"location":"getting-started/installation/#from-source","text":"<pre><code>mkdir -p $GOPATH/src/github.com/aquasecurity\ncd $GOPATH/src/github.com/aquasecurity\ngit clone --depth 1 --branch v0.30.4 https://github.com/aquasecurity/trivy\ncd trivy/cmd/trivy/\nexport GO111MODULE=on\ngo install\n</code></pre>","title":"From source"},{"location":"getting-started/installation/#docker","text":"","title":"Docker"},{"location":"getting-started/installation/#docker-hub","text":"<p>Replace [YOUR_CACHE_DIR] with the cache directory on your machine.</p> <pre><code>docker pull aquasec/trivy:0.30.4\n</code></pre> <p>Example:</p> LinuxmacOS   <pre><code>docker run --rm -v [YOUR_CACHE_DIR]:/root/.cache/ aquasec/trivy:0.30.4 image [YOUR_IMAGE_NAME]\n</code></pre>   <pre><code>docker run --rm -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.30.4 image [YOUR_IMAGE_NAME\n</code></pre>    <p>If you would like to scan the image on your host machine, you need to mount <code>docker.sock</code>.</p> <pre><code>docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \\\n    -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy:0.30.4 python:3.4-alpine\n</code></pre> <p>Please re-pull latest <code>aquasec/trivy</code> if an error occurred.</p>  Result <pre><code>2019-05-16T01:20:43.180+0900    INFO    Updating vulnerability database...\n2019-05-16T01:20:53.029+0900    INFO    Detecting Alpine vulnerabilities...\n\npython:3.4-alpine3.9 (alpine 3.9.2)\n===================================\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\n\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| LIBRARY | VULNERABILITY ID | SEVERITY | INSTALLED VERSION | FIXED VERSION |             TITLE              |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n| openssl | CVE-2019-1543    | MEDIUM   | 1.1.1a-r1         | 1.1.1b-r1     | openssl: ChaCha20-Poly1305     |\n|         |                  |          |                   |               | with long nonces               |\n+---------+------------------+----------+-------------------+---------------+--------------------------------+\n</code></pre>","title":"Docker Hub"},{"location":"getting-started/installation/#github-container-registry","text":"<p>The same image is hosted on GitHub Container Registry as well.</p> <pre><code>docker pull ghcr.io/aquasecurity/trivy:0.30.4\n</code></pre>","title":"GitHub Container Registry"},{"location":"getting-started/installation/#amazon-ecr-public","text":"<p>The same image is hosted on Amazon ECR Public as well.</p> <pre><code>docker pull public.ecr.aws/aquasecurity/trivy:0.30.4\n</code></pre>","title":"Amazon ECR Public"},{"location":"getting-started/installation/#helm","text":"","title":"Helm"},{"location":"getting-started/installation/#installing-from-the-aqua-chart-repository","text":"<pre><code>helm repo add aquasecurity https://aquasecurity.github.io/helm-charts/\nhelm repo update\nhelm search repo trivy\nhelm install my-trivy aquasecurity/trivy\n</code></pre>","title":"Installing from the Aqua Chart Repository"},{"location":"getting-started/installation/#installing-the-chart","text":"<p>To install the chart with the release name <code>my-release</code>:</p> <pre><code>helm install my-release .\n</code></pre> <p>The command deploys Trivy on the Kubernetes cluster in the default configuration. The Parameters section lists the parameters that can be configured during installation.</p>","title":"Installing the Chart"},{"location":"getting-started/installation/#aws-private-registry-permissions","text":"<p>You may need to grant permissions to allow trivy to pull images from private registry (AWS ECR).</p> <p>It depends on how you want to provide AWS Role to trivy.</p> <ul> <li>IAM Role Service account</li> <li>Kube2iam or Kiam</li> </ul>","title":"AWS private registry permissions"},{"location":"getting-started/installation/#iam-role-service-account","text":"<p>Add the AWS role in trivy's service account annotations:</p> <pre><code>trivy:\n\n  serviceAccount:\n    annotations: {}\n      # eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/IAM_ROLE_NAME\n</code></pre>","title":"IAM Role Service account"},{"location":"getting-started/installation/#kube2iam-or-kiam","text":"<p>Add the AWS role to pod's annotations:</p> <pre><code>podAnnotations: {}\n  ## kube2iam/kiam annotation\n  # iam.amazonaws.com/role: arn:aws:iam::ACCOUNT_ID:role/IAM_ROLE_NAME\n</code></pre>  <p>Tip: List all releases using <code>helm list</code>.</p>","title":"Kube2iam or Kiam"},{"location":"getting-started/overview/","text":"<p>Trivy detects three types of security issues:</p> <ul> <li>Vulnerabilities<ul> <li>OS packages (Alpine, Red Hat Universal Base Image, Red Hat Enterprise Linux, CentOS, AlmaLinux, Rocky Linux, CBL-Mariner, Oracle Linux, Debian, Ubuntu, Amazon Linux, openSUSE Leap, SUSE Enterprise Linux, Photon OS and Distroless)</li> <li>Language-specific packages (Bundler, Composer, Pipenv, Poetry, npm, yarn, pnpm, Cargo, NuGet, Maven, and Go)</li> </ul> </li> <li>Misconfigurations<ul> <li>Kubernetes</li> <li>Docker</li> <li>Terraform</li> <li>CloudFormation</li> <li>more coming soon</li> </ul> </li> <li>Secrets<ul> <li>AWS access key</li> <li>GCP service account</li> <li>GitHub personal access token</li> <li>etc.</li> </ul> </li> </ul> <p>Trivy can scan three different artifacts:</p> <ul> <li>Container Images</li> <li>Filesystem</li> <li>Git Repositories</li> </ul> <p>It is designed to be used in CI. Before pushing to a container registry or deploying your application, you can scan your local container image and other artifacts easily. See Integrations for details.</p>","title":"Overview"},{"location":"getting-started/quickstart/","text":"","title":"Quick Start"},{"location":"getting-started/quickstart/#scan-image-for-vulnerabilities-and-secrets","text":"<p>Simply specify an image name (and a tag).</p> <pre><code>$ trivy image [YOUR_IMAGE_NAME]\n</code></pre> <p>For example:</p> <pre><code>$ trivy image myimage:1.0.0\n2022-05-16T13:25:17.826+0100    INFO    Detected OS: alpine\n2022-05-16T13:25:17.826+0100    INFO    Detecting Alpine vulnerabilities...\n2022-05-16T13:25:17.826+0100    INFO    Number of language-specific files: 0\n\nmyimage:1.0.0 (alpine 3.15.3)\n\nTotal: 2 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 2)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  Library   \u2502 Vulnerability  \u2502 Severity \u2502 Installed Version \u2502 Fixed Version \u2502                          Title                          \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502 busybox    \u2502 CVE-2022-28391 \u2502 CRITICAL \u2502 1.34.1-r4         \u2502 1.34.1-r5     \u2502 busybox: remote attackers may execute arbitrary code if \u2502\n\u2502            \u2502                \u2502          \u2502                   \u2502               \u2502 netstat is used                                         \u2502\n\u2502            \u2502                \u2502          \u2502                   \u2502               \u2502 https://avd.aquasec.com/nvd/cve-2022-28391              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524                \u2502          \u2502                   \u2502               \u2502                                                         \u2502\n\u2502 ssl_client \u2502                \u2502          \u2502                   \u2502               \u2502                                                         \u2502\n\u2502            \u2502                \u2502          \u2502                   \u2502               \u2502                                                         \u2502\n\u2502            \u2502                \u2502          \u2502                   \u2502               \u2502                                                         \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\napp/deploy.sh (secrets)\n\nTotal: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 0, HIGH: 0, CRITICAL: 1)\n\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Category \u2502    Description    \u2502 Severity \u2502 Line No \u2502             Match              \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502   AWS    \u2502 AWS Access Key ID \u2502 CRITICAL \u2502    3    \u2502 export AWS_ACCESS_KEY_ID=***** \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre> <p>For more details, see vulnerability and secret pages.</p>","title":"Scan image for vulnerabilities and secrets"},{"location":"getting-started/quickstart/#scan-directory-for-misconfigurations","text":"<p>Simply specify a directory containing IaC files such as Terraform and Dockerfile.</p> <pre><code>$ trivy config [YOUR_IAC_DIR]\n</code></pre> <p>For example:</p> <pre><code>$ ls build/\nDockerfile\n$ trivy config ./build\n2022-05-16T13:29:29.952+0100    INFO    Detected config files: 1\n\nDockerfile (dockerfile)\n=======================\nTests: 23 (SUCCESSES: 22, FAILURES: 1, EXCEPTIONS: 0)\nFailures: 1 (UNKNOWN: 0, LOW: 0, MEDIUM: 1, HIGH: 0, CRITICAL: 0)\n\nMEDIUM: Specify a tag in the 'FROM' statement for image 'alpine'\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nWhen using a 'FROM' statement you should use a specific tag to avoid uncontrolled behavior when the image is updated.\n\nSee https://avd.aquasec.com/misconfig/ds001\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n Dockerfile:1\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n   1 [ FROM alpine:latest\n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\n</code></pre> <p>For more details, see here.</p>","title":"Scan directory for misconfigurations"}]}